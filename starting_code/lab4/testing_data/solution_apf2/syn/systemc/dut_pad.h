// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_pad_HH_
#define _dut_pad_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_urem_13ns_13ns_13_17_seq.h"

namespace ap_rtl {

struct dut_pad : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<1> > input_0_q0;
    sc_out< sc_lv<12> > input_1_address0;
    sc_out< sc_logic > input_1_ce0;
    sc_in< sc_lv<1> > input_1_q0;
    sc_out< sc_lv<12> > output_0_address0;
    sc_out< sc_logic > output_0_ce0;
    sc_out< sc_logic > output_0_we0;
    sc_out< sc_lv<1> > output_0_d0;
    sc_out< sc_lv<12> > output_1_address0;
    sc_out< sc_logic > output_1_ce0;
    sc_out< sc_logic > output_1_we0;
    sc_out< sc_lv<1> > output_1_d0;
    sc_in< sc_lv<7> > M;
    sc_in< sc_lv<6> > I;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<13> > ap_var_for_const0;


    // Module declarations
    dut_pad(sc_module_name name);
    SC_HAS_PROCESS(dut_pad);

    ~dut_pad();

    sc_trace_file* mVcdFile;

    dut_urem_13ns_13ns_13_17_seq<1,17,13,13,13>* dut_urem_13ns_13ns_13_17_seq_U1;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_40;
    sc_signal< sc_lv<13> > tmp_cast5_cast_fu_210_p1;
    sc_signal< sc_lv<13> > tmp_cast5_cast_reg_439;
    sc_signal< sc_lv<9> > tmp_cast_cast_fu_214_p1;
    sc_signal< sc_lv<9> > tmp_cast_cast_reg_444;
    sc_signal< sc_lv<13> > i_1_fu_224_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_91;
    sc_signal< sc_lv<6> > tmp_3_fu_256_p1;
    sc_signal< sc_lv<6> > tmp_3_reg_460;
    sc_signal< sc_lv<1> > exitcond1_fu_218_p2;
    sc_signal< sc_lv<8> > I_cast6_fu_259_p1;
    sc_signal< sc_lv<8> > I_cast6_reg_465;
    sc_signal< sc_lv<12> > I_cast_fu_262_p1;
    sc_signal< sc_lv<12> > I_cast_reg_470;
    sc_signal< sc_lv<8> > next_mul_fu_265_p2;
    sc_signal< sc_lv<8> > next_mul_reg_475;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_111;
    sc_signal< sc_lv<5> > m_1_fu_283_p2;
    sc_signal< sc_lv<5> > m_1_reg_483;
    sc_signal< sc_lv<9> > tmp_4_fu_289_p2;
    sc_signal< sc_lv<9> > tmp_4_reg_488;
    sc_signal< sc_lv<1> > tmp_2_fu_278_p2;
    sc_signal< sc_lv<12> > x_cast2_fu_294_p1;
    sc_signal< sc_lv<12> > x_cast2_reg_493;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_128;
    sc_signal< sc_lv<5> > x_1_fu_307_p2;
    sc_signal< sc_lv<5> > x_1_reg_501;
    sc_signal< sc_lv<13> > tmp_6_cast_fu_313_p1;
    sc_signal< sc_lv<13> > tmp_6_cast_reg_506;
    sc_signal< sc_lv<1> > tmp_5_fu_302_p2;
    sc_signal< sc_lv<5> > y_1_fu_330_p2;
    sc_signal< sc_lv<5> > y_1_reg_514;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_145;
    sc_signal< sc_lv<12> > tmp2_fu_346_p2;
    sc_signal< sc_lv<12> > tmp2_reg_519;
    sc_signal< sc_lv<1> > exitcond_fu_325_p2;
    sc_signal< sc_lv<9> > tmp9_fu_355_p2;
    sc_signal< sc_lv<9> > tmp9_reg_524;
    sc_signal< sc_lv<13> > o_index_fu_372_p2;
    sc_signal< sc_lv<13> > o_index_reg_529;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_161;
    sc_signal< sc_lv<1> > tmp_11_fu_377_p2;
    sc_signal< sc_lv<1> > tmp_11_reg_535;
    sc_signal< sc_lv<1> > input_load_phi_fu_403_p3;
    sc_signal< sc_lv<1> > input_load_phi_reg_550;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_176;
    sc_signal< sc_lv<1> > tmp_6_fu_415_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_556;
    sc_signal< sc_lv<13> > i_reg_144;
    sc_signal< sc_lv<5> > m_reg_155;
    sc_signal< sc_lv<8> > phi_mul_reg_166;
    sc_signal< sc_lv<5> > x_reg_178;
    sc_signal< sc_lv<5> > y_reg_189;
    sc_signal< sc_logic > ap_sig_cseq_ST_st23_fsm_22;
    sc_signal< bool > ap_sig_202;
    sc_signal< sc_lv<64> > newIndex2_fu_250_p1;
    sc_signal< sc_lv<64> > newIndex3_fu_397_p1;
    sc_signal< sc_lv<64> > newIndex4_fu_420_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_230_p2;
    sc_signal< sc_lv<5> > tmp_1_fu_200_p1;
    sc_signal< sc_lv<5> > tmp_s_fu_204_p2;
    sc_signal< sc_lv<13> > tmp_10_fu_236_p2;
    sc_signal< sc_lv<13> > newIndex1_fu_242_p3;
    sc_signal< sc_lv<6> > m_cast_fu_274_p1;
    sc_signal< sc_lv<5> > tmp_4_fu_289_p0;
    sc_signal< sc_lv<5> > tmp_4_fu_289_p1;
    sc_signal< sc_lv<6> > x_cast_fu_298_p1;
    sc_signal< sc_lv<6> > y_cast_fu_321_p1;
    sc_signal< sc_lv<8> > y_cast1_fu_317_p1;
    sc_signal< sc_lv<8> > tmp_fu_336_p2;
    sc_signal< sc_lv<8> > tmp2_fu_346_p0;
    sc_signal< sc_lv<6> > tmp2_fu_346_p1;
    sc_signal< sc_lv<9> > y_1_cast_fu_351_p1;
    sc_signal< sc_lv<9> > tmp1_fu_367_p0;
    sc_signal< sc_lv<5> > tmp1_fu_367_p1;
    sc_signal< sc_lv<13> > tmp1_fu_367_p2;
    sc_signal< sc_lv<12> > i_index_fu_360_p2;
    sc_signal< sc_lv<12> > tmp_12_fu_383_p2;
    sc_signal< sc_lv<12> > newIndex_fu_389_p3;
    sc_signal< sc_lv<13> > grp_fu_410_p2;
    sc_signal< sc_logic > grp_fu_410_ap_start;
    sc_signal< sc_logic > grp_fu_410_ap_done;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    sc_signal< sc_lv<13> > tmp1_fu_367_p00;
    sc_signal< sc_lv<12> > tmp2_fu_346_p00;
    sc_signal< sc_lv<9> > tmp_4_fu_289_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_st1_fsm_0;
    static const sc_lv<23> ap_ST_st2_fsm_1;
    static const sc_lv<23> ap_ST_st3_fsm_2;
    static const sc_lv<23> ap_ST_st4_fsm_3;
    static const sc_lv<23> ap_ST_st5_fsm_4;
    static const sc_lv<23> ap_ST_st6_fsm_5;
    static const sc_lv<23> ap_ST_st7_fsm_6;
    static const sc_lv<23> ap_ST_st8_fsm_7;
    static const sc_lv<23> ap_ST_st9_fsm_8;
    static const sc_lv<23> ap_ST_st10_fsm_9;
    static const sc_lv<23> ap_ST_st11_fsm_10;
    static const sc_lv<23> ap_ST_st12_fsm_11;
    static const sc_lv<23> ap_ST_st13_fsm_12;
    static const sc_lv<23> ap_ST_st14_fsm_13;
    static const sc_lv<23> ap_ST_st15_fsm_14;
    static const sc_lv<23> ap_ST_st16_fsm_15;
    static const sc_lv<23> ap_ST_st17_fsm_16;
    static const sc_lv<23> ap_ST_st18_fsm_17;
    static const sc_lv<23> ap_ST_st19_fsm_18;
    static const sc_lv<23> ap_ST_st20_fsm_19;
    static const sc_lv<23> ap_ST_st21_fsm_20;
    static const sc_lv<23> ap_ST_st22_fsm_21;
    static const sc_lv<23> ap_ST_st23_fsm_22;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<13> ap_const_lv13_1440;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<13> ap_const_lv13_A20;
    static const sc_lv<13> ap_const_lv13_15E0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<12> ap_const_lv12_A20;
    static const sc_lv<12> ap_const_lv12_5E0;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_I_cast6_fu_259_p1();
    void thread_I_cast_fu_262_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_111();
    void thread_ap_sig_128();
    void thread_ap_sig_145();
    void thread_ap_sig_161();
    void thread_ap_sig_176();
    void thread_ap_sig_202();
    void thread_ap_sig_40();
    void thread_ap_sig_91();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st23_fsm_22();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_exitcond1_fu_218_p2();
    void thread_exitcond_fu_325_p2();
    void thread_grp_fu_410_ap_start();
    void thread_i_1_fu_224_p2();
    void thread_i_index_fu_360_p2();
    void thread_input_0_address0();
    void thread_input_0_ce0();
    void thread_input_1_address0();
    void thread_input_1_ce0();
    void thread_input_load_phi_fu_403_p3();
    void thread_m_1_fu_283_p2();
    void thread_m_cast_fu_274_p1();
    void thread_newIndex1_fu_242_p3();
    void thread_newIndex2_fu_250_p1();
    void thread_newIndex3_fu_397_p1();
    void thread_newIndex4_fu_420_p1();
    void thread_newIndex_fu_389_p3();
    void thread_next_mul_fu_265_p2();
    void thread_o_index_fu_372_p2();
    void thread_output_0_address0();
    void thread_output_0_ce0();
    void thread_output_0_d0();
    void thread_output_0_we0();
    void thread_output_1_address0();
    void thread_output_1_ce0();
    void thread_output_1_d0();
    void thread_output_1_we0();
    void thread_tmp1_fu_367_p0();
    void thread_tmp1_fu_367_p00();
    void thread_tmp1_fu_367_p1();
    void thread_tmp1_fu_367_p2();
    void thread_tmp2_fu_346_p0();
    void thread_tmp2_fu_346_p00();
    void thread_tmp2_fu_346_p1();
    void thread_tmp2_fu_346_p2();
    void thread_tmp9_fu_355_p2();
    void thread_tmp_10_fu_236_p2();
    void thread_tmp_11_fu_377_p2();
    void thread_tmp_12_fu_383_p2();
    void thread_tmp_1_fu_200_p1();
    void thread_tmp_2_fu_278_p2();
    void thread_tmp_3_fu_256_p1();
    void thread_tmp_4_fu_289_p0();
    void thread_tmp_4_fu_289_p00();
    void thread_tmp_4_fu_289_p1();
    void thread_tmp_4_fu_289_p2();
    void thread_tmp_5_fu_302_p2();
    void thread_tmp_6_cast_fu_313_p1();
    void thread_tmp_6_fu_415_p2();
    void thread_tmp_9_fu_230_p2();
    void thread_tmp_cast5_cast_fu_210_p1();
    void thread_tmp_cast_cast_fu_214_p1();
    void thread_tmp_fu_336_p2();
    void thread_tmp_s_fu_204_p2();
    void thread_x_1_fu_307_p2();
    void thread_x_cast2_fu_294_p1();
    void thread_x_cast_fu_298_p1();
    void thread_y_1_cast_fu_351_p1();
    void thread_y_1_fu_330_p2();
    void thread_y_cast1_fu_317_p1();
    void thread_y_cast_fu_321_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
