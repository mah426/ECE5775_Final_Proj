

================================================================
== Vivado HLS Report for 'dut_conv'
================================================================
* Date:           Fri Oct 28 23:28:23 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        bnn.prj
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.47|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+----------+-------+----------+---------+
    |      Latency     |     Interval     | Pipeline|
    |  min  |    max   |  min  |    max   |   Type  |
    +-------+----------+-------+----------+---------+
    |  33057|  23643201|  33057|  23643201|   none  |
    +-------+----------+-------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+-------+----------+---------------+-----------+-----------+---------+----------+
        |               |      Latency     |   Iteration   |  Initiation Interval  |   Trip  |          |
        |   Loop Name   |  min  |    max   |    Latency    |  achieved |   target  |  Count  | Pipelined|
        +---------------+-------+----------+---------------+-----------+-----------+---------+----------+
        |- LOOP_N       |  33056|  23643200| 2066 ~ 738850 |          -|          -| 16 ~ 32 |    no    |
        | + LOOP_X      |   2064|    738848|  258 ~ 46178  |          -|          -|  8 ~ 16 |    no    |
        |  ++ LOOP_Y    |    256|     46176|   32 ~ 2886   |          -|          -|  8 ~ 16 |    no    |
        |   +++ LOOP_M  |     10|      2864|    10 ~ 179   |          -|          -|  1 ~ 16 |    no    |
        +---------------+-------+----------+---------------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 204
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_s)
3 --> 
	4  / (!exitcond)
	2  / (exitcond)
4 --> 
	5  / (!exitcond3)
	3  / (exitcond3)
5 --> 
	6  / true
6 --> 
	186  / (!tmp_27)
	7  / (tmp_27 & sel_tmp1_i)
	25  / (tmp_27 & !sel_tmp1_i)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / (sel_tmp1_i8)
	45  / (!sel_tmp1_i8)
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / (sel_tmp1_i1)
	65  / (!sel_tmp1_i1)
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / (sel_tmp1_i2)
	84  / (!sel_tmp1_i2)
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / (sel_tmp1_i3)
	104  / (!sel_tmp1_i3)
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / (sel_tmp1_i4)
	124  / (!sel_tmp1_i4)
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / true
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / true
123 --> 
	124  / true
124 --> 
	125  / (sel_tmp1_i5)
	143  / (!sel_tmp1_i5)
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / true
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / true
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / (sel_tmp1_i6)
	163  / (!sel_tmp1_i6)
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / true
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / true
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	163  / true
163 --> 
	164  / (sel_tmp1_i7)
	185  / (!sel_tmp1_i7)
164 --> 
	165  / true
165 --> 
	166  / true
166 --> 
	167  / true
167 --> 
	168  / true
168 --> 
	169  / true
169 --> 
	170  / true
170 --> 
	171  / true
171 --> 
	172  / true
172 --> 
	173  / true
173 --> 
	174  / true
174 --> 
	175  / true
175 --> 
	176  / true
176 --> 
	177  / true
177 --> 
	178  / true
178 --> 
	179  / true
179 --> 
	180  / true
180 --> 
	181  / true
181 --> 
	182  / true
182 --> 
	183  / (!L_read)
	184  / (L_read)
183 --> 
	185  / true
184 --> 
	185  / true
185 --> 
	6  / true
186 --> 
	187  / true
187 --> 
	188  / true
188 --> 
	189  / true
189 --> 
	190  / true
190 --> 
	191  / true
191 --> 
	192  / true
192 --> 
	193  / true
193 --> 
	194  / true
194 --> 
	195  / true
195 --> 
	196  / true
196 --> 
	197  / true
197 --> 
	198  / true
198 --> 
	199  / true
199 --> 
	200  / true
200 --> 
	201  / true
201 --> 
	202  / true
202 --> 
	203  / true
203 --> 
	204  / true
204 --> 
	4  / true
* FSM state operations: 

 <State 1>: 2.76ns
ST_1: L_read [1/1] 1.04ns
:0  %L_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %L)

ST_1: I_read [1/1] 1.04ns
:1  %I_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %I)

ST_1: N_read [1/1] 1.04ns
:2  %N_read = call i7 @_ssdm_op_Read.ap_auto.i7(i7 %N)

ST_1: M_read [1/1] 1.04ns
:3  %M_read = call i7 @_ssdm_op_Read.ap_auto.i7(i7 %M)

ST_1: tmp_47 [1/1] 0.00ns
:4  %tmp_47 = trunc i6 %I_read to i5

ST_1: O [1/1] 1.72ns
:5  %O = add i5 -2, %tmp_47

ST_1: O_cast106_cast [1/1] 0.00ns
:6  %O_cast106_cast = zext i5 %O to i13

ST_1: O_cast105_cast [1/1] 0.00ns
:7  %O_cast105_cast = zext i5 %O to i9

ST_1: tmp_48 [1/1] 0.00ns
:8  %tmp_48 = trunc i7 %M_read to i6

ST_1: I_cast5 [1/1] 0.00ns
:9  %I_cast5 = zext i6 %I_read to i9

ST_1: N_cast [1/1] 0.00ns
:10  %N_cast = zext i7 %N_read to i9

ST_1: tmp_i [1/1] 1.72ns
:11  %tmp_i = add i5 -1, %tmp_47

ST_1: I_cast7 [1/1] 0.00ns
:12  %I_cast7 = zext i6 %I_read to i13

ST_1: stg_218 [1/1] 1.57ns
:13  br label %1


 <State 2>: 6.38ns
ST_2: n [1/1] 0.00ns
:0  %n = phi i6 [ 0, %0 ], [ %n_2, %48 ]

ST_2: n_cast [1/1] 0.00ns
:1  %n_cast = zext i6 %n to i7

ST_2: tmp_s [1/1] 1.97ns
:2  %tmp_s = icmp slt i7 %n_cast, %N_read

ST_2: n_2 [1/1] 1.72ns
:3  %n_2 = add i6 %n, 1

ST_2: stg_223 [1/1] 0.00ns
:4  br i1 %tmp_s, label %2, label %49

ST_2: n_cast1 [1/1] 0.00ns
:0  %n_cast1 = zext i6 %n to i9

ST_2: empty [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 32, i64 0)

ST_2: stg_226 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str8) nounwind

ST_2: tmp [1/1] 0.00ns
:3  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str8)

ST_2: stg_228 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind

ST_2: tmp_23 [1/1] 6.38ns
:5  %tmp_23 = mul i9 %n_cast1, %O_cast105_cast

ST_2: stg_230 [1/1] 1.57ns
:6  br label %3

ST_2: stg_231 [1/1] 0.00ns
:0  ret void


 <State 3>: 3.63ns
ST_3: x_assign [1/1] 0.00ns
:0  %x_assign = phi i5 [ 0, %2 ], [ %x, %47 ]

ST_3: x_cast [1/1] 0.00ns
:1  %x_cast = zext i5 %x_assign to i13

ST_3: empty_33 [1/1] 0.00ns
:2  %empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 16, i64 0)

ST_3: exitcond [1/1] 1.91ns
:3  %exitcond = icmp eq i5 %x_assign, %O

ST_3: x [1/1] 1.72ns
:4  %x = add i5 %x_assign, 1

ST_3: stg_237 [1/1] 0.00ns
:5  br i1 %exitcond, label %48, label %4

ST_3: stg_238 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str9) nounwind

ST_3: tmp_25 [1/1] 0.00ns
:1  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str9)

ST_3: tmp_51_1_cast1 [1/1] 0.00ns
:2  %tmp_51_1_cast1 = zext i5 %x to i13

ST_3: x_assign_2 [1/1] 1.72ns
:3  %x_assign_2 = add i5 %x_assign, 2

ST_3: tmp_51_2_cast1 [1/1] 0.00ns
:4  %tmp_51_2_cast1 = zext i5 %x_assign_2 to i13

ST_3: notlhs_i [1/1] 1.91ns
:5  %notlhs_i = icmp ugt i5 %tmp_i, %x_assign

ST_3: sel_tmp_i [1/1] 1.91ns
:6  %sel_tmp_i = icmp ne i5 %x_assign, 0

ST_3: notlhs_i3 [1/1] 1.91ns
:7  %notlhs_i3 = icmp ugt i5 %tmp_i, %x

ST_3: sel_tmp_i2 [1/1] 1.91ns
:8  %sel_tmp_i2 = icmp ne i5 %x, 0

ST_3: notlhs_i6 [1/1] 1.91ns
:9  %notlhs_i6 = icmp ugt i5 %tmp_i, %x_assign_2

ST_3: sel_tmp_i5 [1/1] 1.91ns
:10  %sel_tmp_i5 = icmp ne i5 %x_assign_2, 0

ST_3: stg_249 [1/1] 1.57ns
:11  br label %5

ST_3: empty_38 [1/1] 0.00ns
:0  %empty_38 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str8, i32 %tmp)

ST_3: stg_251 [1/1] 0.00ns
:1  br label %1


 <State 4>: 8.22ns
ST_4: y_assign [1/1] 0.00ns
:0  %y_assign = phi i5 [ 0, %4 ], [ %y, %46 ]

ST_4: y_cast [1/1] 0.00ns
:1  %y_cast = zext i5 %y_assign to i9

ST_4: exitcond3 [1/1] 1.91ns
:2  %exitcond3 = icmp eq i5 %y_assign, %O

ST_4: empty_34 [1/1] 0.00ns
:3  %empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 16, i64 0)

ST_4: y [1/1] 1.72ns
:4  %y = add i5 %y_assign, 1

ST_4: stg_257 [1/1] 0.00ns
:5  br i1 %exitcond3, label %47, label %6

ST_4: tmp4 [1/1] 1.84ns
:2  %tmp4 = add i9 %y_cast, %tmp_23

ST_4: tmp4_cast_cast [1/1] 0.00ns
:3  %tmp4_cast_cast = zext i9 %tmp4 to i13

ST_4: tmp5 [1/1] 6.38ns
:4  %tmp5 = mul i13 %tmp4_cast_cast, %O_cast106_cast

ST_4: y_assign_2 [1/1] 1.72ns
:6  %y_assign_2 = add i5 %y_assign, 2

ST_4: notrhs_i [1/1] 1.91ns
:7  %notrhs_i = icmp ne i5 %y_assign, 0

ST_4: tmp_5_i [1/1] 1.91ns
:8  %tmp_5_i = icmp ugt i5 %tmp_i, %y_assign

ST_4: notrhs_i3 [1/1] 1.91ns
:12  %notrhs_i3 = icmp ne i5 %y, 0

ST_4: tmp_5_i5 [1/1] 1.91ns
:13  %tmp_5_i5 = icmp ugt i5 %tmp_i, %y

ST_4: notrhs_i1 [1/1] 1.91ns
:17  %notrhs_i1 = icmp ne i5 %y_assign_2, 0

ST_4: tmp_5_i1 [1/1] 1.91ns
:18  %tmp_5_i1 = icmp ugt i5 %tmp_i, %y_assign_2

ST_4: empty_37 [1/1] 0.00ns
:0  %empty_37 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str9, i32 %tmp_25)

ST_4: stg_269 [1/1] 0.00ns
:1  br label %3


 <State 5>: 1.96ns
ST_5: stg_270 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str10) nounwind

ST_5: tmp_26 [1/1] 0.00ns
:1  %tmp_26 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str10)

ST_5: o_index [1/1] 1.96ns
:5  %o_index = add i13 %tmp5, %x_cast

ST_5: tmp31 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i)
:9  %tmp31 = and i1 %notrhs_i, %notlhs_i

ST_5: tmp32 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i)
:10  %tmp32 = and i1 %tmp_5_i, %sel_tmp_i

ST_5: sel_tmp1_i [1/1] 1.37ns (out node of the LUT)
:11  %sel_tmp1_i = and i1 %tmp32, %tmp31

ST_5: tmp33 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i8)
:14  %tmp33 = and i1 %notrhs_i3, %notlhs_i

ST_5: tmp34 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i8)
:15  %tmp34 = and i1 %tmp_5_i5, %sel_tmp_i

ST_5: sel_tmp1_i8 [1/1] 1.37ns (out node of the LUT)
:16  %sel_tmp1_i8 = and i1 %tmp34, %tmp33

ST_5: tmp35 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i1)
:19  %tmp35 = and i1 %notrhs_i1, %notlhs_i

ST_5: tmp36 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i1)
:20  %tmp36 = and i1 %tmp_5_i1, %sel_tmp_i

ST_5: sel_tmp1_i1 [1/1] 1.37ns (out node of the LUT)
:21  %sel_tmp1_i1 = and i1 %tmp36, %tmp35

ST_5: tmp37 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i2)
:22  %tmp37 = and i1 %notrhs_i, %notlhs_i3

ST_5: tmp38 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i2)
:23  %tmp38 = and i1 %tmp_5_i, %sel_tmp_i2

ST_5: sel_tmp1_i2 [1/1] 1.37ns (out node of the LUT)
:24  %sel_tmp1_i2 = and i1 %tmp38, %tmp37

ST_5: tmp39 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i3)
:25  %tmp39 = and i1 %notrhs_i3, %notlhs_i3

ST_5: tmp41 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i3)
:26  %tmp41 = and i1 %tmp_5_i5, %sel_tmp_i2

ST_5: sel_tmp1_i3 [1/1] 1.37ns (out node of the LUT)
:27  %sel_tmp1_i3 = and i1 %tmp41, %tmp39

ST_5: tmp42 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i4)
:28  %tmp42 = and i1 %notrhs_i1, %notlhs_i3

ST_5: tmp43 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i4)
:29  %tmp43 = and i1 %tmp_5_i1, %sel_tmp_i2

ST_5: sel_tmp1_i4 [1/1] 1.37ns (out node of the LUT)
:30  %sel_tmp1_i4 = and i1 %tmp43, %tmp42

ST_5: tmp44 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i5)
:31  %tmp44 = and i1 %notrhs_i, %notlhs_i6

ST_5: tmp46 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i5)
:32  %tmp46 = and i1 %tmp_5_i, %sel_tmp_i5

ST_5: sel_tmp1_i5 [1/1] 1.37ns (out node of the LUT)
:33  %sel_tmp1_i5 = and i1 %tmp46, %tmp44

ST_5: tmp47 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i6)
:34  %tmp47 = and i1 %notrhs_i3, %notlhs_i6

ST_5: tmp48 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i6)
:35  %tmp48 = and i1 %tmp_5_i5, %sel_tmp_i5

ST_5: sel_tmp1_i6 [1/1] 1.37ns (out node of the LUT)
:36  %sel_tmp1_i6 = and i1 %tmp48, %tmp47

ST_5: tmp49 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i7)
:37  %tmp49 = and i1 %notrhs_i1, %notlhs_i6

ST_5: tmp50 [1/1] 0.00ns (grouped into LUT with out node sel_tmp1_i7)
:38  %tmp50 = and i1 %tmp_5_i1, %sel_tmp_i5

ST_5: sel_tmp1_i7 [1/1] 1.37ns (out node of the LUT)
:39  %sel_tmp1_i7 = and i1 %tmp50, %tmp49

ST_5: stg_300 [1/1] 1.57ns
:40  br label %7


 <State 6>: 8.22ns
ST_6: sum [1/1] 0.00ns
:0  %sum = phi i32 [ 0, %6 ], [ %sum_1, %._crit_edge.2.2 ]

ST_6: m [1/1] 0.00ns
:1  %m = phi i5 [ 0, %6 ], [ %m_4, %._crit_edge.2.2 ]

ST_6: phi_mul [1/1] 0.00ns
:2  %phi_mul = phi i9 [ 0, %6 ], [ %next_mul, %._crit_edge.2.2 ]

ST_6: phi_mul1 [1/1] 0.00ns
:3  %phi_mul1 = phi i9 [ 0, %6 ], [ %next_mul1, %._crit_edge.2.2 ]

ST_6: m_cast [1/1] 0.00ns
:4  %m_cast = zext i5 %m to i6

ST_6: tmp_27 [1/1] 1.94ns
:5  %tmp_27 = icmp slt i6 %m_cast, %tmp_48

ST_6: empty_35 [1/1] 0.00ns
:6  %empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 16, i64 0)

ST_6: m_4 [1/1] 1.72ns
:7  %m_4 = add i5 %m, 1

ST_6: stg_309 [1/1] 0.00ns
:8  br i1 %tmp_27, label %8, label %45

ST_6: stg_310 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str11) nounwind

ST_6: next_mul [1/1] 1.84ns
:1  %next_mul = add i9 %phi_mul, %I_cast5

ST_6: next_mul1 [1/1] 1.84ns
:2  %next_mul1 = add i9 %phi_mul1, %N_cast

ST_6: tmp_28 [1/1] 1.84ns
:3  %tmp_28 = add i9 %n_cast1, %phi_mul1

ST_6: tmp_34_cast1 [1/1] 0.00ns
:4  %tmp_34_cast1 = zext i9 %tmp_28 to i13

ST_6: p_shl [1/1] 0.00ns
:5  %p_shl = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %tmp_28, i3 0)

ST_6: p_shl_cast [1/1] 0.00ns
:6  %p_shl_cast = zext i12 %p_shl to i13

ST_6: tmp_29 [1/1] 1.84ns
:7  %tmp_29 = add i13 %p_shl_cast, %tmp_34_cast1

ST_6: stg_318 [1/1] 1.57ns
:8  br i1 %sel_tmp1_i, label %11, label %._crit_edge.0.0

ST_6: tmp6 [1/1] 1.84ns
:0  %tmp6 = add i9 %phi_mul, %y_cast

ST_6: tmp6_cast [1/1] 0.00ns
:1  %tmp6_cast = zext i9 %tmp6 to i13

ST_6: tmp7 [1/1] 6.38ns
:2  %tmp7 = mul i13 %I_cast7, %tmp6_cast

ST_6: zext3_cast [1/1] 0.00ns
:0  %zext3_cast = zext i13 %o_index to i28

ST_6: mul3 [1/1] 6.38ns
:1  %mul3 = mul i28 %zext3_cast, 12946

ST_6: tmp_51 [1/1] 0.00ns
:2  %tmp_51 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul3, i32 23, i32 27)

ST_6: newIndex5 [17/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 7>: 8.34ns
ST_7: i_index [1/1] 1.96ns
:3  %i_index = add i13 %tmp7, %x_cast

ST_7: zext_cast [1/1] 0.00ns
:4  %zext_cast = zext i13 %i_index to i28

ST_7: mul [1/1] 6.38ns
:5  %mul = mul i28 %zext_cast, 12946

ST_7: tmp_52 [1/1] 0.00ns
:6  %tmp_52 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul, i32 23, i32 27)

ST_7: newIndex7 [17/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 8>: 3.66ns
ST_8: newIndex7 [16/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 9>: 3.66ns
ST_9: newIndex7 [15/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 10>: 3.66ns
ST_10: newIndex7 [14/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 11>: 3.66ns
ST_11: newIndex7 [13/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 12>: 3.66ns
ST_12: newIndex7 [12/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 13>: 3.66ns
ST_13: newIndex7 [11/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 14>: 3.66ns
ST_14: newIndex7 [10/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 15>: 3.66ns
ST_15: newIndex7 [9/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 16>: 3.66ns
ST_16: newIndex7 [8/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 17>: 3.66ns
ST_17: newIndex7 [7/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 18>: 3.66ns
ST_18: newIndex7 [6/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 19>: 3.66ns
ST_19: newIndex7 [5/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 20>: 3.66ns
ST_20: newIndex7 [4/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 21>: 3.66ns
ST_21: newIndex7 [3/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 22>: 3.66ns
ST_22: newIndex7 [2/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648


 <State 23>: 6.05ns
ST_23: newIndex7 [1/17] 3.66ns
:9  %newIndex7 = urem i13 %i_index, 648

ST_23: newIndex8 [1/1] 0.00ns
:10  %newIndex8 = zext i13 %newIndex7 to i64

ST_23: input_0_addr [1/1] 0.00ns
:11  %input_0_addr = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex8

ST_23: input_0_load [2/2] 2.39ns
:12  %input_0_load = load i1* %input_0_addr, align 1

ST_23: input_1_addr [1/1] 0.00ns
:13  %input_1_addr = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex8

ST_23: input_1_load [2/2] 2.39ns
:14  %input_1_load = load i1* %input_1_addr, align 1

ST_23: input_2_addr [1/1] 0.00ns
:15  %input_2_addr = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex8

ST_23: input_2_load [2/2] 2.39ns
:16  %input_2_load = load i1* %input_2_addr, align 1

ST_23: input_3_addr [1/1] 0.00ns
:17  %input_3_addr = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex8

ST_23: input_3_load [2/2] 2.39ns
:18  %input_3_load = load i1* %input_3_addr, align 1

ST_23: input_4_addr [1/1] 0.00ns
:19  %input_4_addr = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex8

ST_23: input_4_load [2/2] 2.39ns
:20  %input_4_load = load i1* %input_4_addr, align 1

ST_23: input_5_addr [1/1] 0.00ns
:21  %input_5_addr = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex8

ST_23: input_5_load [2/2] 2.39ns
:22  %input_5_load = load i1* %input_5_addr, align 1

ST_23: input_6_addr [1/1] 0.00ns
:23  %input_6_addr = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex8

ST_23: input_6_load [2/2] 2.39ns
:24  %input_6_load = load i1* %input_6_addr, align 1

ST_23: input_7_addr [1/1] 0.00ns
:25  %input_7_addr = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex8

ST_23: input_7_load [2/2] 2.39ns
:26  %input_7_load = load i1* %input_7_addr, align 1


 <State 24>: 4.33ns
ST_24: arrayNo3 [1/1] 0.00ns
:7  %arrayNo3 = sext i5 %tmp_52 to i13

ST_24: arrayNo3_cast [1/1] 0.00ns
:8  %arrayNo3_cast = zext i13 %arrayNo3 to i32

ST_24: input_0_load [1/2] 2.39ns
:12  %input_0_load = load i1* %input_0_addr, align 1

ST_24: input_1_load [1/2] 2.39ns
:14  %input_1_load = load i1* %input_1_addr, align 1

ST_24: input_2_load [1/2] 2.39ns
:16  %input_2_load = load i1* %input_2_addr, align 1

ST_24: input_3_load [1/2] 2.39ns
:18  %input_3_load = load i1* %input_3_addr, align 1

ST_24: input_4_load [1/2] 2.39ns
:20  %input_4_load = load i1* %input_4_addr, align 1

ST_24: input_5_load [1/2] 2.39ns
:22  %input_5_load = load i1* %input_5_addr, align 1

ST_24: input_6_load [1/2] 2.39ns
:24  %input_6_load = load i1* %input_6_addr, align 1

ST_24: input_7_load [1/2] 2.39ns
:26  %input_7_load = load i1* %input_7_addr, align 1

ST_24: tmp_33 [1/1] 1.94ns
:27  %tmp_33 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load, i1 %input_1_load, i1 %input_2_load, i1 %input_3_load, i1 %input_4_load, i1 %input_5_load, i1 %input_6_load, i1 %input_7_load, i32 %arrayNo3_cast)

ST_24: tmp_34 [1/1] 0.00ns
:28  %tmp_34 = zext i13 %tmp_29 to i64

ST_24: stg_376 [1/1] 0.00ns
:29  br i1 %L_read, label %12, label %10

ST_24: w_conv1_addr [1/1] 0.00ns
:0  %w_conv1_addr = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_34

ST_24: w_conv1_load [2/2] 2.39ns
:1  %w_conv1_load = load i1* %w_conv1_addr, align 1

ST_24: w_conv2_addr [1/1] 0.00ns
:0  %w_conv2_addr = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_34

ST_24: w_conv2_load [2/2] 2.39ns
:1  %w_conv2_load = load i1* %w_conv2_addr, align 1


 <State 25>: 8.47ns
ST_25: w_conv1_load [1/2] 2.39ns
:1  %w_conv1_load = load i1* %w_conv1_addr, align 1

ST_25: stg_382 [1/1] 1.57ns
:2  br label %9

ST_25: w_conv2_load [1/2] 2.39ns
:1  %w_conv2_load = load i1* %w_conv2_addr, align 1

ST_25: stg_384 [1/1] 1.57ns
:2  br label %9

ST_25: w_conv1_load_pn [1/1] 0.00ns (grouped into LUT with out node p_pn_in)
:0  %w_conv1_load_pn = phi i1 [ %w_conv1_load, %10 ], [ %w_conv2_load, %12 ]

ST_25: p_pn_in_in [1/1] 0.00ns (grouped into LUT with out node p_pn_in)
:1  %p_pn_in_in = xor i1 %w_conv1_load_pn, %tmp_33

ST_25: p_pn_in [1/1] 1.37ns (out node of the LUT)
:2  %p_pn_in = xor i1 %p_pn_in_in, true

ST_25: stg_388 [1/1] 1.57ns
:3  br label %._crit_edge.0.0

ST_25: one_out_3 [1/1] 0.00ns
._crit_edge.0.0:0  %one_out_3 = phi i1 [ %p_pn_in, %9 ], [ false, %8 ]

ST_25: mac_num_2 [1/1] 0.00ns
._crit_edge.0.0:1  %mac_num_2 = phi i1 [ true, %9 ], [ false, %8 ]

ST_25: one_out_3_cast [1/1] 0.00ns
._crit_edge.0.0:2  %one_out_3_cast = zext i1 %one_out_3 to i2

ST_25: mac_num_2_cast [1/1] 0.00ns
._crit_edge.0.0:3  %mac_num_2_cast = zext i1 %mac_num_2 to i2

ST_25: stg_393 [1/1] 1.57ns
._crit_edge.0.0:4  br i1 %sel_tmp1_i8, label %15, label %._crit_edge.0.1

ST_25: tmp40 [1/1] 1.37ns
:0  %tmp40 = add i9 %phi_mul, 1

ST_25: tmp6_0_1 [1/1] 1.37ns
:1  %tmp6_0_1 = add i9 %y_cast, %tmp40


 <State 26>: 6.38ns
ST_26: tmp6_0_1_cast [1/1] 0.00ns
:2  %tmp6_0_1_cast = zext i9 %tmp6_0_1 to i13

ST_26: tmp7_0_1 [1/1] 6.38ns
:3  %tmp7_0_1 = mul i13 %I_cast7, %tmp6_0_1_cast


 <State 27>: 8.34ns
ST_27: i_index_0_1 [1/1] 1.96ns
:4  %i_index_0_1 = add i13 %tmp7_0_1, %x_cast

ST_27: zext1_cast [1/1] 0.00ns
:6  %zext1_cast = zext i13 %i_index_0_1 to i28

ST_27: mul2 [1/1] 6.38ns
:7  %mul2 = mul i28 %zext1_cast, 12946

ST_27: tmp_53 [1/1] 0.00ns
:8  %tmp_53 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul2, i32 23, i32 27)

ST_27: newIndex1 [17/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 28>: 3.66ns
ST_28: newIndex1 [16/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 29>: 3.66ns
ST_29: newIndex1 [15/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 30>: 3.66ns
ST_30: newIndex1 [14/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 31>: 3.66ns
ST_31: newIndex1 [13/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 32>: 3.66ns
ST_32: newIndex1 [12/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 33>: 3.66ns
ST_33: newIndex1 [11/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 34>: 3.66ns
ST_34: newIndex1 [10/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 35>: 3.66ns
ST_35: newIndex1 [9/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 36>: 3.66ns
ST_36: newIndex1 [8/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 37>: 3.66ns
ST_37: newIndex1 [7/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 38>: 3.66ns
ST_38: newIndex1 [6/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 39>: 3.66ns
ST_39: newIndex1 [5/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 40>: 3.66ns
ST_40: newIndex1 [4/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 41>: 3.66ns
ST_41: newIndex1 [3/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 42>: 3.66ns
ST_42: newIndex1 [2/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648


 <State 43>: 6.05ns
ST_43: newIndex1 [1/17] 3.66ns
:11  %newIndex1 = urem i13 %i_index_0_1, 648

ST_43: newIndex2 [1/1] 0.00ns
:12  %newIndex2 = zext i13 %newIndex1 to i64

ST_43: input_0_addr_515 [1/1] 0.00ns
:13  %input_0_addr_515 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex2

ST_43: input_0_load_515 [2/2] 2.39ns
:14  %input_0_load_515 = load i1* %input_0_addr_515, align 1

ST_43: input_1_addr_4 [1/1] 0.00ns
:15  %input_1_addr_4 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex2

ST_43: input_1_load_4 [2/2] 2.39ns
:16  %input_1_load_4 = load i1* %input_1_addr_4, align 1

ST_43: input_2_addr_4 [1/1] 0.00ns
:17  %input_2_addr_4 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex2

ST_43: input_2_load_4 [2/2] 2.39ns
:18  %input_2_load_4 = load i1* %input_2_addr_4, align 1

ST_43: input_3_addr_4 [1/1] 0.00ns
:19  %input_3_addr_4 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex2

ST_43: input_3_load_4 [2/2] 2.39ns
:20  %input_3_load_4 = load i1* %input_3_addr_4, align 1

ST_43: input_4_addr_4 [1/1] 0.00ns
:21  %input_4_addr_4 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex2

ST_43: input_4_load_4 [2/2] 2.39ns
:22  %input_4_load_4 = load i1* %input_4_addr_4, align 1

ST_43: input_5_addr_4 [1/1] 0.00ns
:23  %input_5_addr_4 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex2

ST_43: input_5_load_4 [2/2] 2.39ns
:24  %input_5_load_4 = load i1* %input_5_addr_4, align 1

ST_43: input_6_addr_4 [1/1] 0.00ns
:25  %input_6_addr_4 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex2

ST_43: input_6_load_4 [2/2] 2.39ns
:26  %input_6_load_4 = load i1* %input_6_addr_4, align 1

ST_43: input_7_addr_4 [1/1] 0.00ns
:27  %input_7_addr_4 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex2

ST_43: input_7_load_4 [2/2] 2.39ns
:28  %input_7_load_4 = load i1* %input_7_addr_4, align 1


 <State 44>: 4.35ns
ST_44: w_index_0_1 [1/1] 1.96ns
:5  %w_index_0_1 = add i13 %tmp_29, 3

ST_44: arrayNo5 [1/1] 0.00ns
:9  %arrayNo5 = sext i5 %tmp_53 to i13

ST_44: arrayNo5_cast [1/1] 0.00ns
:10  %arrayNo5_cast = zext i13 %arrayNo5 to i32

ST_44: input_0_load_515 [1/2] 2.39ns
:14  %input_0_load_515 = load i1* %input_0_addr_515, align 1

ST_44: input_1_load_4 [1/2] 2.39ns
:16  %input_1_load_4 = load i1* %input_1_addr_4, align 1

ST_44: input_2_load_4 [1/2] 2.39ns
:18  %input_2_load_4 = load i1* %input_2_addr_4, align 1

ST_44: input_3_load_4 [1/2] 2.39ns
:20  %input_3_load_4 = load i1* %input_3_addr_4, align 1

ST_44: input_4_load_4 [1/2] 2.39ns
:22  %input_4_load_4 = load i1* %input_4_addr_4, align 1

ST_44: input_5_load_4 [1/2] 2.39ns
:24  %input_5_load_4 = load i1* %input_5_addr_4, align 1

ST_44: input_6_load_4 [1/2] 2.39ns
:26  %input_6_load_4 = load i1* %input_6_addr_4, align 1

ST_44: input_7_load_4 [1/2] 2.39ns
:28  %input_7_load_4 = load i1* %input_7_addr_4, align 1

ST_44: tmp_35 [1/1] 1.94ns
:29  %tmp_35 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_515, i1 %input_1_load_4, i1 %input_2_load_4, i1 %input_3_load_4, i1 %input_4_load_4, i1 %input_5_load_4, i1 %input_6_load_4, i1 %input_7_load_4, i32 %arrayNo5_cast)

ST_44: tmp_60_0_1 [1/1] 0.00ns
:30  %tmp_60_0_1 = zext i13 %w_index_0_1 to i64

ST_44: stg_449 [1/1] 0.00ns
:31  br i1 %L_read, label %16, label %14

ST_44: w_conv1_addr_1 [1/1] 0.00ns
:0  %w_conv1_addr_1 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_0_1

ST_44: w_conv1_load_1 [2/2] 2.39ns
:1  %w_conv1_load_1 = load i1* %w_conv1_addr_1, align 1

ST_44: w_conv2_addr_1 [1/1] 0.00ns
:0  %w_conv2_addr_1 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_0_1

ST_44: w_conv2_load_1 [2/2] 2.39ns
:1  %w_conv2_load_1 = load i1* %w_conv2_addr_1, align 1


 <State 45>: 8.47ns
ST_45: w_conv1_load_1 [1/2] 2.39ns
:1  %w_conv1_load_1 = load i1* %w_conv1_addr_1, align 1

ST_45: stg_455 [1/1] 1.57ns
:2  br label %13

ST_45: w_conv2_load_1 [1/2] 2.39ns
:1  %w_conv2_load_1 = load i1* %w_conv2_addr_1, align 1

ST_45: stg_457 [1/1] 1.57ns
:2  br label %13

ST_45: w_conv1_load_1_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_1)
:0  %w_conv1_load_1_pn = phi i1 [ %w_conv1_load_1, %14 ], [ %w_conv2_load_1, %16 ]

ST_45: p_pn_in_in_0_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_1)
:1  %p_pn_in_in_0_1 = xor i1 %w_conv1_load_1_pn, %tmp_35

ST_45: p_pn_in_0_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_1)
:2  %p_pn_in_0_1 = xor i1 %p_pn_in_in_0_1, true

ST_45: p_pn_0_1_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_1)
:3  %p_pn_0_1_cast = zext i1 %p_pn_in_0_1 to i2

ST_45: one_out_2_0_1 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_0_1 = add i2 %one_out_3_cast, %p_pn_0_1_cast

ST_45: mac_num_3_0_1 [1/1] 1.37ns
:5  %mac_num_3_0_1 = select i1 %mac_num_2, i2 -2, i2 1

ST_45: stg_464 [1/1] 1.57ns
:6  br label %._crit_edge.0.1

ST_45: one_out_3_0_1 [1/1] 0.00ns
._crit_edge.0.1:0  %one_out_3_0_1 = phi i2 [ %one_out_2_0_1, %13 ], [ %one_out_3_cast, %._crit_edge.0.0 ]

ST_45: mac_num_2_0_1 [1/1] 0.00ns
._crit_edge.0.1:1  %mac_num_2_0_1 = phi i2 [ %mac_num_3_0_1, %13 ], [ %mac_num_2_cast, %._crit_edge.0.0 ]

ST_45: stg_467 [1/1] 1.57ns
._crit_edge.0.1:2  br i1 %sel_tmp1_i1, label %19, label %._crit_edge.0.2

ST_45: tmp45 [1/1] 1.37ns
:0  %tmp45 = add i9 %phi_mul, 2

ST_45: tmp6_0_2 [1/1] 1.37ns
:1  %tmp6_0_2 = add i9 %y_cast, %tmp45


 <State 46>: 8.34ns
ST_46: tmp6_0_2_cast [1/1] 0.00ns
:2  %tmp6_0_2_cast = zext i9 %tmp6_0_2 to i13

ST_46: tmp7_0_2 [1/1] 6.38ns
:3  %tmp7_0_2 = mul i13 %I_cast7, %tmp6_0_2_cast

ST_46: i_index_0_2 [1/1] 1.96ns
:4  %i_index_0_2 = add i13 %tmp7_0_2, %x_cast


 <State 47>: 6.38ns
ST_47: zext4_cast [1/1] 0.00ns
:6  %zext4_cast = zext i13 %i_index_0_2 to i28

ST_47: mul5 [1/1] 6.38ns
:7  %mul5 = mul i28 %zext4_cast, 12946

ST_47: tmp_54 [1/1] 0.00ns
:8  %tmp_54 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul5, i32 23, i32 27)

ST_47: newIndex3 [17/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 48>: 3.66ns
ST_48: newIndex3 [16/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 49>: 3.66ns
ST_49: newIndex3 [15/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 50>: 3.66ns
ST_50: newIndex3 [14/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 51>: 3.66ns
ST_51: newIndex3 [13/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 52>: 3.66ns
ST_52: newIndex3 [12/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 53>: 3.66ns
ST_53: newIndex3 [11/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 54>: 3.66ns
ST_54: newIndex3 [10/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 55>: 3.66ns
ST_55: newIndex3 [9/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 56>: 3.66ns
ST_56: newIndex3 [8/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 57>: 3.66ns
ST_57: newIndex3 [7/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 58>: 3.66ns
ST_58: newIndex3 [6/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 59>: 3.66ns
ST_59: newIndex3 [5/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 60>: 3.66ns
ST_60: newIndex3 [4/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 61>: 3.66ns
ST_61: newIndex3 [3/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 62>: 3.66ns
ST_62: newIndex3 [2/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648


 <State 63>: 6.05ns
ST_63: newIndex3 [1/17] 3.66ns
:11  %newIndex3 = urem i13 %i_index_0_2, 648

ST_63: newIndex4 [1/1] 0.00ns
:12  %newIndex4 = zext i13 %newIndex3 to i64

ST_63: input_0_addr_516 [1/1] 0.00ns
:13  %input_0_addr_516 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex4

ST_63: input_0_load_516 [2/2] 2.39ns
:14  %input_0_load_516 = load i1* %input_0_addr_516, align 1

ST_63: input_1_addr_5 [1/1] 0.00ns
:15  %input_1_addr_5 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex4

ST_63: input_1_load_5 [2/2] 2.39ns
:16  %input_1_load_5 = load i1* %input_1_addr_5, align 1

ST_63: input_2_addr_5 [1/1] 0.00ns
:17  %input_2_addr_5 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex4

ST_63: input_2_load_5 [2/2] 2.39ns
:18  %input_2_load_5 = load i1* %input_2_addr_5, align 1

ST_63: input_3_addr_5 [1/1] 0.00ns
:19  %input_3_addr_5 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex4

ST_63: input_3_load_5 [2/2] 2.39ns
:20  %input_3_load_5 = load i1* %input_3_addr_5, align 1

ST_63: input_4_addr_5 [1/1] 0.00ns
:21  %input_4_addr_5 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex4

ST_63: input_4_load_5 [2/2] 2.39ns
:22  %input_4_load_5 = load i1* %input_4_addr_5, align 1

ST_63: input_5_addr_5 [1/1] 0.00ns
:23  %input_5_addr_5 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex4

ST_63: input_5_load_5 [2/2] 2.39ns
:24  %input_5_load_5 = load i1* %input_5_addr_5, align 1

ST_63: input_6_addr_5 [1/1] 0.00ns
:25  %input_6_addr_5 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex4

ST_63: input_6_load_5 [2/2] 2.39ns
:26  %input_6_load_5 = load i1* %input_6_addr_5, align 1

ST_63: input_7_addr_5 [1/1] 0.00ns
:27  %input_7_addr_5 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex4

ST_63: input_7_load_5 [2/2] 2.39ns
:28  %input_7_load_5 = load i1* %input_7_addr_5, align 1


 <State 64>: 4.35ns
ST_64: w_index_0_2 [1/1] 1.96ns
:5  %w_index_0_2 = add i13 %tmp_29, 6

ST_64: arrayNo7 [1/1] 0.00ns
:9  %arrayNo7 = sext i5 %tmp_54 to i13

ST_64: arrayNo7_cast [1/1] 0.00ns
:10  %arrayNo7_cast = zext i13 %arrayNo7 to i32

ST_64: input_0_load_516 [1/2] 2.39ns
:14  %input_0_load_516 = load i1* %input_0_addr_516, align 1

ST_64: input_1_load_5 [1/2] 2.39ns
:16  %input_1_load_5 = load i1* %input_1_addr_5, align 1

ST_64: input_2_load_5 [1/2] 2.39ns
:18  %input_2_load_5 = load i1* %input_2_addr_5, align 1

ST_64: input_3_load_5 [1/2] 2.39ns
:20  %input_3_load_5 = load i1* %input_3_addr_5, align 1

ST_64: input_4_load_5 [1/2] 2.39ns
:22  %input_4_load_5 = load i1* %input_4_addr_5, align 1

ST_64: input_5_load_5 [1/2] 2.39ns
:24  %input_5_load_5 = load i1* %input_5_addr_5, align 1

ST_64: input_6_load_5 [1/2] 2.39ns
:26  %input_6_load_5 = load i1* %input_6_addr_5, align 1

ST_64: input_7_load_5 [1/2] 2.39ns
:28  %input_7_load_5 = load i1* %input_7_addr_5, align 1

ST_64: tmp_36 [1/1] 1.94ns
:29  %tmp_36 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_516, i1 %input_1_load_5, i1 %input_2_load_5, i1 %input_3_load_5, i1 %input_4_load_5, i1 %input_5_load_5, i1 %input_6_load_5, i1 %input_7_load_5, i32 %arrayNo7_cast)

ST_64: tmp_60_0_2 [1/1] 0.00ns
:30  %tmp_60_0_2 = zext i13 %w_index_0_2 to i64

ST_64: stg_523 [1/1] 0.00ns
:31  br i1 %L_read, label %20, label %18

ST_64: w_conv1_addr_2 [1/1] 0.00ns
:0  %w_conv1_addr_2 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_0_2

ST_64: w_conv1_load_2 [2/2] 2.39ns
:1  %w_conv1_load_2 = load i1* %w_conv1_addr_2, align 1

ST_64: w_conv2_addr_2 [1/1] 0.00ns
:0  %w_conv2_addr_2 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_0_2

ST_64: w_conv2_load_2 [2/2] 2.39ns
:1  %w_conv2_load_2 = load i1* %w_conv2_addr_2, align 1


 <State 65>: 8.47ns
ST_65: w_conv1_load_2 [1/2] 2.39ns
:1  %w_conv1_load_2 = load i1* %w_conv1_addr_2, align 1

ST_65: stg_529 [1/1] 1.57ns
:2  br label %17

ST_65: w_conv2_load_2 [1/2] 2.39ns
:1  %w_conv2_load_2 = load i1* %w_conv2_addr_2, align 1

ST_65: stg_531 [1/1] 1.57ns
:2  br label %17

ST_65: w_conv1_load_2_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_2)
:0  %w_conv1_load_2_pn = phi i1 [ %w_conv1_load_2, %18 ], [ %w_conv2_load_2, %20 ]

ST_65: p_pn_in_in_0_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_2)
:1  %p_pn_in_in_0_2 = xor i1 %w_conv1_load_2_pn, %tmp_36

ST_65: p_pn_in_0_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_2)
:2  %p_pn_in_0_2 = xor i1 %p_pn_in_in_0_2, true

ST_65: p_pn_0_2_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_0_2)
:3  %p_pn_0_2_cast = zext i1 %p_pn_in_0_2 to i2

ST_65: one_out_2_0_2 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_0_2 = add i2 %one_out_3_0_1, %p_pn_0_2_cast

ST_65: mac_num_3_0_2 [1/1] 0.80ns
:5  %mac_num_3_0_2 = add i2 %mac_num_2_0_1, 1

ST_65: stg_538 [1/1] 1.57ns
:6  br label %._crit_edge.0.2

ST_65: one_out_3_0_2 [1/1] 0.00ns
._crit_edge.0.2:0  %one_out_3_0_2 = phi i2 [ %one_out_2_0_2, %17 ], [ %one_out_3_0_1, %._crit_edge.0.1 ]

ST_65: mac_num_2_0_2 [1/1] 0.00ns
._crit_edge.0.2:1  %mac_num_2_0_2 = phi i2 [ %mac_num_3_0_2, %17 ], [ %mac_num_2_0_1, %._crit_edge.0.1 ]

ST_65: one_out_3_0_2_cast [1/1] 0.00ns
._crit_edge.0.2:2  %one_out_3_0_2_cast = zext i2 %one_out_3_0_2 to i3

ST_65: mac_num_2_0_2_cast [1/1] 0.00ns
._crit_edge.0.2:3  %mac_num_2_0_2_cast = zext i2 %mac_num_2_0_2 to i3

ST_65: stg_543 [1/1] 1.57ns
._crit_edge.0.2:4  br i1 %sel_tmp1_i2, label %23, label %._crit_edge.1.0

ST_65: tmp6_1 [1/1] 1.84ns
:0  %tmp6_1 = add i9 %phi_mul, %y_cast

ST_65: tmp6_1_cast [1/1] 0.00ns
:1  %tmp6_1_cast = zext i9 %tmp6_1 to i13

ST_65: tmp7_1 [1/1] 6.38ns
:2  %tmp7_1 = mul i13 %I_cast7, %tmp6_1_cast


 <State 66>: 8.34ns
ST_66: i_index_1 [1/1] 1.96ns
:3  %i_index_1 = add i13 %tmp7_1, %tmp_51_1_cast1

ST_66: zext7_cast [1/1] 0.00ns
:5  %zext7_cast = zext i13 %i_index_1 to i28

ST_66: mul8 [1/1] 6.38ns
:6  %mul8 = mul i28 %zext7_cast, 12946

ST_66: tmp_55 [1/1] 0.00ns
:7  %tmp_55 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul8, i32 23, i32 27)

ST_66: newIndex9 [17/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 67>: 3.66ns
ST_67: newIndex9 [16/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 68>: 3.66ns
ST_68: newIndex9 [15/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 69>: 3.66ns
ST_69: newIndex9 [14/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 70>: 3.66ns
ST_70: newIndex9 [13/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 71>: 3.66ns
ST_71: newIndex9 [12/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 72>: 3.66ns
ST_72: newIndex9 [11/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 73>: 3.66ns
ST_73: newIndex9 [10/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 74>: 3.66ns
ST_74: newIndex9 [9/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 75>: 3.66ns
ST_75: newIndex9 [8/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 76>: 3.66ns
ST_76: newIndex9 [7/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 77>: 3.66ns
ST_77: newIndex9 [6/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 78>: 3.66ns
ST_78: newIndex9 [5/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 79>: 3.66ns
ST_79: newIndex9 [4/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 80>: 3.66ns
ST_80: newIndex9 [3/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 81>: 3.66ns
ST_81: newIndex9 [2/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648


 <State 82>: 6.05ns
ST_82: newIndex9 [1/17] 3.66ns
:10  %newIndex9 = urem i13 %i_index_1, 648

ST_82: newIndex10 [1/1] 0.00ns
:11  %newIndex10 = zext i13 %newIndex9 to i64

ST_82: input_0_addr_517 [1/1] 0.00ns
:12  %input_0_addr_517 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex10

ST_82: input_0_load_517 [2/2] 2.39ns
:13  %input_0_load_517 = load i1* %input_0_addr_517, align 1

ST_82: input_1_addr_6 [1/1] 0.00ns
:14  %input_1_addr_6 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex10

ST_82: input_1_load_6 [2/2] 2.39ns
:15  %input_1_load_6 = load i1* %input_1_addr_6, align 1

ST_82: input_2_addr_6 [1/1] 0.00ns
:16  %input_2_addr_6 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex10

ST_82: input_2_load_6 [2/2] 2.39ns
:17  %input_2_load_6 = load i1* %input_2_addr_6, align 1

ST_82: input_3_addr_6 [1/1] 0.00ns
:18  %input_3_addr_6 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex10

ST_82: input_3_load_6 [2/2] 2.39ns
:19  %input_3_load_6 = load i1* %input_3_addr_6, align 1

ST_82: input_4_addr_6 [1/1] 0.00ns
:20  %input_4_addr_6 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex10

ST_82: input_4_load_6 [2/2] 2.39ns
:21  %input_4_load_6 = load i1* %input_4_addr_6, align 1

ST_82: input_5_addr_6 [1/1] 0.00ns
:22  %input_5_addr_6 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex10

ST_82: input_5_load_6 [2/2] 2.39ns
:23  %input_5_load_6 = load i1* %input_5_addr_6, align 1

ST_82: input_6_addr_6 [1/1] 0.00ns
:24  %input_6_addr_6 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex10

ST_82: input_6_load_6 [2/2] 2.39ns
:25  %input_6_load_6 = load i1* %input_6_addr_6, align 1

ST_82: input_7_addr_6 [1/1] 0.00ns
:26  %input_7_addr_6 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex10

ST_82: input_7_load_6 [2/2] 2.39ns
:27  %input_7_load_6 = load i1* %input_7_addr_6, align 1


 <State 83>: 4.35ns
ST_83: w_index_1 [1/1] 1.96ns
:4  %w_index_1 = add i13 %tmp_29, 1

ST_83: arrayNo9 [1/1] 0.00ns
:8  %arrayNo9 = sext i5 %tmp_55 to i13

ST_83: arrayNo9_cast [1/1] 0.00ns
:9  %arrayNo9_cast = zext i13 %arrayNo9 to i32

ST_83: input_0_load_517 [1/2] 2.39ns
:13  %input_0_load_517 = load i1* %input_0_addr_517, align 1

ST_83: input_1_load_6 [1/2] 2.39ns
:15  %input_1_load_6 = load i1* %input_1_addr_6, align 1

ST_83: input_2_load_6 [1/2] 2.39ns
:17  %input_2_load_6 = load i1* %input_2_addr_6, align 1

ST_83: input_3_load_6 [1/2] 2.39ns
:19  %input_3_load_6 = load i1* %input_3_addr_6, align 1

ST_83: input_4_load_6 [1/2] 2.39ns
:21  %input_4_load_6 = load i1* %input_4_addr_6, align 1

ST_83: input_5_load_6 [1/2] 2.39ns
:23  %input_5_load_6 = load i1* %input_5_addr_6, align 1

ST_83: input_6_load_6 [1/2] 2.39ns
:25  %input_6_load_6 = load i1* %input_6_addr_6, align 1

ST_83: input_7_load_6 [1/2] 2.39ns
:27  %input_7_load_6 = load i1* %input_7_addr_6, align 1

ST_83: tmp_37 [1/1] 1.94ns
:28  %tmp_37 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_517, i1 %input_1_load_6, i1 %input_2_load_6, i1 %input_3_load_6, i1 %input_4_load_6, i1 %input_5_load_6, i1 %input_6_load_6, i1 %input_7_load_6, i32 %arrayNo9_cast)

ST_83: tmp_60_1 [1/1] 0.00ns
:29  %tmp_60_1 = zext i13 %w_index_1 to i64

ST_83: stg_598 [1/1] 0.00ns
:30  br i1 %L_read, label %24, label %22

ST_83: w_conv1_addr_3 [1/1] 0.00ns
:0  %w_conv1_addr_3 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_1

ST_83: w_conv1_load_3 [2/2] 2.39ns
:1  %w_conv1_load_3 = load i1* %w_conv1_addr_3, align 1

ST_83: w_conv2_addr_3 [1/1] 0.00ns
:0  %w_conv2_addr_3 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_1

ST_83: w_conv2_load_3 [2/2] 2.39ns
:1  %w_conv2_load_3 = load i1* %w_conv2_addr_3, align 1


 <State 84>: 8.47ns
ST_84: w_conv1_load_3 [1/2] 2.39ns
:1  %w_conv1_load_3 = load i1* %w_conv1_addr_3, align 1

ST_84: stg_604 [1/1] 1.57ns
:2  br label %21

ST_84: w_conv2_load_3 [1/2] 2.39ns
:1  %w_conv2_load_3 = load i1* %w_conv2_addr_3, align 1

ST_84: stg_606 [1/1] 1.57ns
:2  br label %21

ST_84: w_conv1_load_3_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_1)
:0  %w_conv1_load_3_pn = phi i1 [ %w_conv1_load_3, %22 ], [ %w_conv2_load_3, %24 ]

ST_84: p_pn_in_in_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_1)
:1  %p_pn_in_in_1 = xor i1 %w_conv1_load_3_pn, %tmp_37

ST_84: p_pn_in_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_1)
:2  %p_pn_in_1 = xor i1 %p_pn_in_in_1, true

ST_84: p_pn_1_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_1)
:3  %p_pn_1_cast = zext i1 %p_pn_in_1 to i3

ST_84: one_out_2_1 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_1 = add i3 %one_out_3_0_2_cast, %p_pn_1_cast

ST_84: mac_num_3_1 [1/1] 0.80ns
:5  %mac_num_3_1 = add i3 %mac_num_2_0_2_cast, 1

ST_84: stg_613 [1/1] 1.57ns
:6  br label %._crit_edge.1.0

ST_84: one_out_3_1 [1/1] 0.00ns
._crit_edge.1.0:0  %one_out_3_1 = phi i3 [ %one_out_2_1, %21 ], [ %one_out_3_0_2_cast, %._crit_edge.0.2 ]

ST_84: mac_num_2_1 [1/1] 0.00ns
._crit_edge.1.0:1  %mac_num_2_1 = phi i3 [ %mac_num_3_1, %21 ], [ %mac_num_2_0_2_cast, %._crit_edge.0.2 ]

ST_84: stg_616 [1/1] 1.57ns
._crit_edge.1.0:2  br i1 %sel_tmp1_i3, label %27, label %._crit_edge.1.1

ST_84: tmp51 [1/1] 1.37ns
:0  %tmp51 = add i9 %phi_mul, 1

ST_84: tmp6_1_1 [1/1] 1.37ns
:1  %tmp6_1_1 = add i9 %y_cast, %tmp51


 <State 85>: 6.38ns
ST_85: tmp6_1_1_cast [1/1] 0.00ns
:2  %tmp6_1_1_cast = zext i9 %tmp6_1_1 to i13

ST_85: tmp7_1_1 [1/1] 6.38ns
:3  %tmp7_1_1 = mul i13 %I_cast7, %tmp6_1_1_cast


 <State 86>: 8.34ns
ST_86: i_index_1_1 [1/1] 1.96ns
:4  %i_index_1_1 = add i13 %tmp7_1_1, %tmp_51_1_cast1

ST_86: zext5_cast [1/1] 0.00ns
:6  %zext5_cast = zext i13 %i_index_1_1 to i28

ST_86: mul4 [1/1] 6.38ns
:7  %mul4 = mul i28 %zext5_cast, 12946

ST_86: tmp_56 [1/1] 0.00ns
:8  %tmp_56 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul4, i32 23, i32 27)

ST_86: newIndex11 [17/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 87>: 3.66ns
ST_87: newIndex11 [16/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 88>: 3.66ns
ST_88: newIndex11 [15/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 89>: 3.66ns
ST_89: newIndex11 [14/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 90>: 3.66ns
ST_90: newIndex11 [13/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 91>: 3.66ns
ST_91: newIndex11 [12/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 92>: 3.66ns
ST_92: newIndex11 [11/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 93>: 3.66ns
ST_93: newIndex11 [10/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 94>: 3.66ns
ST_94: newIndex11 [9/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 95>: 3.66ns
ST_95: newIndex11 [8/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 96>: 3.66ns
ST_96: newIndex11 [7/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 97>: 3.66ns
ST_97: newIndex11 [6/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 98>: 3.66ns
ST_98: newIndex11 [5/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 99>: 3.66ns
ST_99: newIndex11 [4/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 100>: 3.66ns
ST_100: newIndex11 [3/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 101>: 3.66ns
ST_101: newIndex11 [2/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648


 <State 102>: 6.05ns
ST_102: newIndex11 [1/17] 3.66ns
:11  %newIndex11 = urem i13 %i_index_1_1, 648

ST_102: newIndex12 [1/1] 0.00ns
:12  %newIndex12 = zext i13 %newIndex11 to i64

ST_102: input_0_addr_518 [1/1] 0.00ns
:13  %input_0_addr_518 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex12

ST_102: input_0_load_518 [2/2] 2.39ns
:14  %input_0_load_518 = load i1* %input_0_addr_518, align 1

ST_102: input_1_addr_7 [1/1] 0.00ns
:15  %input_1_addr_7 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex12

ST_102: input_1_load_7 [2/2] 2.39ns
:16  %input_1_load_7 = load i1* %input_1_addr_7, align 1

ST_102: input_2_addr_7 [1/1] 0.00ns
:17  %input_2_addr_7 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex12

ST_102: input_2_load_7 [2/2] 2.39ns
:18  %input_2_load_7 = load i1* %input_2_addr_7, align 1

ST_102: input_3_addr_7 [1/1] 0.00ns
:19  %input_3_addr_7 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex12

ST_102: input_3_load_7 [2/2] 2.39ns
:20  %input_3_load_7 = load i1* %input_3_addr_7, align 1

ST_102: input_4_addr_7 [1/1] 0.00ns
:21  %input_4_addr_7 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex12

ST_102: input_4_load_7 [2/2] 2.39ns
:22  %input_4_load_7 = load i1* %input_4_addr_7, align 1

ST_102: input_5_addr_7 [1/1] 0.00ns
:23  %input_5_addr_7 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex12

ST_102: input_5_load_7 [2/2] 2.39ns
:24  %input_5_load_7 = load i1* %input_5_addr_7, align 1

ST_102: input_6_addr_7 [1/1] 0.00ns
:25  %input_6_addr_7 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex12

ST_102: input_6_load_7 [2/2] 2.39ns
:26  %input_6_load_7 = load i1* %input_6_addr_7, align 1

ST_102: input_7_addr_7 [1/1] 0.00ns
:27  %input_7_addr_7 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex12

ST_102: input_7_load_7 [2/2] 2.39ns
:28  %input_7_load_7 = load i1* %input_7_addr_7, align 1


 <State 103>: 4.35ns
ST_103: w_index_1_1 [1/1] 1.96ns
:5  %w_index_1_1 = add i13 %tmp_29, 4

ST_103: arrayNo2 [1/1] 0.00ns
:9  %arrayNo2 = sext i5 %tmp_56 to i13

ST_103: arrayNo11_cast [1/1] 0.00ns
:10  %arrayNo11_cast = zext i13 %arrayNo2 to i32

ST_103: input_0_load_518 [1/2] 2.39ns
:14  %input_0_load_518 = load i1* %input_0_addr_518, align 1

ST_103: input_1_load_7 [1/2] 2.39ns
:16  %input_1_load_7 = load i1* %input_1_addr_7, align 1

ST_103: input_2_load_7 [1/2] 2.39ns
:18  %input_2_load_7 = load i1* %input_2_addr_7, align 1

ST_103: input_3_load_7 [1/2] 2.39ns
:20  %input_3_load_7 = load i1* %input_3_addr_7, align 1

ST_103: input_4_load_7 [1/2] 2.39ns
:22  %input_4_load_7 = load i1* %input_4_addr_7, align 1

ST_103: input_5_load_7 [1/2] 2.39ns
:24  %input_5_load_7 = load i1* %input_5_addr_7, align 1

ST_103: input_6_load_7 [1/2] 2.39ns
:26  %input_6_load_7 = load i1* %input_6_addr_7, align 1

ST_103: input_7_load_7 [1/2] 2.39ns
:28  %input_7_load_7 = load i1* %input_7_addr_7, align 1

ST_103: tmp_40 [1/1] 1.94ns
:29  %tmp_40 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_518, i1 %input_1_load_7, i1 %input_2_load_7, i1 %input_3_load_7, i1 %input_4_load_7, i1 %input_5_load_7, i1 %input_6_load_7, i1 %input_7_load_7, i32 %arrayNo11_cast)

ST_103: tmp_60_1_1 [1/1] 0.00ns
:30  %tmp_60_1_1 = zext i13 %w_index_1_1 to i64

ST_103: stg_672 [1/1] 0.00ns
:31  br i1 %L_read, label %28, label %26

ST_103: w_conv1_addr_4 [1/1] 0.00ns
:0  %w_conv1_addr_4 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_1_1

ST_103: w_conv1_load_4 [2/2] 2.39ns
:1  %w_conv1_load_4 = load i1* %w_conv1_addr_4, align 1

ST_103: w_conv2_addr_4 [1/1] 0.00ns
:0  %w_conv2_addr_4 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_1_1

ST_103: w_conv2_load_4 [2/2] 2.39ns
:1  %w_conv2_load_4 = load i1* %w_conv2_addr_4, align 1


 <State 104>: 8.47ns
ST_104: w_conv1_load_4 [1/2] 2.39ns
:1  %w_conv1_load_4 = load i1* %w_conv1_addr_4, align 1

ST_104: stg_678 [1/1] 1.57ns
:2  br label %25

ST_104: w_conv2_load_4 [1/2] 2.39ns
:1  %w_conv2_load_4 = load i1* %w_conv2_addr_4, align 1

ST_104: stg_680 [1/1] 1.57ns
:2  br label %25

ST_104: w_conv1_load_4_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_1)
:0  %w_conv1_load_4_pn = phi i1 [ %w_conv1_load_4, %26 ], [ %w_conv2_load_4, %28 ]

ST_104: p_pn_in_in_1_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_1)
:1  %p_pn_in_in_1_1 = xor i1 %w_conv1_load_4_pn, %tmp_40

ST_104: p_pn_in_1_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_1)
:2  %p_pn_in_1_1 = xor i1 %p_pn_in_in_1_1, true

ST_104: p_pn_1_1_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_1)
:3  %p_pn_1_1_cast = zext i1 %p_pn_in_1_1 to i3

ST_104: one_out_2_1_1 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_1_1 = add i3 %one_out_3_1, %p_pn_1_1_cast

ST_104: mac_num_3_1_1 [1/1] 0.80ns
:5  %mac_num_3_1_1 = add i3 %mac_num_2_1, 1

ST_104: stg_687 [1/1] 1.57ns
:6  br label %._crit_edge.1.1

ST_104: one_out_3_1_1 [1/1] 0.00ns
._crit_edge.1.1:0  %one_out_3_1_1 = phi i3 [ %one_out_2_1_1, %25 ], [ %one_out_3_1, %._crit_edge.1.0 ]

ST_104: mac_num_2_1_1 [1/1] 0.00ns
._crit_edge.1.1:1  %mac_num_2_1_1 = phi i3 [ %mac_num_3_1_1, %25 ], [ %mac_num_2_1, %._crit_edge.1.0 ]

ST_104: stg_690 [1/1] 1.57ns
._crit_edge.1.1:2  br i1 %sel_tmp1_i4, label %31, label %._crit_edge.1.2

ST_104: tmp52 [1/1] 1.37ns
:0  %tmp52 = add i9 %phi_mul, 2

ST_104: tmp6_1_2 [1/1] 1.37ns
:1  %tmp6_1_2 = add i9 %y_cast, %tmp52


 <State 105>: 8.34ns
ST_105: tmp6_1_2_cast [1/1] 0.00ns
:2  %tmp6_1_2_cast = zext i9 %tmp6_1_2 to i13

ST_105: tmp7_1_2 [1/1] 6.38ns
:3  %tmp7_1_2 = mul i13 %I_cast7, %tmp6_1_2_cast

ST_105: i_index_1_2 [1/1] 1.96ns
:4  %i_index_1_2 = add i13 %tmp7_1_2, %tmp_51_1_cast1


 <State 106>: 6.38ns
ST_106: zext6_cast [1/1] 0.00ns
:6  %zext6_cast = zext i13 %i_index_1_2 to i28

ST_106: mul6 [1/1] 6.38ns
:7  %mul6 = mul i28 %zext6_cast, 12946

ST_106: tmp_57 [1/1] 0.00ns
:8  %tmp_57 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul6, i32 23, i32 27)

ST_106: newIndex13 [17/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 107>: 3.66ns
ST_107: newIndex13 [16/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 108>: 3.66ns
ST_108: newIndex13 [15/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 109>: 3.66ns
ST_109: newIndex13 [14/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 110>: 3.66ns
ST_110: newIndex13 [13/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 111>: 3.66ns
ST_111: newIndex13 [12/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 112>: 3.66ns
ST_112: newIndex13 [11/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 113>: 3.66ns
ST_113: newIndex13 [10/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 114>: 3.66ns
ST_114: newIndex13 [9/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 115>: 3.66ns
ST_115: newIndex13 [8/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 116>: 3.66ns
ST_116: newIndex13 [7/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 117>: 3.66ns
ST_117: newIndex13 [6/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 118>: 3.66ns
ST_118: newIndex13 [5/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 119>: 3.66ns
ST_119: newIndex13 [4/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 120>: 3.66ns
ST_120: newIndex13 [3/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 121>: 3.66ns
ST_121: newIndex13 [2/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648


 <State 122>: 6.05ns
ST_122: newIndex13 [1/17] 3.66ns
:11  %newIndex13 = urem i13 %i_index_1_2, 648

ST_122: newIndex14 [1/1] 0.00ns
:12  %newIndex14 = zext i13 %newIndex13 to i64

ST_122: input_0_addr_519 [1/1] 0.00ns
:13  %input_0_addr_519 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex14

ST_122: input_0_load_519 [2/2] 2.39ns
:14  %input_0_load_519 = load i1* %input_0_addr_519, align 1

ST_122: input_1_addr_8 [1/1] 0.00ns
:15  %input_1_addr_8 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex14

ST_122: input_1_load_8 [2/2] 2.39ns
:16  %input_1_load_8 = load i1* %input_1_addr_8, align 1

ST_122: input_2_addr_8 [1/1] 0.00ns
:17  %input_2_addr_8 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex14

ST_122: input_2_load_8 [2/2] 2.39ns
:18  %input_2_load_8 = load i1* %input_2_addr_8, align 1

ST_122: input_3_addr_8 [1/1] 0.00ns
:19  %input_3_addr_8 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex14

ST_122: input_3_load_8 [2/2] 2.39ns
:20  %input_3_load_8 = load i1* %input_3_addr_8, align 1

ST_122: input_4_addr_8 [1/1] 0.00ns
:21  %input_4_addr_8 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex14

ST_122: input_4_load_8 [2/2] 2.39ns
:22  %input_4_load_8 = load i1* %input_4_addr_8, align 1

ST_122: input_5_addr_8 [1/1] 0.00ns
:23  %input_5_addr_8 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex14

ST_122: input_5_load_8 [2/2] 2.39ns
:24  %input_5_load_8 = load i1* %input_5_addr_8, align 1

ST_122: input_6_addr_8 [1/1] 0.00ns
:25  %input_6_addr_8 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex14

ST_122: input_6_load_8 [2/2] 2.39ns
:26  %input_6_load_8 = load i1* %input_6_addr_8, align 1

ST_122: input_7_addr_8 [1/1] 0.00ns
:27  %input_7_addr_8 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex14

ST_122: input_7_load_8 [2/2] 2.39ns
:28  %input_7_load_8 = load i1* %input_7_addr_8, align 1


 <State 123>: 4.35ns
ST_123: w_index_1_2 [1/1] 1.96ns
:5  %w_index_1_2 = add i13 %tmp_29, 7

ST_123: arrayNo4 [1/1] 0.00ns
:9  %arrayNo4 = sext i5 %tmp_57 to i13

ST_123: arrayNo13_cast [1/1] 0.00ns
:10  %arrayNo13_cast = zext i13 %arrayNo4 to i32

ST_123: input_0_load_519 [1/2] 2.39ns
:14  %input_0_load_519 = load i1* %input_0_addr_519, align 1

ST_123: input_1_load_8 [1/2] 2.39ns
:16  %input_1_load_8 = load i1* %input_1_addr_8, align 1

ST_123: input_2_load_8 [1/2] 2.39ns
:18  %input_2_load_8 = load i1* %input_2_addr_8, align 1

ST_123: input_3_load_8 [1/2] 2.39ns
:20  %input_3_load_8 = load i1* %input_3_addr_8, align 1

ST_123: input_4_load_8 [1/2] 2.39ns
:22  %input_4_load_8 = load i1* %input_4_addr_8, align 1

ST_123: input_5_load_8 [1/2] 2.39ns
:24  %input_5_load_8 = load i1* %input_5_addr_8, align 1

ST_123: input_6_load_8 [1/2] 2.39ns
:26  %input_6_load_8 = load i1* %input_6_addr_8, align 1

ST_123: input_7_load_8 [1/2] 2.39ns
:28  %input_7_load_8 = load i1* %input_7_addr_8, align 1

ST_123: tmp_41 [1/1] 1.94ns
:29  %tmp_41 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_519, i1 %input_1_load_8, i1 %input_2_load_8, i1 %input_3_load_8, i1 %input_4_load_8, i1 %input_5_load_8, i1 %input_6_load_8, i1 %input_7_load_8, i32 %arrayNo13_cast)

ST_123: tmp_60_1_2 [1/1] 0.00ns
:30  %tmp_60_1_2 = zext i13 %w_index_1_2 to i64

ST_123: stg_746 [1/1] 0.00ns
:31  br i1 %L_read, label %32, label %30

ST_123: w_conv1_addr_5 [1/1] 0.00ns
:0  %w_conv1_addr_5 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_1_2

ST_123: w_conv1_load_5 [2/2] 2.39ns
:1  %w_conv1_load_5 = load i1* %w_conv1_addr_5, align 1

ST_123: w_conv2_addr_5 [1/1] 0.00ns
:0  %w_conv2_addr_5 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_1_2

ST_123: w_conv2_load_5 [2/2] 2.39ns
:1  %w_conv2_load_5 = load i1* %w_conv2_addr_5, align 1


 <State 124>: 8.47ns
ST_124: w_conv1_load_5 [1/2] 2.39ns
:1  %w_conv1_load_5 = load i1* %w_conv1_addr_5, align 1

ST_124: stg_752 [1/1] 1.57ns
:2  br label %29

ST_124: w_conv2_load_5 [1/2] 2.39ns
:1  %w_conv2_load_5 = load i1* %w_conv2_addr_5, align 1

ST_124: stg_754 [1/1] 1.57ns
:2  br label %29

ST_124: w_conv1_load_5_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_2)
:0  %w_conv1_load_5_pn = phi i1 [ %w_conv1_load_5, %30 ], [ %w_conv2_load_5, %32 ]

ST_124: p_pn_in_in_1_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_2)
:1  %p_pn_in_in_1_2 = xor i1 %w_conv1_load_5_pn, %tmp_41

ST_124: p_pn_in_1_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_2)
:2  %p_pn_in_1_2 = xor i1 %p_pn_in_in_1_2, true

ST_124: p_pn_1_2_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_1_2)
:3  %p_pn_1_2_cast = zext i1 %p_pn_in_1_2 to i3

ST_124: one_out_2_1_2 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_1_2 = add i3 %one_out_3_1_1, %p_pn_1_2_cast

ST_124: mac_num_3_1_2 [1/1] 0.80ns
:5  %mac_num_3_1_2 = add i3 %mac_num_2_1_1, 1

ST_124: stg_761 [1/1] 1.57ns
:6  br label %._crit_edge.1.2

ST_124: one_out_3_1_2 [1/1] 0.00ns
._crit_edge.1.2:0  %one_out_3_1_2 = phi i3 [ %one_out_2_1_2, %29 ], [ %one_out_3_1_1, %._crit_edge.1.1 ]

ST_124: mac_num_2_1_2 [1/1] 0.00ns
._crit_edge.1.2:1  %mac_num_2_1_2 = phi i3 [ %mac_num_3_1_2, %29 ], [ %mac_num_2_1_1, %._crit_edge.1.1 ]

ST_124: stg_764 [1/1] 1.57ns
._crit_edge.1.2:2  br i1 %sel_tmp1_i5, label %35, label %._crit_edge.2.0

ST_124: tmp6_2 [1/1] 1.84ns
:0  %tmp6_2 = add i9 %phi_mul, %y_cast

ST_124: tmp6_2_cast [1/1] 0.00ns
:1  %tmp6_2_cast = zext i9 %tmp6_2 to i13

ST_124: tmp7_2 [1/1] 6.38ns
:2  %tmp7_2 = mul i13 %I_cast7, %tmp6_2_cast


 <State 125>: 8.34ns
ST_125: i_index_2 [1/1] 1.96ns
:3  %i_index_2 = add i13 %tmp7_2, %tmp_51_2_cast1

ST_125: zext8_cast [1/1] 0.00ns
:5  %zext8_cast = zext i13 %i_index_2 to i28

ST_125: mul7 [1/1] 6.38ns
:6  %mul7 = mul i28 %zext8_cast, 12946

ST_125: tmp_58 [1/1] 0.00ns
:7  %tmp_58 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul7, i32 23, i32 27)

ST_125: newIndex15 [17/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 126>: 3.66ns
ST_126: newIndex15 [16/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 127>: 3.66ns
ST_127: newIndex15 [15/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 128>: 3.66ns
ST_128: newIndex15 [14/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 129>: 3.66ns
ST_129: newIndex15 [13/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 130>: 3.66ns
ST_130: newIndex15 [12/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 131>: 3.66ns
ST_131: newIndex15 [11/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 132>: 3.66ns
ST_132: newIndex15 [10/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 133>: 3.66ns
ST_133: newIndex15 [9/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 134>: 3.66ns
ST_134: newIndex15 [8/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 135>: 3.66ns
ST_135: newIndex15 [7/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 136>: 3.66ns
ST_136: newIndex15 [6/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 137>: 3.66ns
ST_137: newIndex15 [5/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 138>: 3.66ns
ST_138: newIndex15 [4/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 139>: 3.66ns
ST_139: newIndex15 [3/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 140>: 3.66ns
ST_140: newIndex15 [2/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648


 <State 141>: 6.05ns
ST_141: newIndex15 [1/17] 3.66ns
:10  %newIndex15 = urem i13 %i_index_2, 648

ST_141: newIndex16 [1/1] 0.00ns
:11  %newIndex16 = zext i13 %newIndex15 to i64

ST_141: input_0_addr_520 [1/1] 0.00ns
:12  %input_0_addr_520 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex16

ST_141: input_0_load_520 [2/2] 2.39ns
:13  %input_0_load_520 = load i1* %input_0_addr_520, align 1

ST_141: input_1_addr_9 [1/1] 0.00ns
:14  %input_1_addr_9 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex16

ST_141: input_1_load_9 [2/2] 2.39ns
:15  %input_1_load_9 = load i1* %input_1_addr_9, align 1

ST_141: input_2_addr_9 [1/1] 0.00ns
:16  %input_2_addr_9 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex16

ST_141: input_2_load_9 [2/2] 2.39ns
:17  %input_2_load_9 = load i1* %input_2_addr_9, align 1

ST_141: input_3_addr_9 [1/1] 0.00ns
:18  %input_3_addr_9 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex16

ST_141: input_3_load_9 [2/2] 2.39ns
:19  %input_3_load_9 = load i1* %input_3_addr_9, align 1

ST_141: input_4_addr_9 [1/1] 0.00ns
:20  %input_4_addr_9 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex16

ST_141: input_4_load_9 [2/2] 2.39ns
:21  %input_4_load_9 = load i1* %input_4_addr_9, align 1

ST_141: input_5_addr_9 [1/1] 0.00ns
:22  %input_5_addr_9 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex16

ST_141: input_5_load_9 [2/2] 2.39ns
:23  %input_5_load_9 = load i1* %input_5_addr_9, align 1

ST_141: input_6_addr_9 [1/1] 0.00ns
:24  %input_6_addr_9 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex16

ST_141: input_6_load_9 [2/2] 2.39ns
:25  %input_6_load_9 = load i1* %input_6_addr_9, align 1

ST_141: input_7_addr_9 [1/1] 0.00ns
:26  %input_7_addr_9 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex16

ST_141: input_7_load_9 [2/2] 2.39ns
:27  %input_7_load_9 = load i1* %input_7_addr_9, align 1


 <State 142>: 4.35ns
ST_142: w_index_2 [1/1] 1.96ns
:4  %w_index_2 = add i13 %tmp_29, 2

ST_142: arrayNo6 [1/1] 0.00ns
:8  %arrayNo6 = sext i5 %tmp_58 to i13

ST_142: arrayNo15_cast [1/1] 0.00ns
:9  %arrayNo15_cast = zext i13 %arrayNo6 to i32

ST_142: input_0_load_520 [1/2] 2.39ns
:13  %input_0_load_520 = load i1* %input_0_addr_520, align 1

ST_142: input_1_load_9 [1/2] 2.39ns
:15  %input_1_load_9 = load i1* %input_1_addr_9, align 1

ST_142: input_2_load_9 [1/2] 2.39ns
:17  %input_2_load_9 = load i1* %input_2_addr_9, align 1

ST_142: input_3_load_9 [1/2] 2.39ns
:19  %input_3_load_9 = load i1* %input_3_addr_9, align 1

ST_142: input_4_load_9 [1/2] 2.39ns
:21  %input_4_load_9 = load i1* %input_4_addr_9, align 1

ST_142: input_5_load_9 [1/2] 2.39ns
:23  %input_5_load_9 = load i1* %input_5_addr_9, align 1

ST_142: input_6_load_9 [1/2] 2.39ns
:25  %input_6_load_9 = load i1* %input_6_addr_9, align 1

ST_142: input_7_load_9 [1/2] 2.39ns
:27  %input_7_load_9 = load i1* %input_7_addr_9, align 1

ST_142: tmp_42 [1/1] 1.94ns
:28  %tmp_42 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_520, i1 %input_1_load_9, i1 %input_2_load_9, i1 %input_3_load_9, i1 %input_4_load_9, i1 %input_5_load_9, i1 %input_6_load_9, i1 %input_7_load_9, i32 %arrayNo15_cast)

ST_142: tmp_60_2 [1/1] 0.00ns
:29  %tmp_60_2 = zext i13 %w_index_2 to i64

ST_142: stg_819 [1/1] 0.00ns
:30  br i1 %L_read, label %36, label %34

ST_142: w_conv1_addr_6 [1/1] 0.00ns
:0  %w_conv1_addr_6 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_2

ST_142: w_conv1_load_6 [2/2] 2.39ns
:1  %w_conv1_load_6 = load i1* %w_conv1_addr_6, align 1

ST_142: w_conv2_addr_6 [1/1] 0.00ns
:0  %w_conv2_addr_6 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_2

ST_142: w_conv2_load_6 [2/2] 2.39ns
:1  %w_conv2_load_6 = load i1* %w_conv2_addr_6, align 1


 <State 143>: 8.47ns
ST_143: w_conv1_load_6 [1/2] 2.39ns
:1  %w_conv1_load_6 = load i1* %w_conv1_addr_6, align 1

ST_143: stg_825 [1/1] 1.57ns
:2  br label %33

ST_143: w_conv2_load_6 [1/2] 2.39ns
:1  %w_conv2_load_6 = load i1* %w_conv2_addr_6, align 1

ST_143: stg_827 [1/1] 1.57ns
:2  br label %33

ST_143: w_conv1_load_6_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_2)
:0  %w_conv1_load_6_pn = phi i1 [ %w_conv1_load_6, %34 ], [ %w_conv2_load_6, %36 ]

ST_143: p_pn_in_in_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_2)
:1  %p_pn_in_in_2 = xor i1 %w_conv1_load_6_pn, %tmp_42

ST_143: p_pn_in_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_2)
:2  %p_pn_in_2 = xor i1 %p_pn_in_in_2, true

ST_143: p_pn_2_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_2)
:3  %p_pn_2_cast = zext i1 %p_pn_in_2 to i3

ST_143: one_out_2_2 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_2 = add i3 %one_out_3_1_2, %p_pn_2_cast

ST_143: mac_num_3_2 [1/1] 0.80ns
:5  %mac_num_3_2 = add i3 %mac_num_2_1_2, 1

ST_143: stg_834 [1/1] 1.57ns
:6  br label %._crit_edge.2.0

ST_143: one_out_3_2 [1/1] 0.00ns
._crit_edge.2.0:0  %one_out_3_2 = phi i3 [ %one_out_2_2, %33 ], [ %one_out_3_1_2, %._crit_edge.1.2 ]

ST_143: mac_num_2_2 [1/1] 0.00ns
._crit_edge.2.0:1  %mac_num_2_2 = phi i3 [ %mac_num_3_2, %33 ], [ %mac_num_2_1_2, %._crit_edge.1.2 ]

ST_143: one_out_3_2_cast [1/1] 0.00ns
._crit_edge.2.0:2  %one_out_3_2_cast = zext i3 %one_out_3_2 to i4

ST_143: mac_num_2_2_cast [1/1] 0.00ns
._crit_edge.2.0:3  %mac_num_2_2_cast = zext i3 %mac_num_2_2 to i4

ST_143: stg_839 [1/1] 1.57ns
._crit_edge.2.0:4  br i1 %sel_tmp1_i6, label %39, label %._crit_edge.2.1

ST_143: tmp53 [1/1] 1.37ns
:0  %tmp53 = add i9 %phi_mul, 1

ST_143: tmp6_2_1 [1/1] 1.37ns
:1  %tmp6_2_1 = add i9 %y_cast, %tmp53


 <State 144>: 6.38ns
ST_144: tmp6_2_1_cast [1/1] 0.00ns
:2  %tmp6_2_1_cast = zext i9 %tmp6_2_1 to i13

ST_144: tmp7_2_1 [1/1] 6.38ns
:3  %tmp7_2_1 = mul i13 %I_cast7, %tmp6_2_1_cast


 <State 145>: 8.34ns
ST_145: i_index_2_1 [1/1] 1.96ns
:4  %i_index_2_1 = add i13 %tmp7_2_1, %tmp_51_2_cast1

ST_145: zext9_cast [1/1] 0.00ns
:6  %zext9_cast = zext i13 %i_index_2_1 to i28

ST_145: mul9 [1/1] 6.38ns
:7  %mul9 = mul i28 %zext9_cast, 12946

ST_145: tmp_59 [1/1] 0.00ns
:8  %tmp_59 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul9, i32 23, i32 27)

ST_145: newIndex17 [17/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 146>: 3.66ns
ST_146: newIndex17 [16/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 147>: 3.66ns
ST_147: newIndex17 [15/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 148>: 3.66ns
ST_148: newIndex17 [14/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 149>: 3.66ns
ST_149: newIndex17 [13/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 150>: 3.66ns
ST_150: newIndex17 [12/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 151>: 3.66ns
ST_151: newIndex17 [11/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 152>: 3.66ns
ST_152: newIndex17 [10/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 153>: 3.66ns
ST_153: newIndex17 [9/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 154>: 3.66ns
ST_154: newIndex17 [8/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 155>: 3.66ns
ST_155: newIndex17 [7/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 156>: 3.66ns
ST_156: newIndex17 [6/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 157>: 3.66ns
ST_157: newIndex17 [5/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 158>: 3.66ns
ST_158: newIndex17 [4/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 159>: 3.66ns
ST_159: newIndex17 [3/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 160>: 3.66ns
ST_160: newIndex17 [2/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648


 <State 161>: 6.05ns
ST_161: newIndex17 [1/17] 3.66ns
:11  %newIndex17 = urem i13 %i_index_2_1, 648

ST_161: newIndex18 [1/1] 0.00ns
:12  %newIndex18 = zext i13 %newIndex17 to i64

ST_161: input_0_addr_521 [1/1] 0.00ns
:13  %input_0_addr_521 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex18

ST_161: input_0_load_521 [2/2] 2.39ns
:14  %input_0_load_521 = load i1* %input_0_addr_521, align 1

ST_161: input_1_addr_10 [1/1] 0.00ns
:15  %input_1_addr_10 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex18

ST_161: input_1_load_10 [2/2] 2.39ns
:16  %input_1_load_10 = load i1* %input_1_addr_10, align 1

ST_161: input_2_addr_10 [1/1] 0.00ns
:17  %input_2_addr_10 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex18

ST_161: input_2_load_10 [2/2] 2.39ns
:18  %input_2_load_10 = load i1* %input_2_addr_10, align 1

ST_161: input_3_addr_10 [1/1] 0.00ns
:19  %input_3_addr_10 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex18

ST_161: input_3_load_10 [2/2] 2.39ns
:20  %input_3_load_10 = load i1* %input_3_addr_10, align 1

ST_161: input_4_addr_10 [1/1] 0.00ns
:21  %input_4_addr_10 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex18

ST_161: input_4_load_10 [2/2] 2.39ns
:22  %input_4_load_10 = load i1* %input_4_addr_10, align 1

ST_161: input_5_addr_10 [1/1] 0.00ns
:23  %input_5_addr_10 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex18

ST_161: input_5_load_10 [2/2] 2.39ns
:24  %input_5_load_10 = load i1* %input_5_addr_10, align 1

ST_161: input_6_addr_10 [1/1] 0.00ns
:25  %input_6_addr_10 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex18

ST_161: input_6_load_10 [2/2] 2.39ns
:26  %input_6_load_10 = load i1* %input_6_addr_10, align 1

ST_161: input_7_addr_10 [1/1] 0.00ns
:27  %input_7_addr_10 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex18

ST_161: input_7_load_10 [2/2] 2.39ns
:28  %input_7_load_10 = load i1* %input_7_addr_10, align 1


 <State 162>: 4.35ns
ST_162: w_index_2_1 [1/1] 1.96ns
:5  %w_index_2_1 = add i13 %tmp_29, 5

ST_162: arrayNo8 [1/1] 0.00ns
:9  %arrayNo8 = sext i5 %tmp_59 to i13

ST_162: arrayNo17_cast [1/1] 0.00ns
:10  %arrayNo17_cast = zext i13 %arrayNo8 to i32

ST_162: input_0_load_521 [1/2] 2.39ns
:14  %input_0_load_521 = load i1* %input_0_addr_521, align 1

ST_162: input_1_load_10 [1/2] 2.39ns
:16  %input_1_load_10 = load i1* %input_1_addr_10, align 1

ST_162: input_2_load_10 [1/2] 2.39ns
:18  %input_2_load_10 = load i1* %input_2_addr_10, align 1

ST_162: input_3_load_10 [1/2] 2.39ns
:20  %input_3_load_10 = load i1* %input_3_addr_10, align 1

ST_162: input_4_load_10 [1/2] 2.39ns
:22  %input_4_load_10 = load i1* %input_4_addr_10, align 1

ST_162: input_5_load_10 [1/2] 2.39ns
:24  %input_5_load_10 = load i1* %input_5_addr_10, align 1

ST_162: input_6_load_10 [1/2] 2.39ns
:26  %input_6_load_10 = load i1* %input_6_addr_10, align 1

ST_162: input_7_load_10 [1/2] 2.39ns
:28  %input_7_load_10 = load i1* %input_7_addr_10, align 1

ST_162: tmp_43 [1/1] 1.94ns
:29  %tmp_43 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_521, i1 %input_1_load_10, i1 %input_2_load_10, i1 %input_3_load_10, i1 %input_4_load_10, i1 %input_5_load_10, i1 %input_6_load_10, i1 %input_7_load_10, i32 %arrayNo17_cast)

ST_162: tmp_60_2_1 [1/1] 0.00ns
:30  %tmp_60_2_1 = zext i13 %w_index_2_1 to i64

ST_162: stg_895 [1/1] 0.00ns
:31  br i1 %L_read, label %40, label %38

ST_162: w_conv1_addr_7 [1/1] 0.00ns
:0  %w_conv1_addr_7 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_2_1

ST_162: w_conv1_load_7 [2/2] 2.39ns
:1  %w_conv1_load_7 = load i1* %w_conv1_addr_7, align 1

ST_162: w_conv2_addr_7 [1/1] 0.00ns
:0  %w_conv2_addr_7 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_2_1

ST_162: w_conv2_load_7 [2/2] 2.39ns
:1  %w_conv2_load_7 = load i1* %w_conv2_addr_7, align 1


 <State 163>: 8.47ns
ST_163: w_conv1_load_7 [1/2] 2.39ns
:1  %w_conv1_load_7 = load i1* %w_conv1_addr_7, align 1

ST_163: stg_901 [1/1] 1.57ns
:2  br label %37

ST_163: w_conv2_load_7 [1/2] 2.39ns
:1  %w_conv2_load_7 = load i1* %w_conv2_addr_7, align 1

ST_163: stg_903 [1/1] 1.57ns
:2  br label %37

ST_163: w_conv1_load_7_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_1)
:0  %w_conv1_load_7_pn = phi i1 [ %w_conv1_load_7, %38 ], [ %w_conv2_load_7, %40 ]

ST_163: p_pn_in_in_2_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_1)
:1  %p_pn_in_in_2_1 = xor i1 %w_conv1_load_7_pn, %tmp_43

ST_163: p_pn_in_2_1 [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_1)
:2  %p_pn_in_2_1 = xor i1 %p_pn_in_in_2_1, true

ST_163: p_pn_2_1_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_1)
:3  %p_pn_2_1_cast = zext i1 %p_pn_in_2_1 to i4

ST_163: one_out_2_2_1 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_2_1 = add i4 %one_out_3_2_cast, %p_pn_2_1_cast

ST_163: mac_num_3_2_1 [1/1] 0.80ns
:5  %mac_num_3_2_1 = add i4 %mac_num_2_2_cast, 1

ST_163: stg_910 [1/1] 1.57ns
:6  br label %._crit_edge.2.1

ST_163: one_out_3_2_1 [1/1] 0.00ns
._crit_edge.2.1:0  %one_out_3_2_1 = phi i4 [ %one_out_2_2_1, %37 ], [ %one_out_3_2_cast, %._crit_edge.2.0 ]

ST_163: mac_num_2_2_1 [1/1] 0.00ns
._crit_edge.2.1:1  %mac_num_2_2_1 = phi i4 [ %mac_num_3_2_1, %37 ], [ %mac_num_2_2_cast, %._crit_edge.2.0 ]

ST_163: stg_913 [1/1] 1.57ns
._crit_edge.2.1:2  br i1 %sel_tmp1_i7, label %43, label %._crit_edge.2.2

ST_163: tmp54 [1/1] 1.37ns
:0  %tmp54 = add i9 %phi_mul, 2

ST_163: tmp6_2_2 [1/1] 1.37ns
:1  %tmp6_2_2 = add i9 %y_cast, %tmp54


 <State 164>: 8.34ns
ST_164: tmp6_2_2_cast [1/1] 0.00ns
:2  %tmp6_2_2_cast = zext i9 %tmp6_2_2 to i13

ST_164: tmp7_2_2 [1/1] 6.38ns
:3  %tmp7_2_2 = mul i13 %I_cast7, %tmp6_2_2_cast

ST_164: i_index_2_2 [1/1] 1.96ns
:4  %i_index_2_2 = add i13 %tmp7_2_2, %tmp_51_2_cast1


 <State 165>: 6.38ns
ST_165: zext10_cast [1/1] 0.00ns
:6  %zext10_cast = zext i13 %i_index_2_2 to i28

ST_165: mul1 [1/1] 6.38ns
:7  %mul1 = mul i28 %zext10_cast, 12946

ST_165: tmp_60 [1/1] 0.00ns
:8  %tmp_60 = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %mul1, i32 23, i32 27)

ST_165: newIndex [17/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 166>: 3.66ns
ST_166: newIndex [16/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 167>: 3.66ns
ST_167: newIndex [15/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 168>: 3.66ns
ST_168: newIndex [14/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 169>: 3.66ns
ST_169: newIndex [13/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 170>: 3.66ns
ST_170: newIndex [12/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 171>: 3.66ns
ST_171: newIndex [11/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 172>: 3.66ns
ST_172: newIndex [10/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 173>: 3.66ns
ST_173: newIndex [9/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 174>: 3.66ns
ST_174: newIndex [8/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 175>: 3.66ns
ST_175: newIndex [7/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 176>: 3.66ns
ST_176: newIndex [6/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 177>: 3.66ns
ST_177: newIndex [5/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 178>: 3.66ns
ST_178: newIndex [4/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 179>: 3.66ns
ST_179: newIndex [3/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 180>: 3.66ns
ST_180: newIndex [2/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648


 <State 181>: 6.05ns
ST_181: newIndex [1/17] 3.66ns
:11  %newIndex = urem i13 %i_index_2_2, 648

ST_181: newIndex19 [1/1] 0.00ns
:12  %newIndex19 = zext i13 %newIndex to i64

ST_181: input_0_addr_522 [1/1] 0.00ns
:13  %input_0_addr_522 = getelementptr [648 x i1]* %input_0, i64 0, i64 %newIndex19

ST_181: input_0_load_522 [2/2] 2.39ns
:14  %input_0_load_522 = load i1* %input_0_addr_522, align 1

ST_181: input_1_addr_11 [1/1] 0.00ns
:15  %input_1_addr_11 = getelementptr [648 x i1]* %input_1, i64 0, i64 %newIndex19

ST_181: input_1_load_11 [2/2] 2.39ns
:16  %input_1_load_11 = load i1* %input_1_addr_11, align 1

ST_181: input_2_addr_11 [1/1] 0.00ns
:17  %input_2_addr_11 = getelementptr [648 x i1]* %input_2, i64 0, i64 %newIndex19

ST_181: input_2_load_11 [2/2] 2.39ns
:18  %input_2_load_11 = load i1* %input_2_addr_11, align 1

ST_181: input_3_addr_11 [1/1] 0.00ns
:19  %input_3_addr_11 = getelementptr [648 x i1]* %input_3, i64 0, i64 %newIndex19

ST_181: input_3_load_11 [2/2] 2.39ns
:20  %input_3_load_11 = load i1* %input_3_addr_11, align 1

ST_181: input_4_addr_11 [1/1] 0.00ns
:21  %input_4_addr_11 = getelementptr [648 x i1]* %input_4, i64 0, i64 %newIndex19

ST_181: input_4_load_11 [2/2] 2.39ns
:22  %input_4_load_11 = load i1* %input_4_addr_11, align 1

ST_181: input_5_addr_11 [1/1] 0.00ns
:23  %input_5_addr_11 = getelementptr [648 x i1]* %input_5, i64 0, i64 %newIndex19

ST_181: input_5_load_11 [2/2] 2.39ns
:24  %input_5_load_11 = load i1* %input_5_addr_11, align 1

ST_181: input_6_addr_11 [1/1] 0.00ns
:25  %input_6_addr_11 = getelementptr [648 x i1]* %input_6, i64 0, i64 %newIndex19

ST_181: input_6_load_11 [2/2] 2.39ns
:26  %input_6_load_11 = load i1* %input_6_addr_11, align 1

ST_181: input_7_addr_11 [1/1] 0.00ns
:27  %input_7_addr_11 = getelementptr [648 x i1]* %input_7, i64 0, i64 %newIndex19

ST_181: input_7_load_11 [2/2] 2.39ns
:28  %input_7_load_11 = load i1* %input_7_addr_11, align 1


 <State 182>: 4.35ns
ST_182: w_index_2_2 [1/1] 1.96ns
:5  %w_index_2_2 = add i13 %tmp_29, 8

ST_182: arrayNo [1/1] 0.00ns
:9  %arrayNo = sext i5 %tmp_60 to i13

ST_182: arrayNo_cast [1/1] 0.00ns
:10  %arrayNo_cast = zext i13 %arrayNo to i32

ST_182: input_0_load_522 [1/2] 2.39ns
:14  %input_0_load_522 = load i1* %input_0_addr_522, align 1

ST_182: input_1_load_11 [1/2] 2.39ns
:16  %input_1_load_11 = load i1* %input_1_addr_11, align 1

ST_182: input_2_load_11 [1/2] 2.39ns
:18  %input_2_load_11 = load i1* %input_2_addr_11, align 1

ST_182: input_3_load_11 [1/2] 2.39ns
:20  %input_3_load_11 = load i1* %input_3_addr_11, align 1

ST_182: input_4_load_11 [1/2] 2.39ns
:22  %input_4_load_11 = load i1* %input_4_addr_11, align 1

ST_182: input_5_load_11 [1/2] 2.39ns
:24  %input_5_load_11 = load i1* %input_5_addr_11, align 1

ST_182: input_6_load_11 [1/2] 2.39ns
:26  %input_6_load_11 = load i1* %input_6_addr_11, align 1

ST_182: input_7_load_11 [1/2] 2.39ns
:28  %input_7_load_11 = load i1* %input_7_addr_11, align 1

ST_182: tmp_44 [1/1] 1.94ns
:29  %tmp_44 = call i1 @_ssdm_op_Mux.ap_auto.8i1.i32(i1 %input_0_load_522, i1 %input_1_load_11, i1 %input_2_load_11, i1 %input_3_load_11, i1 %input_4_load_11, i1 %input_5_load_11, i1 %input_6_load_11, i1 %input_7_load_11, i32 %arrayNo_cast)

ST_182: tmp_60_2_2 [1/1] 0.00ns
:30  %tmp_60_2_2 = zext i13 %w_index_2_2 to i64

ST_182: stg_969 [1/1] 0.00ns
:31  br i1 %L_read, label %44, label %42

ST_182: w_conv1_addr_8 [1/1] 0.00ns
:0  %w_conv1_addr_8 = getelementptr inbounds [4608 x i1]* @w_conv1, i64 0, i64 %tmp_60_2_2

ST_182: w_conv1_load_8 [2/2] 2.39ns
:1  %w_conv1_load_8 = load i1* %w_conv1_addr_8, align 1

ST_182: w_conv2_addr_8 [1/1] 0.00ns
:0  %w_conv2_addr_8 = getelementptr inbounds [4608 x i1]* @w_conv2, i64 0, i64 %tmp_60_2_2

ST_182: w_conv2_load_8 [2/2] 2.39ns
:1  %w_conv2_load_8 = load i1* %w_conv2_addr_8, align 1


 <State 183>: 3.96ns
ST_183: w_conv1_load_8 [1/2] 2.39ns
:1  %w_conv1_load_8 = load i1* %w_conv1_addr_8, align 1

ST_183: stg_975 [1/1] 1.57ns
:2  br label %41


 <State 184>: 3.96ns
ST_184: w_conv2_load_8 [1/2] 2.39ns
:1  %w_conv2_load_8 = load i1* %w_conv2_addr_8, align 1

ST_184: stg_977 [1/1] 1.57ns
:2  br label %41


 <State 185>: 6.88ns
ST_185: w_conv1_load_8_pn [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_2)
:0  %w_conv1_load_8_pn = phi i1 [ %w_conv1_load_8, %42 ], [ %w_conv2_load_8, %44 ]

ST_185: p_pn_in_in_2_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_2)
:1  %p_pn_in_in_2_2 = xor i1 %w_conv1_load_8_pn, %tmp_44

ST_185: p_pn_in_2_2 [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_2)
:2  %p_pn_in_2_2 = xor i1 %p_pn_in_in_2_2, true

ST_185: p_pn_2_2_cast [1/1] 0.00ns (grouped into LUT with out node one_out_2_2_2)
:3  %p_pn_2_2_cast = zext i1 %p_pn_in_2_2 to i4

ST_185: one_out_2_2_2 [1/1] 1.37ns (out node of the LUT)
:4  %one_out_2_2_2 = add i4 %one_out_3_2_1, %p_pn_2_2_cast

ST_185: mac_num_3_2_2 [1/1] 0.80ns
:5  %mac_num_3_2_2 = add i4 %mac_num_2_2_1, 1

ST_185: stg_984 [1/1] 1.57ns
:6  br label %._crit_edge.2.2

ST_185: one_out_3_2_2 [1/1] 0.00ns
._crit_edge.2.2:0  %one_out_3_2_2 = phi i4 [ %one_out_2_2_2, %41 ], [ %one_out_3_2_1, %._crit_edge.2.1 ]

ST_185: mac_num_2_2_2 [1/1] 0.00ns
._crit_edge.2.2:1  %mac_num_2_2_2 = phi i4 [ %mac_num_3_2_2, %41 ], [ %mac_num_2_2_1, %._crit_edge.2.1 ]

ST_185: mac_num_2_2_2_cast [1/1] 0.00ns
._crit_edge.2.2:2  %mac_num_2_2_2_cast = zext i4 %mac_num_2_2_2 to i32

ST_185: tmp_38 [1/1] 0.00ns
._crit_edge.2.2:3  %tmp_38 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %one_out_3_2_2, i1 false)

ST_185: tmp_38_cast [1/1] 0.00ns
._crit_edge.2.2:4  %tmp_38_cast = zext i5 %tmp_38 to i32

ST_185: tmp_39 [1/1] 1.97ns
._crit_edge.2.2:5  %tmp_39 = sub i32 %sum, %mac_num_2_2_2_cast

ST_185: sum_1 [1/1] 1.97ns
._crit_edge.2.2:6  %sum_1 = add i32 %tmp_38_cast, %tmp_39

ST_185: stg_992 [1/1] 0.00ns
._crit_edge.2.2:7  br label %7


 <State 186>: 3.66ns
ST_186: newIndex5 [16/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 187>: 3.66ns
ST_187: newIndex5 [15/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 188>: 3.66ns
ST_188: newIndex5 [14/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 189>: 3.66ns
ST_189: newIndex5 [13/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 190>: 3.66ns
ST_190: newIndex5 [12/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 191>: 3.66ns
ST_191: newIndex5 [11/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 192>: 3.66ns
ST_192: newIndex5 [10/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 193>: 3.66ns
ST_193: newIndex5 [9/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 194>: 3.66ns
ST_194: newIndex5 [8/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 195>: 3.66ns
ST_195: newIndex5 [7/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 196>: 3.66ns
ST_196: newIndex5 [6/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 197>: 3.66ns
ST_197: newIndex5 [5/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 198>: 3.66ns
ST_198: newIndex5 [4/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 199>: 3.66ns
ST_199: newIndex5 [3/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 200>: 3.66ns
ST_200: newIndex5 [2/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648


 <State 201>: 6.37ns
ST_201: newIndex5 [1/17] 3.66ns
:5  %newIndex5 = urem i13 %o_index, 648

ST_201: newIndex6 [1/1] 0.00ns
:6  %newIndex6 = zext i13 %newIndex5 to i64

ST_201: threshold_0_V_addr [1/1] 0.00ns
:7  %threshold_0_V_addr = getelementptr [648 x i8]* %threshold_0_V, i64 0, i64 %newIndex6

ST_201: threshold_0_V_load [2/2] 2.71ns
:8  %threshold_0_V_load = load i8* %threshold_0_V_addr, align 1

ST_201: threshold_1_V_addr [1/1] 0.00ns
:9  %threshold_1_V_addr = getelementptr [648 x i8]* %threshold_1_V, i64 0, i64 %newIndex6

ST_201: threshold_1_V_load [2/2] 2.71ns
:10  %threshold_1_V_load = load i8* %threshold_1_V_addr, align 1

ST_201: threshold_2_V_addr [1/1] 0.00ns
:11  %threshold_2_V_addr = getelementptr [648 x i8]* %threshold_2_V, i64 0, i64 %newIndex6

ST_201: threshold_2_V_load [2/2] 2.71ns
:12  %threshold_2_V_load = load i8* %threshold_2_V_addr, align 1

ST_201: threshold_3_V_addr [1/1] 0.00ns
:13  %threshold_3_V_addr = getelementptr [648 x i8]* %threshold_3_V, i64 0, i64 %newIndex6

ST_201: threshold_3_V_load [2/2] 2.71ns
:14  %threshold_3_V_load = load i8* %threshold_3_V_addr, align 1

ST_201: threshold_4_V_addr [1/1] 0.00ns
:15  %threshold_4_V_addr = getelementptr [648 x i8]* %threshold_4_V, i64 0, i64 %newIndex6

ST_201: threshold_4_V_load [2/2] 2.71ns
:16  %threshold_4_V_load = load i8* %threshold_4_V_addr, align 1

ST_201: threshold_5_V_addr [1/1] 0.00ns
:17  %threshold_5_V_addr = getelementptr [648 x i8]* %threshold_5_V, i64 0, i64 %newIndex6

ST_201: threshold_5_V_load [2/2] 2.71ns
:18  %threshold_5_V_load = load i8* %threshold_5_V_addr, align 1

ST_201: threshold_6_V_addr [1/1] 0.00ns
:19  %threshold_6_V_addr = getelementptr [648 x i8]* %threshold_6_V, i64 0, i64 %newIndex6

ST_201: threshold_6_V_load [2/2] 2.71ns
:20  %threshold_6_V_load = load i8* %threshold_6_V_addr, align 1

ST_201: threshold_7_V_addr [1/1] 0.00ns
:21  %threshold_7_V_addr = getelementptr [648 x i8]* %threshold_7_V, i64 0, i64 %newIndex6

ST_201: threshold_7_V_load [2/2] 2.71ns
:22  %threshold_7_V_load = load i8* %threshold_7_V_addr, align 1


 <State 202>: 7.17ns
ST_202: arrayNo1 [1/1] 0.00ns
:3  %arrayNo1 = sext i5 %tmp_51 to i13

ST_202: arrayNo1_cast [1/1] 0.00ns
:4  %arrayNo1_cast = zext i13 %arrayNo1 to i32

ST_202: threshold_0_V_load [1/2] 2.71ns
:8  %threshold_0_V_load = load i8* %threshold_0_V_addr, align 1

ST_202: threshold_1_V_load [1/2] 2.71ns
:10  %threshold_1_V_load = load i8* %threshold_1_V_addr, align 1

ST_202: threshold_2_V_load [1/2] 2.71ns
:12  %threshold_2_V_load = load i8* %threshold_2_V_addr, align 1

ST_202: threshold_3_V_load [1/2] 2.71ns
:14  %threshold_3_V_load = load i8* %threshold_3_V_addr, align 1

ST_202: threshold_4_V_load [1/2] 2.71ns
:16  %threshold_4_V_load = load i8* %threshold_4_V_addr, align 1

ST_202: threshold_5_V_load [1/2] 2.71ns
:18  %threshold_5_V_load = load i8* %threshold_5_V_addr, align 1

ST_202: threshold_6_V_load [1/2] 2.71ns
:20  %threshold_6_V_load = load i8* %threshold_6_V_addr, align 1

ST_202: threshold_7_V_load [1/2] 2.71ns
:22  %threshold_7_V_load = load i8* %threshold_7_V_addr, align 1

ST_202: tmp_30 [1/1] 1.94ns
:23  %tmp_30 = call i8 @_ssdm_op_Mux.ap_auto.8i8.i32(i8 %threshold_0_V_load, i8 %threshold_1_V_load, i8 %threshold_2_V_load, i8 %threshold_3_V_load, i8 %threshold_4_V_load, i8 %threshold_5_V_load, i8 %threshold_6_V_load, i8 %threshold_7_V_load, i32 %arrayNo1_cast)

ST_202: tmp_31 [1/1] 0.00ns
:24  %tmp_31 = sext i8 %tmp_30 to i32

ST_202: tmp_32 [1/1] 2.52ns
:25  %tmp_32 = icmp sgt i32 %sum, %tmp_31

ST_202: output_0_addr [1/1] 0.00ns
:26  %output_0_addr = getelementptr [648 x i1]* %output_0, i64 0, i64 %newIndex6

ST_202: output_1_addr [1/1] 0.00ns
:27  %output_1_addr = getelementptr [648 x i1]* %output_1, i64 0, i64 %newIndex6

ST_202: output_2_addr [1/1] 0.00ns
:28  %output_2_addr = getelementptr [648 x i1]* %output_2, i64 0, i64 %newIndex6

ST_202: output_3_addr [1/1] 0.00ns
:29  %output_3_addr = getelementptr [648 x i1]* %output_3, i64 0, i64 %newIndex6

ST_202: output_4_addr [1/1] 0.00ns
:30  %output_4_addr = getelementptr [648 x i1]* %output_4, i64 0, i64 %newIndex6

ST_202: output_5_addr [1/1] 0.00ns
:31  %output_5_addr = getelementptr [648 x i1]* %output_5, i64 0, i64 %newIndex6

ST_202: output_6_addr [1/1] 0.00ns
:32  %output_6_addr = getelementptr [648 x i1]* %output_6, i64 0, i64 %newIndex6

ST_202: output_7_addr [1/1] 0.00ns
:33  %output_7_addr = getelementptr [648 x i1]* %output_7, i64 0, i64 %newIndex6

ST_202: stg_1047 [1/1] 1.91ns
:34  switch i13 %arrayNo1, label %branch7 [
    i13 0, label %branch0
    i13 1, label %branch1
    i13 2, label %branch2
    i13 3, label %branch3
    i13 4, label %branch4
    i13 5, label %branch5
    i13 6, label %branch6
  ]


 <State 203>: 2.39ns
ST_203: stg_1048 [1/1] 2.39ns
branch6:0  store i1 %tmp_32, i1* %output_6_addr, align 1

ST_203: stg_1049 [1/1] 0.00ns
branch6:1  br label %46

ST_203: stg_1050 [1/1] 2.39ns
branch5:0  store i1 %tmp_32, i1* %output_5_addr, align 1

ST_203: stg_1051 [1/1] 0.00ns
branch5:1  br label %46

ST_203: stg_1052 [1/1] 2.39ns
branch4:0  store i1 %tmp_32, i1* %output_4_addr, align 1

ST_203: stg_1053 [1/1] 0.00ns
branch4:1  br label %46

ST_203: stg_1054 [1/1] 2.39ns
branch3:0  store i1 %tmp_32, i1* %output_3_addr, align 1

ST_203: stg_1055 [1/1] 0.00ns
branch3:1  br label %46

ST_203: stg_1056 [1/1] 2.39ns
branch2:0  store i1 %tmp_32, i1* %output_2_addr, align 1

ST_203: stg_1057 [1/1] 0.00ns
branch2:1  br label %46

ST_203: stg_1058 [1/1] 2.39ns
branch1:0  store i1 %tmp_32, i1* %output_1_addr, align 1

ST_203: stg_1059 [1/1] 0.00ns
branch1:1  br label %46

ST_203: stg_1060 [1/1] 2.39ns
branch0:0  store i1 %tmp_32, i1* %output_0_addr, align 1

ST_203: stg_1061 [1/1] 0.00ns
branch0:1  br label %46

ST_203: stg_1062 [1/1] 2.39ns
branch7:0  store i1 %tmp_32, i1* %output_7_addr, align 1

ST_203: stg_1063 [1/1] 0.00ns
branch7:1  br label %46


 <State 204>: 0.00ns
ST_204: empty_36 [1/1] 0.00ns
:0  %empty_36 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str10, i32 %tmp_26)

ST_204: stg_1065 [1/1] 0.00ns
:1  br label %5



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173
	State 174
	State 175
	State 176
	State 177
	State 178
	State 179
	State 180
	State 181
	State 182
	State 183
	State 184
	State 185
	State 186
	State 187
	State 188
	State 189
	State 190
	State 191
	State 192
	State 193
	State 194
	State 195
	State 196
	State 197
	State 198
	State 199
	State 200
	State 201
	State 202
	State 203
	State 204


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
