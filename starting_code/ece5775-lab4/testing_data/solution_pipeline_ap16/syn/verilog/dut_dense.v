// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        output_0_address0,
        output_0_ce0,
        output_0_we0,
        output_0_d0
);

parameter    ap_ST_st1_fsm_0 = 27'b1;
parameter    ap_ST_st2_fsm_1 = 27'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 27'b100;
parameter    ap_ST_pp0_stg1_fsm_3 = 27'b1000;
parameter    ap_ST_pp0_stg2_fsm_4 = 27'b10000;
parameter    ap_ST_pp0_stg3_fsm_5 = 27'b100000;
parameter    ap_ST_pp0_stg4_fsm_6 = 27'b1000000;
parameter    ap_ST_st16_fsm_7 = 27'b10000000;
parameter    ap_ST_st17_fsm_8 = 27'b100000000;
parameter    ap_ST_st18_fsm_9 = 27'b1000000000;
parameter    ap_ST_st19_fsm_10 = 27'b10000000000;
parameter    ap_ST_st20_fsm_11 = 27'b100000000000;
parameter    ap_ST_st21_fsm_12 = 27'b1000000000000;
parameter    ap_ST_st22_fsm_13 = 27'b10000000000000;
parameter    ap_ST_st23_fsm_14 = 27'b100000000000000;
parameter    ap_ST_st24_fsm_15 = 27'b1000000000000000;
parameter    ap_ST_st25_fsm_16 = 27'b10000000000000000;
parameter    ap_ST_st26_fsm_17 = 27'b100000000000000000;
parameter    ap_ST_st27_fsm_18 = 27'b1000000000000000000;
parameter    ap_ST_st28_fsm_19 = 27'b10000000000000000000;
parameter    ap_ST_st29_fsm_20 = 27'b100000000000000000000;
parameter    ap_ST_st30_fsm_21 = 27'b1000000000000000000000;
parameter    ap_ST_st31_fsm_22 = 27'b10000000000000000000000;
parameter    ap_ST_st32_fsm_23 = 27'b100000000000000000000000;
parameter    ap_ST_st33_fsm_24 = 27'b1000000000000000000000000;
parameter    ap_ST_st34_fsm_25 = 27'b10000000000000000000000000;
parameter    ap_ST_st35_fsm_26 = 27'b100000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C2C80000 = 32'b11000010110010000000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_C3800000 = 32'b11000011100000000000000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_3DB504F3 = 32'b111101101101010000010011110011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] input_0_address0;
output   input_0_ce0;
input  [0:0] input_0_q0;
output  [8:0] output_0_address0;
output   output_0_ce0;
output   output_0_we0;
output  [0:0] output_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_0_ce0;
reg output_0_ce0;
reg output_0_we0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_44;
wire   [11:0] w_fc2_address0;
reg    w_fc2_ce0;
wire   [0:0] w_fc2_q0;
wire   [3:0] b_fc2_address0;
reg    b_fc2_ce0;
wire   [31:0] b_fc2_q0;
reg   [31:0] one_out_reg_146;
reg   [8:0] m_reg_158;
wire   [31:0] grp_fu_175_p2;
reg   [31:0] reg_190;
reg    ap_sig_cseq_ST_st19_fsm_10;
reg    ap_sig_87;
reg    ap_sig_cseq_ST_st28_fsm_19;
reg    ap_sig_94;
wire   [31:0] grp_fu_169_p2;
reg   [31:0] reg_195;
reg    ap_sig_cseq_ST_st24_fsm_15;
reg    ap_sig_104;
reg    ap_sig_cseq_ST_st33_fsm_24;
reg    ap_sig_111;
wire   [0:0] exitcond2_fu_201_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_121;
wire   [3:0] n_1_fu_207_p2;
reg   [3:0] n_1_reg_397;
wire   [9:0] n_cast6_fu_213_p1;
reg   [9:0] n_cast6_reg_402;
wire   [0:0] exitcond_fu_217_p2;
reg   [0:0] exitcond_reg_407;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_137;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_407_pp0_iter1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_407_pp0_iter2;
wire   [8:0] m_3_fu_223_p2;
reg   [8:0] m_3_reg_411;
wire   [0:0] tmp_21_fu_286_p2;
reg   [0:0] tmp_21_reg_426;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_3;
reg    ap_sig_164;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_4;
reg    ap_sig_175;
wire   [31:0] grp_fu_182_p1;
reg   [31:0] tmp_23_reg_436;
wire   [63:0] tmp_25_fu_296_p1;
reg   [63:0] tmp_25_reg_446;
reg    ap_sig_cseq_ST_st27_fsm_18;
reg    ap_sig_193;
reg   [31:0] b_fc2_load_reg_456;
wire   [0:0] tmp_32_fu_185_p2;
reg   [0:0] tmp_32_reg_461;
reg    ap_sig_cseq_ST_st34_fsm_25;
reg    ap_sig_205;
wire   [31:0] biased_max_fu_385_p3;
reg    ap_sig_cseq_ST_st35_fsm_26;
reg    ap_sig_214;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_6;
reg    ap_sig_223;
reg   [31:0] max_reg_122;
reg   [3:0] n_reg_134;
reg   [8:0] m_phi_fu_162_p4;
wire   [63:0] newIndex9_fu_270_p1;
wire   [63:0] tmp_20_fu_275_p1;
wire   [0:0] tmp_33_fu_379_p2;
reg   [31:0] grp_fu_169_p0;
reg   [31:0] grp_fu_169_p1;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_5;
reg    ap_sig_257;
reg    ap_sig_cseq_ST_st20_fsm_11;
reg    ap_sig_265;
reg    ap_sig_cseq_ST_st29_fsm_20;
reg    ap_sig_272;
reg   [31:0] grp_fu_175_p0;
reg   [31:0] grp_fu_175_p1;
reg    ap_sig_cseq_ST_st16_fsm_7;
reg    ap_sig_284;
reg    ap_sig_cseq_ST_st25_fsm_16;
reg    ap_sig_291;
wire   [31:0] grp_fu_182_p0;
wire   [7:0] tmp_36_fu_229_p1;
wire   [10:0] p_shl_fu_233_p3;
wire   [8:0] tmp_37_fu_245_p2;
wire   [9:0] p_shl1_cast_fu_251_p1;
wire   [9:0] tmp1_fu_255_p2;
wire   [11:0] p_shl_cast_fu_241_p1;
wire   [11:0] tmp1_cast_fu_260_p1;
wire   [11:0] w_index_fu_264_p2;
wire   [0:0] tmp2_fu_280_p2;
wire   [31:0] biased_to_int_fu_301_p1;
wire   [31:0] max_to_int_fu_319_p1;
wire   [7:0] tmp_fu_305_p4;
wire   [22:0] tmp_29_fu_315_p1;
wire   [0:0] notrhs_fu_343_p2;
wire   [0:0] notlhs_fu_337_p2;
wire   [7:0] tmp_26_fu_323_p4;
wire   [22:0] tmp_35_fu_333_p1;
wire   [0:0] notrhs8_fu_361_p2;
wire   [0:0] notlhs7_fu_355_p2;
wire   [0:0] tmp_27_fu_349_p2;
wire   [0:0] tmp_30_fu_367_p2;
wire   [0:0] tmp_31_fu_373_p2;
reg   [26:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
end

dut_dense_w_fc2 #(
    .DataWidth( 1 ),
    .AddressRange( 2560 ),
    .AddressWidth( 12 ))
w_fc2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_fc2_address0),
    .ce0(w_fc2_ce0),
    .q0(w_fc2_q0)
);

dut_dense_b_fc2 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_fc2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_fc2_address0),
    .ce0(b_fc2_ce0),
    .q0(b_fc2_q0)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U200(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_169_p0),
    .din1(grp_fu_169_p1),
    .ce(1'b1),
    .dout(grp_fu_169_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U201(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_175_p0),
    .din1(grp_fu_175_p1),
    .ce(1'b1),
    .dout(grp_fu_175_p2)
);

dut_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_sitofp_32ns_32_6_U202(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_182_p0),
    .ce(1'b1),
    .dout(grp_fu_182_p1)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U203(
    .din0(reg_195),
    .din1(max_reg_122),
    .opcode(ap_const_lv5_2),
    .dout(tmp_32_fu_185_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(1'b0 == exitcond_fu_217_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_201_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond_reg_407) & (1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_6))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_201_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_6) & ~(1'b0 == exitcond_reg_407)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg4_fsm_6)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_201_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_407))) begin
        m_reg_158 <= m_3_reg_411;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_201_p2 == 1'b0))) begin
        m_reg_158 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st35_fsm_26)) begin
        max_reg_122 <= biased_max_fu_385_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        max_reg_122 <= ap_const_lv32_C2C80000;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st35_fsm_26)) begin
        n_reg_134 <= n_1_reg_397;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n_reg_134 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (1'b0 == ap_reg_ppstg_exitcond_reg_407_pp0_iter2))) begin
        one_out_reg_146 <= grp_fu_169_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_201_p2 == 1'b0))) begin
        one_out_reg_146 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2)) begin
        ap_reg_ppstg_exitcond_reg_407_pp0_iter1 <= exitcond_reg_407;
        ap_reg_ppstg_exitcond_reg_407_pp0_iter2 <= ap_reg_ppstg_exitcond_reg_407_pp0_iter1;
        exitcond_reg_407 <= exitcond_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st28_fsm_19)) begin
        b_fc2_load_reg_456 <= b_fc2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        m_3_reg_411 <= m_3_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        n_1_reg_397 <= n_1_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_201_p2 == 1'b0))) begin
        n_cast6_reg_402[3 : 0] <= n_cast6_fu_213_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_10) | (1'b1 == ap_sig_cseq_ST_st28_fsm_19))) begin
        reg_190 <= grp_fu_175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_15) | (1'b1 == ap_sig_cseq_ST_st33_fsm_24))) begin
        reg_195 <= grp_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (1'b0 == exitcond_reg_407))) begin
        tmp_21_reg_426 <= tmp_21_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & (1'b0 == ap_reg_ppstg_exitcond_reg_407_pp0_iter1))) begin
        tmp_23_reg_436 <= grp_fu_182_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_18)) begin
        tmp_25_reg_446[3 : 0] <= tmp_25_fu_296_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st34_fsm_25)) begin
        tmp_32_reg_461 <= tmp_32_fu_185_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_201_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_201_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_164) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_175) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_257) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_223) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_284) begin
        ap_sig_cseq_ST_st16_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_87) begin
        ap_sig_cseq_ST_st19_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_44) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_265) begin
        ap_sig_cseq_ST_st20_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_104) begin
        ap_sig_cseq_ST_st24_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_291) begin
        ap_sig_cseq_ST_st25_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_193) begin
        ap_sig_cseq_ST_st27_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_94) begin
        ap_sig_cseq_ST_st28_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_272) begin
        ap_sig_cseq_ST_st29_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_121) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_111) begin
        ap_sig_cseq_ST_st33_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_205) begin
        ap_sig_cseq_ST_st34_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_214) begin
        ap_sig_cseq_ST_st35_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_18)) begin
        b_fc2_ce0 = 1'b1;
    end else begin
        b_fc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_11) | (1'b1 == ap_sig_cseq_ST_st29_fsm_20))) begin
        grp_fu_169_p0 = reg_190;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_5))) begin
        grp_fu_169_p0 = one_out_reg_146;
    end else begin
        grp_fu_169_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_20)) begin
        grp_fu_169_p1 = b_fc2_load_reg_456;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_11)) begin
        grp_fu_169_p1 = ap_const_lv32_C3800000;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg3_fsm_5))) begin
        grp_fu_169_p1 = tmp_23_reg_436;
    end else begin
        grp_fu_169_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_16)) begin
        grp_fu_175_p0 = reg_195;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_7)) begin
        grp_fu_175_p0 = one_out_reg_146;
    end else begin
        grp_fu_175_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_16)) begin
        grp_fu_175_p1 = ap_const_lv32_3DB504F3;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_7)) begin
        grp_fu_175_p1 = ap_const_lv32_40000000;
    end else begin
        grp_fu_175_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_407))) begin
        m_phi_fu_162_p4 = m_3_reg_411;
    end else begin
        m_phi_fu_162_p4 = m_reg_158;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st35_fsm_26)) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st35_fsm_26)) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        w_fc2_ce0 = 1'b1;
    end else begin
        w_fc2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond2_fu_201_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(1'b0 == exitcond_fu_217_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_7;
            end
        end
        ap_ST_pp0_stg1_fsm_3 : begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_4;
        end
        ap_ST_pp0_stg2_fsm_4 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b1 == ap_sig_cseq_ST_pp0_stg2_fsm_4) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_7;
            end
        end
        ap_ST_pp0_stg3_fsm_5 : begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_6;
        end
        ap_ST_pp0_stg4_fsm_6 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
        end
        ap_ST_st16_fsm_7 : begin
            ap_NS_fsm = ap_ST_st17_fsm_8;
        end
        ap_ST_st17_fsm_8 : begin
            ap_NS_fsm = ap_ST_st18_fsm_9;
        end
        ap_ST_st18_fsm_9 : begin
            ap_NS_fsm = ap_ST_st19_fsm_10;
        end
        ap_ST_st19_fsm_10 : begin
            ap_NS_fsm = ap_ST_st20_fsm_11;
        end
        ap_ST_st20_fsm_11 : begin
            ap_NS_fsm = ap_ST_st21_fsm_12;
        end
        ap_ST_st21_fsm_12 : begin
            ap_NS_fsm = ap_ST_st22_fsm_13;
        end
        ap_ST_st22_fsm_13 : begin
            ap_NS_fsm = ap_ST_st23_fsm_14;
        end
        ap_ST_st23_fsm_14 : begin
            ap_NS_fsm = ap_ST_st24_fsm_15;
        end
        ap_ST_st24_fsm_15 : begin
            ap_NS_fsm = ap_ST_st25_fsm_16;
        end
        ap_ST_st25_fsm_16 : begin
            ap_NS_fsm = ap_ST_st26_fsm_17;
        end
        ap_ST_st26_fsm_17 : begin
            ap_NS_fsm = ap_ST_st27_fsm_18;
        end
        ap_ST_st27_fsm_18 : begin
            ap_NS_fsm = ap_ST_st28_fsm_19;
        end
        ap_ST_st28_fsm_19 : begin
            ap_NS_fsm = ap_ST_st29_fsm_20;
        end
        ap_ST_st29_fsm_20 : begin
            ap_NS_fsm = ap_ST_st30_fsm_21;
        end
        ap_ST_st30_fsm_21 : begin
            ap_NS_fsm = ap_ST_st31_fsm_22;
        end
        ap_ST_st31_fsm_22 : begin
            ap_NS_fsm = ap_ST_st32_fsm_23;
        end
        ap_ST_st32_fsm_23 : begin
            ap_NS_fsm = ap_ST_st33_fsm_24;
        end
        ap_ST_st33_fsm_24 : begin
            ap_NS_fsm = ap_ST_st34_fsm_25;
        end
        ap_ST_st34_fsm_25 : begin
            ap_NS_fsm = ap_ST_st35_fsm_26;
        end
        ap_ST_st35_fsm_26 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_104 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_111 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_121 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_164 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_175 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_193 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_205 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_214 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_223 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_257 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_265 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_272 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_284 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_291 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_44 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_87 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_94 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

assign b_fc2_address0 = tmp_25_fu_296_p1;

assign biased_max_fu_385_p3 = ((tmp_33_fu_379_p2[0:0] === 1'b1) ? reg_195 : max_reg_122);

assign biased_to_int_fu_301_p1 = reg_195;

assign exitcond2_fu_201_p2 = ((n_reg_134 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign exitcond_fu_217_p2 = ((m_phi_fu_162_p4 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign grp_fu_182_p0 = tmp_21_reg_426;

assign input_0_address0 = newIndex9_fu_270_p1;

assign m_3_fu_223_p2 = (m_phi_fu_162_p4 + ap_const_lv9_1);

assign max_to_int_fu_319_p1 = max_reg_122;

assign n_1_fu_207_p2 = (n_reg_134 + ap_const_lv4_1);

assign n_cast6_fu_213_p1 = n_reg_134;

assign newIndex9_fu_270_p1 = m_phi_fu_162_p4;

assign notlhs7_fu_355_p2 = ((tmp_26_fu_323_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_337_p2 = ((tmp_fu_305_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs8_fu_361_p2 = ((tmp_35_fu_333_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_343_p2 = ((tmp_29_fu_315_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign output_0_address0 = tmp_25_reg_446;

assign output_0_d0 = tmp_33_fu_379_p2;

assign p_shl1_cast_fu_251_p1 = tmp_37_fu_245_p2;

assign p_shl_cast_fu_241_p1 = p_shl_fu_233_p3;

assign p_shl_fu_233_p3 = {{tmp_36_fu_229_p1}, {ap_const_lv3_0}};

assign tmp1_cast_fu_260_p1 = tmp1_fu_255_p2;

assign tmp1_fu_255_p2 = (n_cast6_reg_402 + p_shl1_cast_fu_251_p1);

assign tmp2_fu_280_p2 = (input_0_q0 ^ 1'b1);

assign tmp_20_fu_275_p1 = w_index_fu_264_p2;

assign tmp_21_fu_286_p2 = (w_fc2_q0 ^ tmp2_fu_280_p2);

assign tmp_25_fu_296_p1 = n_reg_134;

assign tmp_26_fu_323_p4 = {{max_to_int_fu_319_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_27_fu_349_p2 = (notrhs_fu_343_p2 | notlhs_fu_337_p2);

assign tmp_29_fu_315_p1 = biased_to_int_fu_301_p1[22:0];

assign tmp_30_fu_367_p2 = (notrhs8_fu_361_p2 | notlhs7_fu_355_p2);

assign tmp_31_fu_373_p2 = (tmp_27_fu_349_p2 & tmp_30_fu_367_p2);

assign tmp_33_fu_379_p2 = (tmp_31_fu_373_p2 & tmp_32_reg_461);

assign tmp_35_fu_333_p1 = max_to_int_fu_319_p1[22:0];

assign tmp_36_fu_229_p1 = m_phi_fu_162_p4[7:0];

assign tmp_37_fu_245_p2 = m_phi_fu_162_p4 << ap_const_lv9_1;

assign tmp_fu_305_p4 = {{biased_to_int_fu_301_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign w_fc2_address0 = tmp_20_fu_275_p1;

assign w_index_fu_264_p2 = (p_shl_cast_fu_241_p1 + tmp1_cast_fu_260_p1);

always @ (posedge ap_clk) begin
    n_cast6_reg_402[9:4] <= 6'b000000;
    tmp_25_reg_446[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //dut_dense
