

================================================================
== Vivado HLS Report for 'dut'
================================================================
* Date:           Sat Oct 29 16:20:41 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        bnn.prj
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.45|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+---------+--------+---------+---------+
    |      Latency     |     Interval     | Pipeline|
    |   min  |   max   |   min  |   max   |   Type  |
    +--------+---------+--------+---------+---------+
    |  786720|  2817084|  786721|  2817085|   none  |
    +--------+---------+--------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+--------+--------+----------+-----------+-----------+------+----------+
        |                 |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1         |     272|     272|        34|          -|          -|     8|    no    |
        | + Loop 1.1      |      32|      32|         1|          -|          -|    32|    no    |
        |- LOOP_DENSE_0   |  663296|  663296|      2591|          -|          -|   256|    no    |
        | + LOOP_DENSE_1  |    2587|    2587|        33|          5|          1|   512|    yes   |
        |- Loop 3         |      18|      18|         2|          -|          -|     9|    no    |
        +-----------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 33


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 55
* Pipeline: 1
  Pipeline-0: II = 5, D = 33, States = { 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (exitcond1)
	3  / (!exitcond1)
3 --> 
	2  / (exitcond)
	3  / (!exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / (!exitcond1_i)
	53  / (exitcond1_i)
18 --> 
	19  / true
19 --> 
	52  / (exitcond_i1)
	20  / (!exitcond_i1)
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	19  / true
52 --> 
	17  / true
53 --> 
	54  / true
54 --> 
	55  / (!exitcond_i)
55 --> 
	54  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %strm_out_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_1: empty_18 [1/1] 0.00ns
:1  %empty_18 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %strm_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_1: mem_conv1_0 [1/1] 0.00ns
:2  %mem_conv1_0 = alloca [2592 x i1], align 1

ST_1: mem_conv1_1 [1/1] 0.00ns
:3  %mem_conv1_1 = alloca [2592 x i1], align 1

ST_1: mem_conv2_0 [1/1] 0.00ns
:4  %mem_conv2_0 = alloca [2592 x i1], align 1

ST_1: mem_conv2_1 [1/1] 0.00ns
:5  %mem_conv2_1 = alloca [2592 x i1], align 1

ST_1: stg_62 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32* %strm_in_V_V), !map !75

ST_1: stg_63 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %strm_out_V_V), !map !81

ST_1: stg_64 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @dut_str) nounwind

ST_1: input_0 [1/1] 0.00ns
:9  %input_0 = alloca [2592 x i1], align 1

ST_1: input_1 [1/1] 0.00ns
:10  %input_1 = alloca [2592 x i1], align 1

ST_1: stg_67 [1/1] 1.57ns
:11  br label %.loopexit


 <State 2>: 4.38ns
ST_2: i [1/1] 0.00ns
.loopexit:0  %i = phi i4 [ 0, %0 ], [ %i_2, %2 ]

ST_2: exitcond1 [1/1] 1.88ns
.loopexit:1  %exitcond1 = icmp eq i4 %i, -8

ST_2: empty_19 [1/1] 0.00ns
.loopexit:2  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_2: i_2 [1/1] 0.80ns
.loopexit:3  %i_2 = add i4 %i, 1

ST_2: stg_72 [1/1] 0.00ns
.loopexit:4  br i1 %exitcond1, label %3, label %1

ST_2: tmp_V_1 [1/1] 4.38ns
:0  %tmp_V_1 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %strm_in_V_V)

ST_2: tmp_13 [1/1] 0.00ns
:1  %tmp_13 = trunc i4 %i to i3

ST_2: tmp_s [1/1] 0.00ns
:2  %tmp_s = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %tmp_13, i5 0)

ST_2: stg_76 [1/1] 1.57ns
:3  br label %2

ST_2: stg_77 [2/2] 2.76ns
:0  call fastcc void @dut_pad([2592 x i1]* %input_0, [2592 x i1]* %input_1, [2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, i7 1, i6 16)


 <State 3>: 4.43ns
ST_3: Hi_assign [1/1] 0.00ns
:0  %Hi_assign = phi i6 [ 0, %1 ], [ %j, %branch0 ]

ST_3: Hi_assign_cast [1/1] 0.00ns
:1  %Hi_assign_cast = zext i6 %Hi_assign to i8

ST_3: Hi_assign_cast1 [1/1] 0.00ns
:2  %Hi_assign_cast1 = zext i6 %Hi_assign to i32

ST_3: exitcond [1/1] 1.94ns
:3  %exitcond = icmp eq i6 %Hi_assign, -32

ST_3: empty_20 [1/1] 0.00ns
:4  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)

ST_3: j [1/1] 1.72ns
:5  %j = add i6 %Hi_assign, 1

ST_3: stg_84 [1/1] 0.00ns
:6  br i1 %exitcond, label %.loopexit, label %branch0

ST_3: tmp_14 [1/1] 0.00ns
branch0:0  %tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %tmp_V_1, i32 %Hi_assign_cast1)

ST_3: tmp_7 [1/1] 1.72ns
branch0:1  %tmp_7 = add i8 %tmp_s, %Hi_assign_cast

ST_3: newIndex1 [1/1] 0.00ns
branch0:2  %newIndex1 = zext i8 %tmp_7 to i64

ST_3: input_0_addr [1/1] 0.00ns
branch0:3  %input_0_addr = getelementptr [2592 x i1]* %input_0, i64 0, i64 %newIndex1

ST_3: stg_89 [1/1] 2.71ns
branch0:4  store i1 %tmp_14, i1* %input_0_addr, align 1

ST_3: stg_90 [1/1] 0.00ns
branch0:5  br label %2


 <State 4>: 0.00ns
ST_4: stg_91 [1/2] 0.00ns
:0  call fastcc void @dut_pad([2592 x i1]* %input_0, [2592 x i1]* %input_1, [2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, i7 1, i6 16)


 <State 5>: 2.76ns
ST_5: stg_92 [2/2] 2.76ns
:1  call fastcc void @dut_conv([2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, [2592 x i8]* @threshold1_V_0, [2592 x i8]* @threshold1_V_1, i7 1, i7 16, i6 18, i1 false)


 <State 6>: 0.00ns
ST_6: stg_93 [1/2] 0.00ns
:1  call fastcc void @dut_conv([2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, [2592 x i8]* @threshold1_V_0, [2592 x i8]* @threshold1_V_1, i7 1, i7 16, i6 18, i1 false)


 <State 7>: 1.04ns
ST_7: stg_94 [2/2] 1.04ns
:2  call fastcc void @dut_max_pool([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, [2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, i7 16, i6 16)


 <State 8>: 0.00ns
ST_8: stg_95 [1/2] 0.00ns
:2  call fastcc void @dut_max_pool([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, [2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, i7 16, i6 16)


 <State 9>: 2.76ns
ST_9: stg_96 [2/2] 2.76ns
:3  call fastcc void @dut_pad([2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, i7 16, i6 8)


 <State 10>: 0.00ns
ST_10: stg_97 [1/2] 0.00ns
:3  call fastcc void @dut_pad([2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, i7 16, i6 8)


 <State 11>: 2.76ns
ST_11: stg_98 [2/2] 2.76ns
:4  call fastcc void @dut_conv([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, [2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i8]* @threshold2_V_0, [2592 x i8]* @threshold2_V_1, i7 16, i7 32, i6 10, i1 true)


 <State 12>: 0.00ns
ST_12: stg_99 [1/2] 0.00ns
:4  call fastcc void @dut_conv([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, [2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i8]* @threshold2_V_0, [2592 x i8]* @threshold2_V_1, i7 16, i7 32, i6 10, i1 true)


 <State 13>: 1.04ns
ST_13: stg_100 [2/2] 1.04ns
:5  call fastcc void @dut_max_pool([2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, i7 32, i6 8)


 <State 14>: 0.00ns
ST_14: stg_101 [1/2] 0.00ns
:5  call fastcc void @dut_max_pool([2592 x i1]* %mem_conv1_0, [2592 x i1]* %mem_conv1_1, [2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv2_1, i7 32, i6 8)


 <State 15>: 0.00ns
ST_15: stg_102 [2/2] 0.00ns
:6  call fastcc void @dut_reshape([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv1_0)


 <State 16>: 1.57ns
ST_16: stg_103 [1/2] 0.00ns
:6  call fastcc void @dut_reshape([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv1_0)

ST_16: stg_104 [1/1] 1.57ns
:7  br label %4


 <State 17>: 3.40ns
ST_17: n_i [1/1] 0.00ns
:0  %n_i = phi i9 [ 0, %3 ], [ %n, %branch6.i ]

ST_17: exitcond1_i [1/1] 2.03ns
:1  %exitcond1_i = icmp eq i9 %n_i, -256

ST_17: n [1/1] 1.84ns
:2  %n = add i9 %n_i, 1

ST_17: stg_108 [1/1] 0.00ns
:3  br i1 %exitcond1_i, label %dense.1.exit, label %5

ST_17: tmp_12_i [1/1] 0.00ns
:5  %tmp_12_i = zext i9 %n_i to i64

ST_17: b_fc1_addr [1/1] 0.00ns
:6  %b_fc1_addr = getelementptr [256 x float]* @b_fc1, i64 0, i64 %tmp_12_i

ST_17: b_fc1_load [2/2] 2.39ns
:7  %b_fc1_load = load float* %b_fc1_addr, align 4

ST_17: mem_conv2_0_addr [1/1] 0.00ns
:8  %mem_conv2_0_addr = getelementptr [2592 x i1]* %mem_conv2_0, i64 0, i64 %tmp_12_i

ST_17: stg_113 [2/2] 0.00ns
dense.1.exit:0  call fastcc void @dut_dense([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv1_0)


 <State 18>: 2.39ns
ST_18: n_i_cast9 [1/1] 0.00ns
:0  %n_i_cast9 = zext i9 %n_i to i17

ST_18: empty_21 [1/1] 0.00ns
:1  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_18: stg_116 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str23) nounwind

ST_18: tmp_i [1/1] 0.00ns
:3  %tmp_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str23)

ST_18: stg_118 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind

ST_18: b_fc1_load [1/2] 2.39ns
:7  %b_fc1_load = load float* %b_fc1_addr, align 4

ST_18: stg_120 [1/1] 1.57ns
:9  br label %6


 <State 19>: 4.47ns
ST_19: one_out_i [1/1] 0.00ns
:0  %one_out_i = phi float [ 0.000000e+00, %5 ], [ %one_out_1, %ifFalse ]

ST_19: m_i [1/1] 0.00ns
:1  %m_i = phi i10 [ 0, %5 ], [ %m, %ifFalse ]

ST_19: exitcond_i1 [1/1] 2.07ns
:2  %exitcond_i1 = icmp eq i10 %m_i, -512

ST_19: m [1/1] 1.84ns
:3  %m = add i10 %m_i, 1

ST_19: stg_125 [1/1] 0.00ns
:4  br i1 %exitcond_i1, label %branch6.i, label %branch0.i

ST_19: tmp_15 [1/1] 0.00ns
branch0.i:4  %tmp_15 = trunc i10 %m_i to i9

ST_19: tmp_9_i [1/1] 0.00ns
branch0.i:5  %tmp_9_i = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %tmp_15, i8 0)

ST_19: w_index [1/1] 2.08ns
branch0.i:6  %w_index = add i17 %n_i_cast9, %tmp_9_i

ST_19: newIndex3_i [1/1] 0.00ns
branch0.i:7  %newIndex3_i = zext i10 %m_i to i64

ST_19: mem_conv1_0_addr_1 [1/1] 0.00ns
branch0.i:8  %mem_conv1_0_addr_1 = getelementptr [2592 x i1]* %mem_conv1_0, i64 0, i64 %newIndex3_i

ST_19: mem_conv1_0_load_1 [2/2] 2.71ns
branch0.i:9  %mem_conv1_0_load_1 = load i1* %mem_conv1_0_addr_1, align 1

ST_19: tmp_14_i [1/1] 0.00ns
branch0.i:10  %tmp_14_i = zext i17 %w_index to i64

ST_19: w_fc1_addr [1/1] 0.00ns
branch0.i:11  %w_fc1_addr = getelementptr [131072 x i1]* @w_fc1, i64 0, i64 %tmp_14_i

ST_19: w_fc1_load [2/2] 2.39ns
branch0.i:12  %w_fc1_load = load i1* %w_fc1_addr, align 1

ST_19: ifzero [1/1] 2.07ns
branch0.i:19  %ifzero = icmp eq i10 %m, -512

ST_19: stg_136 [1/1] 0.00ns
branch0.i:20  br i1 %ifzero, label %ifTrue, label %ifFalse


 <State 20>: 4.08ns
ST_20: mem_conv1_0_load_1 [1/2] 2.71ns
branch0.i:9  %mem_conv1_0_load_1 = load i1* %mem_conv1_0_addr_1, align 1

ST_20: w_fc1_load [1/2] 2.39ns
branch0.i:12  %w_fc1_load = load i1* %w_fc1_addr, align 1

ST_20: tmp [1/1] 0.00ns (grouped into LUT with out node tmp_15_i)
branch0.i:13  %tmp = xor i1 %w_fc1_load, true

ST_20: tmp_15_i [1/1] 1.37ns (out node of the LUT)
branch0.i:14  %tmp_15_i = xor i1 %mem_conv1_0_load_1, %tmp


 <State 21>: 6.41ns
ST_21: tmp_16_i [1/1] 0.00ns
branch0.i:15  %tmp_16_i = zext i1 %tmp_15_i to i32

ST_21: tmp_17_i [6/6] 6.41ns
branch0.i:16  %tmp_17_i = sitofp i32 %tmp_16_i to float


 <State 22>: 6.41ns
ST_22: tmp_17_i [5/6] 6.41ns
branch0.i:16  %tmp_17_i = sitofp i32 %tmp_16_i to float


 <State 23>: 6.41ns
ST_23: tmp_17_i [4/6] 6.41ns
branch0.i:16  %tmp_17_i = sitofp i32 %tmp_16_i to float


 <State 24>: 6.41ns
ST_24: tmp_17_i [3/6] 6.41ns
branch0.i:16  %tmp_17_i = sitofp i32 %tmp_16_i to float


 <State 25>: 6.41ns
ST_25: tmp_17_i [2/6] 6.41ns
branch0.i:16  %tmp_17_i = sitofp i32 %tmp_16_i to float


 <State 26>: 6.41ns
ST_26: tmp_17_i [1/6] 6.41ns
branch0.i:16  %tmp_17_i = sitofp i32 %tmp_16_i to float


 <State 27>: 7.26ns
ST_27: one_out_1 [5/5] 7.26ns
branch0.i:17  %one_out_1 = fadd float %one_out_i, %tmp_17_i


 <State 28>: 7.26ns
ST_28: one_out_1 [4/5] 7.26ns
branch0.i:17  %one_out_1 = fadd float %one_out_i, %tmp_17_i


 <State 29>: 7.26ns
ST_29: one_out_1 [3/5] 7.26ns
branch0.i:17  %one_out_1 = fadd float %one_out_i, %tmp_17_i


 <State 30>: 7.26ns
ST_30: one_out_1 [2/5] 7.26ns
branch0.i:17  %one_out_1 = fadd float %one_out_i, %tmp_17_i


 <State 31>: 7.26ns
ST_31: one_out_1 [1/5] 7.26ns
branch0.i:17  %one_out_1 = fadd float %one_out_i, %tmp_17_i


 <State 32>: 5.70ns
ST_32: tmp_10_i [4/4] 5.70ns
ifTrue:0  %tmp_10_i = fmul float %one_out_1, 2.000000e+00


 <State 33>: 5.70ns
ST_33: tmp_10_i [3/4] 5.70ns
ifTrue:0  %tmp_10_i = fmul float %one_out_1, 2.000000e+00


 <State 34>: 5.70ns
ST_34: tmp_10_i [2/4] 5.70ns
ifTrue:0  %tmp_10_i = fmul float %one_out_1, 2.000000e+00


 <State 35>: 5.70ns
ST_35: tmp_10_i [1/4] 5.70ns
ifTrue:0  %tmp_10_i = fmul float %one_out_1, 2.000000e+00


 <State 36>: 7.26ns
ST_36: tmp_11_i [5/5] 7.26ns
ifTrue:1  %tmp_11_i = fadd float %tmp_10_i, -5.120000e+02


 <State 37>: 7.26ns
ST_37: tmp_11_i [4/5] 7.26ns
ifTrue:1  %tmp_11_i = fadd float %tmp_10_i, -5.120000e+02


 <State 38>: 7.26ns
ST_38: tmp_11_i [3/5] 7.26ns
ifTrue:1  %tmp_11_i = fadd float %tmp_10_i, -5.120000e+02


 <State 39>: 7.26ns
ST_39: tmp_11_i [2/5] 7.26ns
ifTrue:1  %tmp_11_i = fadd float %tmp_10_i, -5.120000e+02


 <State 40>: 7.26ns
ST_40: tmp_11_i [1/5] 7.26ns
ifTrue:1  %tmp_11_i = fadd float %tmp_10_i, -5.120000e+02


 <State 41>: 5.70ns
ST_41: one_out [4/4] 5.70ns
ifTrue:2  %one_out = fmul float %tmp_11_i, 6.250000e-02


 <State 42>: 5.70ns
ST_42: one_out [3/4] 5.70ns
ifTrue:2  %one_out = fmul float %tmp_11_i, 6.250000e-02


 <State 43>: 5.70ns
ST_43: one_out [2/4] 5.70ns
ifTrue:2  %one_out = fmul float %tmp_11_i, 6.250000e-02


 <State 44>: 5.70ns
ST_44: one_out [1/4] 5.70ns
ifTrue:2  %one_out = fmul float %tmp_11_i, 6.250000e-02


 <State 45>: 7.26ns
ST_45: biased [5/5] 7.26ns
ifTrue:3  %biased = fadd float %one_out, %b_fc1_load


 <State 46>: 7.26ns
ST_46: biased [4/5] 7.26ns
ifTrue:3  %biased = fadd float %one_out, %b_fc1_load


 <State 47>: 7.26ns
ST_47: biased [3/5] 7.26ns
ifTrue:3  %biased = fadd float %one_out, %b_fc1_load


 <State 48>: 7.26ns
ST_48: biased [2/5] 7.26ns
ifTrue:3  %biased = fadd float %one_out, %b_fc1_load


 <State 49>: 7.26ns
ST_49: biased [1/5] 7.26ns
ifTrue:3  %biased = fadd float %one_out, %b_fc1_load


 <State 50>: 8.16ns
ST_50: biased_i_to_int [1/1] 0.00ns
ifTrue:4  %biased_i_to_int = bitcast float %biased to i32

ST_50: tmp_1 [1/1] 0.00ns
ifTrue:5  %tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %biased_i_to_int, i32 23, i32 30)

ST_50: tmp_16 [1/1] 0.00ns
ifTrue:6  %tmp_16 = trunc i32 %biased_i_to_int to i23

ST_50: notlhs [1/1] 2.00ns
ifTrue:7  %notlhs = icmp ne i8 %tmp_1, -1

ST_50: notrhs [1/1] 2.39ns
ifTrue:8  %notrhs = icmp eq i23 %tmp_16, 0

ST_50: tmp_3 [1/1] 0.00ns (grouped into LUT with out node tmp_5)
ifTrue:9  %tmp_3 = or i1 %notrhs, %notlhs

ST_50: tmp_4 [1/1] 6.79ns
ifTrue:10  %tmp_4 = fcmp ogt float %biased, 0.000000e+00

ST_50: tmp_5 [1/1] 1.37ns (out node of the LUT)
ifTrue:11  %tmp_5 = and i1 %tmp_3, %tmp_4


 <State 51>: 2.71ns
ST_51: empty_22 [1/1] 0.00ns
branch0.i:0  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)

ST_51: stg_180 [1/1] 0.00ns
branch0.i:1  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str24) nounwind

ST_51: tmp_19_i [1/1] 0.00ns
branch0.i:2  %tmp_19_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str24)

ST_51: stg_182 [1/1] 0.00ns
branch0.i:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind

ST_51: empty_23 [1/1] 0.00ns
branch0.i:18  %empty_23 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str24, i32 %tmp_19_i)

ST_51: stg_184 [1/1] 2.71ns
ifTrue:12  store i1 %tmp_5, i1* %mem_conv2_0_addr, align 1

ST_51: stg_185 [1/1] 0.00ns
ifTrue:13  br label %ifFalse

ST_51: stg_186 [1/1] 0.00ns
ifFalse:0  br label %6


 <State 52>: 0.00ns
ST_52: empty_24 [1/1] 0.00ns
branch6.i:0  %empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str23, i32 %tmp_i)

ST_52: stg_188 [1/1] 0.00ns
branch6.i:1  br label %4


 <State 53>: 1.57ns
ST_53: stg_189 [1/2] 0.00ns
dense.1.exit:0  call fastcc void @dut_dense([2592 x i1]* %mem_conv2_0, [2592 x i1]* %mem_conv1_0)

ST_53: stg_190 [1/1] 1.57ns
dense.1.exit:1  br label %7


 <State 54>: 4.38ns
ST_54: output_V [1/1] 0.00ns
:0  %output_V = phi i32 [ 0, %dense.1.exit ], [ %phitmp_i, %._crit_edge.i ]

ST_54: max_id_V [1/1] 0.00ns
:1  %max_id_V = phi i4 [ 1, %dense.1.exit ], [ %i_3, %._crit_edge.i ]

ST_54: max_id_V_cast4 [1/1] 0.00ns
:2  %max_id_V_cast4 = zext i4 %max_id_V to i32

ST_54: exitcond_i [1/1] 1.88ns
:3  %exitcond_i = icmp eq i4 %max_id_V, -6

ST_54: empty_25 [1/1] 0.00ns
:4  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)

ST_54: stg_196 [1/1] 0.00ns
:5  br i1 %exitcond_i, label %bnn_xcel.exit, label %._crit_edge.i

ST_54: newIndex18_i [1/1] 0.00ns
._crit_edge.i:0  %newIndex18_i = zext i4 %max_id_V to i64

ST_54: mem_conv1_0_addr [1/1] 0.00ns
._crit_edge.i:1  %mem_conv1_0_addr = getelementptr [2592 x i1]* %mem_conv1_0, i64 0, i64 %newIndex18_i

ST_54: mem_conv1_0_load [2/2] 2.71ns
._crit_edge.i:2  %mem_conv1_0_load = load i1* %mem_conv1_0_addr, align 1

ST_54: i_3 [1/1] 0.80ns
._crit_edge.i:4  %i_3 = add i4 %max_id_V, 1

ST_54: stg_201 [1/1] 4.38ns
bnn_xcel.exit:0  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %strm_out_V_V, i32 %output_V)

ST_54: stg_202 [1/1] 0.00ns
bnn_xcel.exit:1  ret void


 <State 55>: 4.08ns
ST_55: mem_conv1_0_load [1/2] 2.71ns
._crit_edge.i:2  %mem_conv1_0_load = load i1* %mem_conv1_0_addr, align 1

ST_55: phitmp_i [1/1] 1.37ns
._crit_edge.i:3  %phitmp_i = select i1 %mem_conv1_0_load, i32 %max_id_V_cast4, i32 %output_V

ST_55: stg_205 [1/1] 0.00ns
._crit_edge.i:5  br label %7



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
