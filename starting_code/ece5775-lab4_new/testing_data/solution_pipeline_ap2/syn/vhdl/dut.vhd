-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_V_empty_n : IN STD_LOGIC;
    strm_in_V_V_read : OUT STD_LOGIC;
    strm_out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_V_full_n : IN STD_LOGIC;
    strm_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of dut is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.452000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=26,HLS_SYN_DSP=28,HLS_SYN_FF=9371,HLS_SYN_LUT=40051}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_pp0_stg0_fsm_18 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_pp0_stg1_fsm_19 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_pp0_stg2_fsm_20 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_pp0_stg3_fsm_21 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_pp0_stg4_fsm_22 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_st52_fsm_23 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_st53_fsm_24 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_st54_fsm_25 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_st55_fsm_26 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C4000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000100000000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_3D800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111101100000000000000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_42 : BOOLEAN;
    signal threshold1_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal threshold1_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal threshold2_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal threshold2_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fc1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_fc1_ce0 : STD_LOGIC;
    signal b_fc1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_fc1_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal w_fc1_ce0 : STD_LOGIC;
    signal w_fc1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_in_V_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_109 : BOOLEAN;
    signal exitcond1_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_V_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st54_fsm_25 : STD_LOGIC;
    signal ap_sig_121 : BOOLEAN;
    signal exitcond_i_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_out_i_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_i_reg_308 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_417_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp0_stg1_fsm_19 : STD_LOGIC;
    signal ap_sig_138 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ifzero_reg_731 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ifzero_reg_731_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_18 : STD_LOGIC;
    signal ap_sig_165 : BOOLEAN;
    signal ap_reg_ppstg_ifzero_reg_731_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_449_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_reg_661 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_177 : BOOLEAN;
    signal tmp_V_1_reg_666 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_459_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_671 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_fu_481_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_192 : BOOLEAN;
    signal n_fu_511_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_reg_687 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_201 : BOOLEAN;
    signal exitcond1_i_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv2_0_addr_reg_697 : STD_LOGIC_VECTOR (11 downto 0);
    signal n_i_cast9_fu_523_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal n_i_cast9_reg_702 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_217 : BOOLEAN;
    signal b_fc1_load_reg_707 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i1_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i1_reg_712 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_533_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal m_reg_716 : STD_LOGIC_VECTOR (9 downto 0);
    signal ifzero_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ifzero_reg_731_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ifzero_reg_731_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ifzero_reg_731_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ifzero_reg_731_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_reg_735 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg2_fsm_20 : STD_LOGIC;
    signal ap_sig_255 : BOOLEAN;
    signal grp_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_i_reg_745 : STD_LOGIC_VECTOR (31 downto 0);
    signal one_out_1_reg_750 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_reg_756 : STD_LOGIC_VECTOR (31 downto 0);
    signal one_out_reg_761 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_766 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_id_V_cast4_fu_630_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_id_V_cast4_reg_771 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_284 : BOOLEAN;
    signal i_3_fu_645_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_784 : STD_LOGIC_VECTOR (3 downto 0);
    signal phitmp_i_fu_651_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st55_fsm_26 : STD_LOGIC;
    signal ap_sig_299 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg4_fsm_22 : STD_LOGIC;
    signal ap_sig_308 : BOOLEAN;
    signal mem_conv1_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv1_0_ce0 : STD_LOGIC;
    signal mem_conv1_0_we0 : STD_LOGIC;
    signal mem_conv1_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv1_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv1_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv1_0_ce1 : STD_LOGIC;
    signal mem_conv1_0_we1 : STD_LOGIC;
    signal mem_conv1_0_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv1_0_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv1_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv1_1_ce0 : STD_LOGIC;
    signal mem_conv1_1_we0 : STD_LOGIC;
    signal mem_conv1_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv1_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv1_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv1_1_ce1 : STD_LOGIC;
    signal mem_conv1_1_we1 : STD_LOGIC;
    signal mem_conv1_1_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv2_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv2_0_ce0 : STD_LOGIC;
    signal mem_conv2_0_we0 : STD_LOGIC;
    signal mem_conv2_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv2_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv2_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv2_0_ce1 : STD_LOGIC;
    signal mem_conv2_0_we1 : STD_LOGIC;
    signal mem_conv2_0_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv2_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv2_1_ce0 : STD_LOGIC;
    signal mem_conv2_1_we0 : STD_LOGIC;
    signal mem_conv2_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv2_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal mem_conv2_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_conv2_1_ce1 : STD_LOGIC;
    signal mem_conv2_1_we1 : STD_LOGIC;
    signal mem_conv2_1_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal input_0_ce0 : STD_LOGIC;
    signal input_0_we0 : STD_LOGIC;
    signal input_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_ap_start : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_ap_done : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_ap_idle : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_ap_ready : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_input_0_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_input_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_input_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_input_0_ce1 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_input_0_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_input_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_input_1_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_input_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_input_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_input_1_ce1 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_input_1_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_output_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_output_0_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_0_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_output_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_output_0_ce1 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_0_we1 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_0_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_output_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_output_1_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_1_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_output_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_max_pool_fu_343_output_1_ce1 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_1_we1 : STD_LOGIC;
    signal grp_dut_max_pool_fu_343_output_1_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_max_pool_fu_343_M : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dut_max_pool_fu_343_I : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dut_reshape_fu_357_ap_start : STD_LOGIC;
    signal grp_dut_reshape_fu_357_ap_done : STD_LOGIC;
    signal grp_dut_reshape_fu_357_ap_idle : STD_LOGIC;
    signal grp_dut_reshape_fu_357_ap_ready : STD_LOGIC;
    signal grp_dut_reshape_fu_357_input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_reshape_fu_357_input_0_ce0 : STD_LOGIC;
    signal grp_dut_reshape_fu_357_input_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_reshape_fu_357_input_0_ce1 : STD_LOGIC;
    signal grp_dut_reshape_fu_357_output_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_reshape_fu_357_output_0_ce0 : STD_LOGIC;
    signal grp_dut_reshape_fu_357_output_0_we0 : STD_LOGIC;
    signal grp_dut_reshape_fu_357_output_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_reshape_fu_357_output_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_reshape_fu_357_output_0_ce1 : STD_LOGIC;
    signal grp_dut_reshape_fu_357_output_0_we1 : STD_LOGIC;
    signal grp_dut_reshape_fu_357_output_0_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_conv_fu_363_ap_start : STD_LOGIC;
    signal grp_dut_conv_fu_363_ap_done : STD_LOGIC;
    signal grp_dut_conv_fu_363_ap_idle : STD_LOGIC;
    signal grp_dut_conv_fu_363_ap_ready : STD_LOGIC;
    signal grp_dut_conv_fu_363_input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_input_0_ce0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_input_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_conv_fu_363_input_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_input_0_ce1 : STD_LOGIC;
    signal grp_dut_conv_fu_363_input_0_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_conv_fu_363_input_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_input_1_ce0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_input_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_conv_fu_363_input_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_input_1_ce1 : STD_LOGIC;
    signal grp_dut_conv_fu_363_input_1_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_conv_fu_363_output_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_output_0_ce0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_output_0_we0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_output_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_conv_fu_363_output_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_output_1_ce0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_output_1_we0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_output_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_conv_fu_363_threshold_0_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_threshold_0_V_ce0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_threshold_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv_fu_363_threshold_1_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_conv_fu_363_threshold_1_V_ce0 : STD_LOGIC;
    signal grp_dut_conv_fu_363_threshold_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv_fu_363_M : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dut_conv_fu_363_N : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dut_conv_fu_363_I : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dut_conv_fu_363_L : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_dense_fu_393_ap_start : STD_LOGIC;
    signal grp_dut_dense_fu_393_ap_done : STD_LOGIC;
    signal grp_dut_dense_fu_393_ap_idle : STD_LOGIC;
    signal grp_dut_dense_fu_393_ap_ready : STD_LOGIC;
    signal grp_dut_dense_fu_393_input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_dense_fu_393_input_0_ce0 : STD_LOGIC;
    signal grp_dut_dense_fu_393_output_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_dense_fu_393_output_0_ce0 : STD_LOGIC;
    signal grp_dut_dense_fu_393_output_0_we0 : STD_LOGIC;
    signal grp_dut_dense_fu_393_output_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_pad_fu_403_ap_start : STD_LOGIC;
    signal grp_dut_pad_fu_403_ap_done : STD_LOGIC;
    signal grp_dut_pad_fu_403_ap_idle : STD_LOGIC;
    signal grp_dut_pad_fu_403_ap_ready : STD_LOGIC;
    signal grp_dut_pad_fu_403_input_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_pad_fu_403_input_0_ce0 : STD_LOGIC;
    signal grp_dut_pad_fu_403_input_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_pad_fu_403_input_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_pad_fu_403_input_1_ce0 : STD_LOGIC;
    signal grp_dut_pad_fu_403_input_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_pad_fu_403_output_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_pad_fu_403_output_0_ce0 : STD_LOGIC;
    signal grp_dut_pad_fu_403_output_0_we0 : STD_LOGIC;
    signal grp_dut_pad_fu_403_output_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_pad_fu_403_output_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dut_pad_fu_403_output_1_ce0 : STD_LOGIC;
    signal grp_dut_pad_fu_403_output_1_we0 : STD_LOGIC;
    signal grp_dut_pad_fu_403_output_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dut_pad_fu_403_M : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dut_pad_fu_403_I : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_262 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Hi_assign_reg_273 : STD_LOGIC_VECTOR (5 downto 0);
    signal n_i_reg_284 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_538 : BOOLEAN;
    signal ap_sig_cseq_ST_st52_fsm_23 : STD_LOGIC;
    signal ap_sig_548 : BOOLEAN;
    signal one_out_i_phi_fu_300_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp0_stg3_fsm_21 : STD_LOGIC;
    signal ap_sig_556 : BOOLEAN;
    signal m_i_phi_fu_312_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal output_V_reg_319 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st53_fsm_24 : STD_LOGIC;
    signal ap_sig_571 : BOOLEAN;
    signal max_id_V_reg_332 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_grp_dut_max_pool_fu_343_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_586 : BOOLEAN;
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_593 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_601 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_608 : BOOLEAN;
    signal ap_reg_grp_dut_reshape_fu_357_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_621 : BOOLEAN;
    signal ap_reg_grp_dut_conv_fu_363_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_630 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_637 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_645 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_652 : BOOLEAN;
    signal ap_reg_grp_dut_dense_fu_393_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_dut_pad_fu_403_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_717 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_725 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_732 : BOOLEAN;
    signal newIndex1_fu_500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_i_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_i_fu_556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_i_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex18_i_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_417_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_429_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_455_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Hi_assign_cast1_fu_471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_cast_fu_467_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_495_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_539_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_i_fu_543_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal w_index_fu_551_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal biased_i_to_int_fu_588_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_592_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_602_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);

    component dut_max_pool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce1 : OUT STD_LOGIC;
        input_0_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_1_ce1 : OUT STD_LOGIC;
        input_1_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_1_ce1 : OUT STD_LOGIC;
        output_1_we1 : OUT STD_LOGIC;
        output_1_d1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        M : IN STD_LOGIC_VECTOR (6 downto 0);
        I : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dut_reshape IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce1 : OUT STD_LOGIC;
        input_0_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce1 : OUT STD_LOGIC;
        input_0_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_1_ce1 : OUT STD_LOGIC;
        input_1_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        threshold_0_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        threshold_0_V_ce0 : OUT STD_LOGIC;
        threshold_0_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        threshold_1_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        threshold_1_V_ce0 : OUT STD_LOGIC;
        threshold_1_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        M : IN STD_LOGIC_VECTOR (6 downto 0);
        N : IN STD_LOGIC_VECTOR (6 downto 0);
        I : IN STD_LOGIC_VECTOR (5 downto 0);
        L : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_dense IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_pad IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        M : IN STD_LOGIC_VECTOR (6 downto 0);
        I : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dut_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_sitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_fcmp_32ns_32ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_threshold1_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dut_threshold1_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dut_threshold2_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dut_threshold2_V_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dut_b_fc1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_w_fc1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_mem_conv1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_input_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_input_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    threshold1_V_0_U : component dut_threshold1_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_dut_conv_fu_363_threshold_0_V_address0,
        ce0 => grp_dut_conv_fu_363_threshold_0_V_ce0,
        q0 => threshold1_V_0_q0);

    threshold1_V_1_U : component dut_threshold1_V_1
    generic map (
        DataWidth => 8,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_dut_conv_fu_363_threshold_1_V_address0,
        ce0 => grp_dut_conv_fu_363_threshold_1_V_ce0,
        q0 => threshold1_V_1_q0);

    threshold2_V_0_U : component dut_threshold2_V_0
    generic map (
        DataWidth => 8,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_dut_conv_fu_363_threshold_0_V_address0,
        ce0 => grp_dut_conv_fu_363_threshold_0_V_ce0,
        q0 => threshold2_V_0_q0);

    threshold2_V_1_U : component dut_threshold2_V_1
    generic map (
        DataWidth => 8,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_dut_conv_fu_363_threshold_1_V_address0,
        ce0 => grp_dut_conv_fu_363_threshold_1_V_ce0,
        q0 => threshold2_V_1_q0);

    b_fc1_U : component dut_b_fc1
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_fc1_address0,
        ce0 => b_fc1_ce0,
        q0 => b_fc1_q0);

    w_fc1_U : component dut_w_fc1
    generic map (
        DataWidth => 1,
        AddressRange => 131072,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_fc1_address0,
        ce0 => w_fc1_ce0,
        q0 => w_fc1_q0);

    mem_conv1_0_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 1,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_0_address0,
        ce0 => mem_conv1_0_ce0,
        we0 => mem_conv1_0_we0,
        d0 => mem_conv1_0_d0,
        q0 => mem_conv1_0_q0,
        address1 => mem_conv1_0_address1,
        ce1 => mem_conv1_0_ce1,
        we1 => mem_conv1_0_we1,
        d1 => mem_conv1_0_d1,
        q1 => mem_conv1_0_q1);

    mem_conv1_1_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 1,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_1_address0,
        ce0 => mem_conv1_1_ce0,
        we0 => mem_conv1_1_we0,
        d0 => mem_conv1_1_d0,
        q0 => mem_conv1_1_q0,
        address1 => mem_conv1_1_address1,
        ce1 => mem_conv1_1_ce1,
        we1 => mem_conv1_1_we1,
        d1 => grp_dut_max_pool_fu_343_output_1_d1,
        q1 => mem_conv1_1_q1);

    mem_conv2_0_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 1,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_0_address0,
        ce0 => mem_conv2_0_ce0,
        we0 => mem_conv2_0_we0,
        d0 => mem_conv2_0_d0,
        q0 => mem_conv2_0_q0,
        address1 => mem_conv2_0_address1,
        ce1 => mem_conv2_0_ce1,
        we1 => mem_conv2_0_we1,
        d1 => grp_dut_max_pool_fu_343_output_0_d1,
        q1 => mem_conv2_0_q1);

    mem_conv2_1_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 1,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_1_address0,
        ce0 => mem_conv2_1_ce0,
        we0 => mem_conv2_1_we0,
        d0 => mem_conv2_1_d0,
        q0 => mem_conv2_1_q0,
        address1 => mem_conv2_1_address1,
        ce1 => mem_conv2_1_ce1,
        we1 => mem_conv2_1_we1,
        d1 => grp_dut_max_pool_fu_343_output_1_d1,
        q1 => mem_conv2_1_q1);

    input_0_U : component dut_input_0
    generic map (
        DataWidth => 1,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_0_address0,
        ce0 => input_0_ce0,
        we0 => input_0_we0,
        d0 => input_0_d0,
        q0 => input_0_q0);

    input_1_U : component dut_input_1
    generic map (
        DataWidth => 1,
        AddressRange => 2592,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_dut_pad_fu_403_input_1_address0,
        ce0 => grp_dut_pad_fu_403_input_1_ce0,
        q0 => input_1_q0);

    grp_dut_max_pool_fu_343 : component dut_max_pool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_max_pool_fu_343_ap_start,
        ap_done => grp_dut_max_pool_fu_343_ap_done,
        ap_idle => grp_dut_max_pool_fu_343_ap_idle,
        ap_ready => grp_dut_max_pool_fu_343_ap_ready,
        input_0_address0 => grp_dut_max_pool_fu_343_input_0_address0,
        input_0_ce0 => grp_dut_max_pool_fu_343_input_0_ce0,
        input_0_q0 => grp_dut_max_pool_fu_343_input_0_q0,
        input_0_address1 => grp_dut_max_pool_fu_343_input_0_address1,
        input_0_ce1 => grp_dut_max_pool_fu_343_input_0_ce1,
        input_0_q1 => grp_dut_max_pool_fu_343_input_0_q1,
        input_1_address0 => grp_dut_max_pool_fu_343_input_1_address0,
        input_1_ce0 => grp_dut_max_pool_fu_343_input_1_ce0,
        input_1_q0 => grp_dut_max_pool_fu_343_input_1_q0,
        input_1_address1 => grp_dut_max_pool_fu_343_input_1_address1,
        input_1_ce1 => grp_dut_max_pool_fu_343_input_1_ce1,
        input_1_q1 => grp_dut_max_pool_fu_343_input_1_q1,
        output_0_address0 => grp_dut_max_pool_fu_343_output_0_address0,
        output_0_ce0 => grp_dut_max_pool_fu_343_output_0_ce0,
        output_0_we0 => grp_dut_max_pool_fu_343_output_0_we0,
        output_0_d0 => grp_dut_max_pool_fu_343_output_0_d0,
        output_0_address1 => grp_dut_max_pool_fu_343_output_0_address1,
        output_0_ce1 => grp_dut_max_pool_fu_343_output_0_ce1,
        output_0_we1 => grp_dut_max_pool_fu_343_output_0_we1,
        output_0_d1 => grp_dut_max_pool_fu_343_output_0_d1,
        output_1_address0 => grp_dut_max_pool_fu_343_output_1_address0,
        output_1_ce0 => grp_dut_max_pool_fu_343_output_1_ce0,
        output_1_we0 => grp_dut_max_pool_fu_343_output_1_we0,
        output_1_d0 => grp_dut_max_pool_fu_343_output_1_d0,
        output_1_address1 => grp_dut_max_pool_fu_343_output_1_address1,
        output_1_ce1 => grp_dut_max_pool_fu_343_output_1_ce1,
        output_1_we1 => grp_dut_max_pool_fu_343_output_1_we1,
        output_1_d1 => grp_dut_max_pool_fu_343_output_1_d1,
        M => grp_dut_max_pool_fu_343_M,
        I => grp_dut_max_pool_fu_343_I);

    grp_dut_reshape_fu_357 : component dut_reshape
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_reshape_fu_357_ap_start,
        ap_done => grp_dut_reshape_fu_357_ap_done,
        ap_idle => grp_dut_reshape_fu_357_ap_idle,
        ap_ready => grp_dut_reshape_fu_357_ap_ready,
        input_0_address0 => grp_dut_reshape_fu_357_input_0_address0,
        input_0_ce0 => grp_dut_reshape_fu_357_input_0_ce0,
        input_0_q0 => mem_conv2_0_q0,
        input_0_address1 => grp_dut_reshape_fu_357_input_0_address1,
        input_0_ce1 => grp_dut_reshape_fu_357_input_0_ce1,
        input_0_q1 => mem_conv2_0_q1,
        output_0_address0 => grp_dut_reshape_fu_357_output_0_address0,
        output_0_ce0 => grp_dut_reshape_fu_357_output_0_ce0,
        output_0_we0 => grp_dut_reshape_fu_357_output_0_we0,
        output_0_d0 => grp_dut_reshape_fu_357_output_0_d0,
        output_0_address1 => grp_dut_reshape_fu_357_output_0_address1,
        output_0_ce1 => grp_dut_reshape_fu_357_output_0_ce1,
        output_0_we1 => grp_dut_reshape_fu_357_output_0_we1,
        output_0_d1 => grp_dut_reshape_fu_357_output_0_d1);

    grp_dut_conv_fu_363 : component dut_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_conv_fu_363_ap_start,
        ap_done => grp_dut_conv_fu_363_ap_done,
        ap_idle => grp_dut_conv_fu_363_ap_idle,
        ap_ready => grp_dut_conv_fu_363_ap_ready,
        input_0_address0 => grp_dut_conv_fu_363_input_0_address0,
        input_0_ce0 => grp_dut_conv_fu_363_input_0_ce0,
        input_0_q0 => grp_dut_conv_fu_363_input_0_q0,
        input_0_address1 => grp_dut_conv_fu_363_input_0_address1,
        input_0_ce1 => grp_dut_conv_fu_363_input_0_ce1,
        input_0_q1 => grp_dut_conv_fu_363_input_0_q1,
        input_1_address0 => grp_dut_conv_fu_363_input_1_address0,
        input_1_ce0 => grp_dut_conv_fu_363_input_1_ce0,
        input_1_q0 => grp_dut_conv_fu_363_input_1_q0,
        input_1_address1 => grp_dut_conv_fu_363_input_1_address1,
        input_1_ce1 => grp_dut_conv_fu_363_input_1_ce1,
        input_1_q1 => grp_dut_conv_fu_363_input_1_q1,
        output_0_address0 => grp_dut_conv_fu_363_output_0_address0,
        output_0_ce0 => grp_dut_conv_fu_363_output_0_ce0,
        output_0_we0 => grp_dut_conv_fu_363_output_0_we0,
        output_0_d0 => grp_dut_conv_fu_363_output_0_d0,
        output_1_address0 => grp_dut_conv_fu_363_output_1_address0,
        output_1_ce0 => grp_dut_conv_fu_363_output_1_ce0,
        output_1_we0 => grp_dut_conv_fu_363_output_1_we0,
        output_1_d0 => grp_dut_conv_fu_363_output_1_d0,
        threshold_0_V_address0 => grp_dut_conv_fu_363_threshold_0_V_address0,
        threshold_0_V_ce0 => grp_dut_conv_fu_363_threshold_0_V_ce0,
        threshold_0_V_q0 => grp_dut_conv_fu_363_threshold_0_V_q0,
        threshold_1_V_address0 => grp_dut_conv_fu_363_threshold_1_V_address0,
        threshold_1_V_ce0 => grp_dut_conv_fu_363_threshold_1_V_ce0,
        threshold_1_V_q0 => grp_dut_conv_fu_363_threshold_1_V_q0,
        M => grp_dut_conv_fu_363_M,
        N => grp_dut_conv_fu_363_N,
        I => grp_dut_conv_fu_363_I,
        L => grp_dut_conv_fu_363_L);

    grp_dut_dense_fu_393 : component dut_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_dense_fu_393_ap_start,
        ap_done => grp_dut_dense_fu_393_ap_done,
        ap_idle => grp_dut_dense_fu_393_ap_idle,
        ap_ready => grp_dut_dense_fu_393_ap_ready,
        input_0_address0 => grp_dut_dense_fu_393_input_0_address0,
        input_0_ce0 => grp_dut_dense_fu_393_input_0_ce0,
        input_0_q0 => mem_conv2_0_q0,
        output_0_address0 => grp_dut_dense_fu_393_output_0_address0,
        output_0_ce0 => grp_dut_dense_fu_393_output_0_ce0,
        output_0_we0 => grp_dut_dense_fu_393_output_0_we0,
        output_0_d0 => grp_dut_dense_fu_393_output_0_d0);

    grp_dut_pad_fu_403 : component dut_pad
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_pad_fu_403_ap_start,
        ap_done => grp_dut_pad_fu_403_ap_done,
        ap_idle => grp_dut_pad_fu_403_ap_idle,
        ap_ready => grp_dut_pad_fu_403_ap_ready,
        input_0_address0 => grp_dut_pad_fu_403_input_0_address0,
        input_0_ce0 => grp_dut_pad_fu_403_input_0_ce0,
        input_0_q0 => grp_dut_pad_fu_403_input_0_q0,
        input_1_address0 => grp_dut_pad_fu_403_input_1_address0,
        input_1_ce0 => grp_dut_pad_fu_403_input_1_ce0,
        input_1_q0 => grp_dut_pad_fu_403_input_1_q0,
        output_0_address0 => grp_dut_pad_fu_403_output_0_address0,
        output_0_ce0 => grp_dut_pad_fu_403_output_0_ce0,
        output_0_we0 => grp_dut_pad_fu_403_output_0_we0,
        output_0_d0 => grp_dut_pad_fu_403_output_0_d0,
        output_1_address0 => grp_dut_pad_fu_403_output_1_address0,
        output_1_ce0 => grp_dut_pad_fu_403_output_1_ce0,
        output_1_we0 => grp_dut_pad_fu_403_output_1_we0,
        output_1_d0 => grp_dut_pad_fu_403_output_1_d0,
        M => grp_dut_pad_fu_403_M,
        I => grp_dut_pad_fu_403_I);

    dut_fadd_32ns_32ns_32_5_full_dsp_U50 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_417_p0,
        din1 => grp_fu_417_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_417_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U51 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_423_p0,
        din1 => grp_fu_423_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_423_p2);

    dut_sitofp_32ns_32_6_U52 : component dut_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_429_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_429_p1);

    dut_fcmp_32ns_32ns_1_1_U53 : component dut_fcmp_32ns_32ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => reg_437,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_2,
        dout => tmp_4_fu_432_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_dut_conv_fu_363_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_conv_fu_363_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
                    ap_reg_grp_dut_conv_fu_363_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_conv_fu_363_ap_ready)) then 
                    ap_reg_grp_dut_conv_fu_363_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_dense_fu_393_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_dense_fu_393_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = exitcond1_i_fu_505_p2)))) then 
                    ap_reg_grp_dut_dense_fu_393_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_dense_fu_393_ap_ready)) then 
                    ap_reg_grp_dut_dense_fu_393_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_max_pool_fu_343_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_max_pool_fu_343_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
                    ap_reg_grp_dut_max_pool_fu_343_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_max_pool_fu_343_ap_ready)) then 
                    ap_reg_grp_dut_max_pool_fu_343_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_pad_fu_403_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_pad_fu_403_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_177) and not((exitcond1_fu_443_p2 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
                    ap_reg_grp_dut_pad_fu_403_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_pad_fu_403_ap_ready)) then 
                    ap_reg_grp_dut_pad_fu_403_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_reshape_fu_357_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_reshape_fu_357_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                    ap_reg_grp_dut_reshape_fu_357_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_reshape_fu_357_ap_ready)) then 
                    ap_reg_grp_dut_reshape_fu_357_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18) and not((ap_const_lv1_0 = exitcond_i1_fu_527_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = exitcond_i1_reg_712) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_22))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_22) and not((ap_const_lv1_0 = exitcond_i1_reg_712))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_22)) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_22)) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_22)) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_22)) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg4_fsm_22)) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                    ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    Hi_assign_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond_fu_475_p2))) then 
                Hi_assign_reg_273 <= j_fu_481_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_443_p2 = ap_const_lv1_0) and not(ap_sig_177))) then 
                Hi_assign_reg_273 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond_fu_475_p2)))) then 
                i_reg_262 <= i_2_reg_661;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_262 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    m_i_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18) and (ap_const_lv1_0 = exitcond_i1_reg_712))) then 
                m_i_reg_308 <= m_reg_716;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                m_i_reg_308 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    max_id_V_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st55_fsm_26)) then 
                max_id_V_reg_332 <= i_3_reg_784;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24) and not((ap_const_logic_0 = grp_dut_dense_fu_393_ap_done)))) then 
                max_id_V_reg_332 <= ap_const_lv4_1;
            end if; 
        end if;
    end process;

    n_i_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st52_fsm_23)) then 
                n_i_reg_284 <= n_reg_687;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_logic_0 = grp_dut_reshape_fu_357_ap_done)))) then 
                n_i_reg_284 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    one_out_i_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_21))) then 
                one_out_i_reg_296 <= one_out_1_reg_750;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                one_out_i_reg_296 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    output_V_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st55_fsm_26)) then 
                output_V_reg_319 <= phitmp_i_fu_651_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24) and not((ap_const_logic_0 = grp_dut_dense_fu_393_ap_done)))) then 
                output_V_reg_319 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18)) then
                ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter1 <= exitcond_i1_reg_712;
                ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter2 <= ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter1;
                ap_reg_ppstg_ifzero_reg_731_pp0_iter1 <= ifzero_reg_731;
                ap_reg_ppstg_ifzero_reg_731_pp0_iter2 <= ap_reg_ppstg_ifzero_reg_731_pp0_iter1;
                ap_reg_ppstg_ifzero_reg_731_pp0_iter3 <= ap_reg_ppstg_ifzero_reg_731_pp0_iter2;
                ap_reg_ppstg_ifzero_reg_731_pp0_iter4 <= ap_reg_ppstg_ifzero_reg_731_pp0_iter3;
                ap_reg_ppstg_ifzero_reg_731_pp0_iter5 <= ap_reg_ppstg_ifzero_reg_731_pp0_iter4;
                ap_reg_ppstg_ifzero_reg_731_pp0_iter6 <= ap_reg_ppstg_ifzero_reg_731_pp0_iter5;
                exitcond_i1_reg_712 <= exitcond_i1_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                b_fc1_load_reg_707 <= b_fc1_q0;
                    n_i_cast9_reg_702(8 downto 0) <= n_i_cast9_fu_523_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_177))) then
                i_2_reg_661 <= i_2_fu_449_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25) and (ap_const_lv1_0 = exitcond_i_fu_634_p2) and not(ap_sig_284))) then
                i_3_reg_784 <= i_3_fu_645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18) and (ap_const_lv1_0 = exitcond_i1_fu_527_p2))) then
                ifzero_reg_731 <= ifzero_fu_566_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18))) then
                m_reg_716 <= m_fu_533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25) and not(ap_sig_284))) then
                    max_id_V_cast4_reg_771(3 downto 0) <= max_id_V_cast4_fu_630_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (ap_const_lv1_0 = exitcond1_i_fu_505_p2))) then
                    mem_conv2_0_addr_reg_697(8 downto 0) <= tmp_12_i_fu_517_p1(12 - 1 downto 0)(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                n_reg_687 <= n_fu_511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter2))) then
                one_out_1_reg_750 <= grp_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not((ap_const_lv1_0 = ap_reg_ppstg_ifzero_reg_731_pp0_iter4)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18))) then
                one_out_reg_761 <= grp_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_19) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((ap_const_lv1_0 = ap_reg_ppstg_ifzero_reg_731_pp0_iter4))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18) and not((ap_const_lv1_0 = ap_reg_ppstg_ifzero_reg_731_pp0_iter5))))) then
                reg_437 <= grp_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_19) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_const_lv1_0 = ap_reg_ppstg_ifzero_reg_731_pp0_iter3)))) then
                tmp_10_i_reg_756 <= grp_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_19) and (ap_const_lv1_0 = exitcond_i1_reg_712))) then
                tmp_15_i_reg_735 <= tmp_15_i_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter1))) then
                tmp_17_i_reg_745 <= grp_fu_429_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_19) and not((ap_const_lv1_0 = ap_reg_ppstg_ifzero_reg_731_pp0_iter6)))) then
                tmp_5_reg_766 <= tmp_5_fu_624_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_443_p2 = ap_const_lv1_0) and not(ap_sig_177))) then
                tmp_V_1_reg_666 <= strm_in_V_V_dout;
                    tmp_s_reg_671(7 downto 5) <= tmp_s_fu_459_p3(7 downto 5);
            end if;
        end if;
    end process;
    tmp_s_reg_671(4 downto 0) <= "00000";
    mem_conv2_0_addr_reg_697(11 downto 9) <= "000";
    n_i_cast9_reg_702(16 downto 9) <= "00000000";
    max_id_V_cast4_reg_771(31 downto 4) <= "0000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond1_fu_443_p2, exitcond_i_fu_634_p2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6, ap_sig_177, exitcond1_i_fu_505_p2, exitcond_i1_fu_527_p2, ap_sig_cseq_ST_pp0_stg2_fsm_20, ap_sig_284, grp_dut_max_pool_fu_343_ap_done, grp_dut_reshape_fu_357_ap_done, grp_dut_conv_fu_363_ap_done, grp_dut_dense_fu_393_ap_done, grp_dut_pad_fu_403_ap_done, exitcond_fu_475_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (((exitcond1_fu_443_p2 = ap_const_lv1_0) and not(ap_sig_177))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                elsif ((not(ap_sig_177) and not((exitcond1_fu_443_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = exitcond_fu_475_p2)) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_logic_0 = grp_dut_pad_fu_403_ap_done))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_logic_0 = grp_dut_conv_fu_363_ap_done))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = grp_dut_max_pool_fu_343_ap_done))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_logic_0 = grp_dut_pad_fu_403_ap_done))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_logic_0 = grp_dut_conv_fu_363_ap_done))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                if (not((ap_const_logic_0 = grp_dut_max_pool_fu_343_ap_done))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                if (not((ap_const_logic_0 = grp_dut_reshape_fu_357_ap_done))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st17_fsm_16 => 
                if (not((ap_const_lv1_0 = exitcond1_i_fu_505_p2))) then
                    ap_NS_fsm <= ap_ST_st53_fsm_24;
                else
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                end if;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_18;
            when ap_ST_pp0_stg0_fsm_18 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond_i1_fu_527_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st52_fsm_23;
                end if;
            when ap_ST_pp0_stg1_fsm_19 => 
                ap_NS_fsm <= ap_ST_pp0_stg2_fsm_20;
            when ap_ST_pp0_stg2_fsm_20 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg3_fsm_21;
                else
                    ap_NS_fsm <= ap_ST_st52_fsm_23;
                end if;
            when ap_ST_pp0_stg3_fsm_21 => 
                ap_NS_fsm <= ap_ST_pp0_stg4_fsm_22;
            when ap_ST_pp0_stg4_fsm_22 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_18;
            when ap_ST_st52_fsm_23 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st53_fsm_24 => 
                if (not((ap_const_logic_0 = grp_dut_dense_fu_393_ap_done))) then
                    ap_NS_fsm <= ap_ST_st54_fsm_25;
                else
                    ap_NS_fsm <= ap_ST_st53_fsm_24;
                end if;
            when ap_ST_st54_fsm_25 => 
                if ((not((ap_const_lv1_0 = exitcond_i_fu_634_p2)) and not(ap_sig_284))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((ap_const_lv1_0 = exitcond_i_fu_634_p2) and not(ap_sig_284))) then
                    ap_NS_fsm <= ap_ST_st55_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_st54_fsm_25;
                end if;
            when ap_ST_st55_fsm_26 => 
                ap_NS_fsm <= ap_ST_st54_fsm_25;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Hi_assign_cast1_fu_471_p1 <= std_logic_vector(resize(unsigned(Hi_assign_reg_273),32));
    Hi_assign_cast_fu_467_p1 <= std_logic_vector(resize(unsigned(Hi_assign_reg_273),8));

    ap_done_assign_proc : process(ap_sig_cseq_ST_st54_fsm_25, exitcond_i_fu_634_p2, ap_sig_284)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25) and not((ap_const_lv1_0 = exitcond_i_fu_634_p2)) and not(ap_sig_284))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st54_fsm_25, exitcond_i_fu_634_p2, ap_sig_284)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25) and not((ap_const_lv1_0 = exitcond_i_fu_634_p2)) and not(ap_sig_284))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_109_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_109 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_121_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_121 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    ap_sig_138_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_138 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_165_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_165 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_177_assign_proc : process(strm_in_V_V_empty_n, exitcond1_fu_443_p2)
    begin
                ap_sig_177 <= ((exitcond1_fu_443_p2 = ap_const_lv1_0) and (strm_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_192_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_192 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_201_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_201 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_217_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_217 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_255_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_255 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_284_assign_proc : process(strm_out_V_V_full_n, exitcond_i_fu_634_p2)
    begin
                ap_sig_284 <= (not((ap_const_lv1_0 = exitcond_i_fu_634_p2)) and (strm_out_V_V_full_n = ap_const_logic_0));
    end process;


    ap_sig_299_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_299 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    ap_sig_308_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_308 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_42_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_42 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_538_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_538 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_548_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_548 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_556_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_556 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_571_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_571 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_586_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_586 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_593_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_593 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_601_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_601 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_608_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_608 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_621_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_621 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_630_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_630 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_637_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_637 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_645_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_645 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_652_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_652 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_717_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_717 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_725_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_725 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_732_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_732 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_18_assign_proc : process(ap_sig_165)
    begin
        if (ap_sig_165) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg1_fsm_19_assign_proc : process(ap_sig_138)
    begin
        if (ap_sig_138) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg2_fsm_20_assign_proc : process(ap_sig_255)
    begin
        if (ap_sig_255) then 
            ap_sig_cseq_ST_pp0_stg2_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg2_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg3_fsm_21_assign_proc : process(ap_sig_556)
    begin
        if (ap_sig_556) then 
            ap_sig_cseq_ST_pp0_stg3_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg3_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg4_fsm_22_assign_proc : process(ap_sig_308)
    begin
        if (ap_sig_308) then 
            ap_sig_cseq_ST_pp0_stg4_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg4_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_732)
    begin
        if (ap_sig_732) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_637)
    begin
        if (ap_sig_637) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_652)
    begin
        if (ap_sig_652) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_593)
    begin
        if (ap_sig_593) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_608)
    begin
        if (ap_sig_608) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_621)
    begin
        if (ap_sig_621) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_538)
    begin
        if (ap_sig_538) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_201)
    begin
        if (ap_sig_201) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_217)
    begin
        if (ap_sig_217) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_42)
    begin
        if (ap_sig_42) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_109)
    begin
        if (ap_sig_109) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_192)
    begin
        if (ap_sig_192) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_725)
    begin
        if (ap_sig_725) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st52_fsm_23_assign_proc : process(ap_sig_548)
    begin
        if (ap_sig_548) then 
            ap_sig_cseq_ST_st52_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st52_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st53_fsm_24_assign_proc : process(ap_sig_571)
    begin
        if (ap_sig_571) then 
            ap_sig_cseq_ST_st53_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st53_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st54_fsm_25_assign_proc : process(ap_sig_121)
    begin
        if (ap_sig_121) then 
            ap_sig_cseq_ST_st54_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st54_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st55_fsm_26_assign_proc : process(ap_sig_299)
    begin
        if (ap_sig_299) then 
            ap_sig_cseq_ST_st55_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st55_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_630)
    begin
        if (ap_sig_630) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_645)
    begin
        if (ap_sig_645) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_586)
    begin
        if (ap_sig_586) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_601)
    begin
        if (ap_sig_601) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_717)
    begin
        if (ap_sig_717) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    b_fc1_address0 <= tmp_12_i_fu_517_p1(8 - 1 downto 0);

    b_fc1_ce0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            b_fc1_ce0 <= ap_const_logic_1;
        else 
            b_fc1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    biased_i_to_int_fu_588_p1 <= reg_437;
    exitcond1_fu_443_p2 <= "1" when (i_reg_262 = ap_const_lv4_8) else "0";
    exitcond1_i_fu_505_p2 <= "1" when (n_i_reg_284 = ap_const_lv9_100) else "0";
    exitcond_fu_475_p2 <= "1" when (Hi_assign_reg_273 = ap_const_lv6_20) else "0";
    exitcond_i1_fu_527_p2 <= "1" when (m_i_phi_fu_312_p4 = ap_const_lv10_200) else "0";
    exitcond_i_fu_634_p2 <= "1" when (max_id_V_reg_332 = ap_const_lv4_A) else "0";

    grp_dut_conv_fu_363_I_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_I <= ap_const_lv6_A;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_I <= ap_const_lv6_12;
        else 
            grp_dut_conv_fu_363_I <= "XXXXXX";
        end if; 
    end process;


    grp_dut_conv_fu_363_L_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_L <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_L <= ap_const_lv1_0;
        else 
            grp_dut_conv_fu_363_L <= "X";
        end if; 
    end process;


    grp_dut_conv_fu_363_M_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_M <= ap_const_lv7_10;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_M <= ap_const_lv7_1;
        else 
            grp_dut_conv_fu_363_M <= "XXXXXXX";
        end if; 
    end process;


    grp_dut_conv_fu_363_N_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_N <= ap_const_lv7_20;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_N <= ap_const_lv7_10;
        else 
            grp_dut_conv_fu_363_N <= "XXXXXXX";
        end if; 
    end process;

    grp_dut_conv_fu_363_ap_start <= ap_reg_grp_dut_conv_fu_363_ap_start;

    grp_dut_conv_fu_363_input_0_q0_assign_proc : process(mem_conv1_0_q0, mem_conv2_0_q0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_input_0_q0 <= mem_conv2_0_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_input_0_q0 <= mem_conv1_0_q0;
        else 
            grp_dut_conv_fu_363_input_0_q0 <= "X";
        end if; 
    end process;


    grp_dut_conv_fu_363_input_0_q1_assign_proc : process(mem_conv1_0_q1, mem_conv2_0_q1, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_input_0_q1 <= mem_conv2_0_q1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_input_0_q1 <= mem_conv1_0_q1;
        else 
            grp_dut_conv_fu_363_input_0_q1 <= "X";
        end if; 
    end process;


    grp_dut_conv_fu_363_input_1_q0_assign_proc : process(mem_conv1_1_q0, mem_conv2_1_q0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_input_1_q0 <= mem_conv2_1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_input_1_q0 <= mem_conv1_1_q0;
        else 
            grp_dut_conv_fu_363_input_1_q0 <= "X";
        end if; 
    end process;


    grp_dut_conv_fu_363_input_1_q1_assign_proc : process(mem_conv1_1_q1, mem_conv2_1_q1, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_input_1_q1 <= mem_conv2_1_q1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_input_1_q1 <= mem_conv1_1_q1;
        else 
            grp_dut_conv_fu_363_input_1_q1 <= "X";
        end if; 
    end process;


    grp_dut_conv_fu_363_threshold_0_V_q0_assign_proc : process(threshold1_V_0_q0, threshold2_V_0_q0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_threshold_0_V_q0 <= threshold2_V_0_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_threshold_0_V_q0 <= threshold1_V_0_q0;
        else 
            grp_dut_conv_fu_363_threshold_0_V_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_dut_conv_fu_363_threshold_1_V_q0_assign_proc : process(threshold1_V_1_q0, threshold2_V_1_q0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_dut_conv_fu_363_threshold_1_V_q0 <= threshold2_V_1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_conv_fu_363_threshold_1_V_q0 <= threshold1_V_1_q0;
        else 
            grp_dut_conv_fu_363_threshold_1_V_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_dut_dense_fu_393_ap_start <= ap_reg_grp_dut_dense_fu_393_ap_start;

    grp_dut_max_pool_fu_343_I_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_dut_max_pool_fu_343_I <= ap_const_lv6_8;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_dut_max_pool_fu_343_I <= ap_const_lv6_10;
        else 
            grp_dut_max_pool_fu_343_I <= "XXXXXX";
        end if; 
    end process;


    grp_dut_max_pool_fu_343_M_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_dut_max_pool_fu_343_M <= ap_const_lv7_20;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_dut_max_pool_fu_343_M <= ap_const_lv7_10;
        else 
            grp_dut_max_pool_fu_343_M <= "XXXXXXX";
        end if; 
    end process;

    grp_dut_max_pool_fu_343_ap_start <= ap_reg_grp_dut_max_pool_fu_343_ap_start;

    grp_dut_max_pool_fu_343_input_0_q0_assign_proc : process(mem_conv1_0_q0, mem_conv2_0_q0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_dut_max_pool_fu_343_input_0_q0 <= mem_conv1_0_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_dut_max_pool_fu_343_input_0_q0 <= mem_conv2_0_q0;
        else 
            grp_dut_max_pool_fu_343_input_0_q0 <= "X";
        end if; 
    end process;


    grp_dut_max_pool_fu_343_input_0_q1_assign_proc : process(mem_conv1_0_q1, mem_conv2_0_q1, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_dut_max_pool_fu_343_input_0_q1 <= mem_conv1_0_q1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_dut_max_pool_fu_343_input_0_q1 <= mem_conv2_0_q1;
        else 
            grp_dut_max_pool_fu_343_input_0_q1 <= "X";
        end if; 
    end process;


    grp_dut_max_pool_fu_343_input_1_q0_assign_proc : process(mem_conv1_1_q0, mem_conv2_1_q0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_dut_max_pool_fu_343_input_1_q0 <= mem_conv1_1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_dut_max_pool_fu_343_input_1_q0 <= mem_conv2_1_q0;
        else 
            grp_dut_max_pool_fu_343_input_1_q0 <= "X";
        end if; 
    end process;


    grp_dut_max_pool_fu_343_input_1_q1_assign_proc : process(mem_conv1_1_q1, mem_conv2_1_q1, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_dut_max_pool_fu_343_input_1_q1 <= mem_conv1_1_q1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_dut_max_pool_fu_343_input_1_q1 <= mem_conv2_1_q1;
        else 
            grp_dut_max_pool_fu_343_input_1_q1 <= "X";
        end if; 
    end process;


    grp_dut_pad_fu_403_I_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_dut_pad_fu_403_I <= ap_const_lv6_8;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            grp_dut_pad_fu_403_I <= ap_const_lv6_10;
        else 
            grp_dut_pad_fu_403_I <= "XXXXXX";
        end if; 
    end process;


    grp_dut_pad_fu_403_M_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_dut_pad_fu_403_M <= ap_const_lv7_10;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            grp_dut_pad_fu_403_M <= ap_const_lv7_1;
        else 
            grp_dut_pad_fu_403_M <= "XXXXXXX";
        end if; 
    end process;

    grp_dut_pad_fu_403_ap_start <= ap_reg_grp_dut_pad_fu_403_ap_start;

    grp_dut_pad_fu_403_input_0_q0_assign_proc : process(mem_conv1_0_q0, input_0_q0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_dut_pad_fu_403_input_0_q0 <= mem_conv1_0_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            grp_dut_pad_fu_403_input_0_q0 <= input_0_q0;
        else 
            grp_dut_pad_fu_403_input_0_q0 <= "X";
        end if; 
    end process;


    grp_dut_pad_fu_403_input_1_q0_assign_proc : process(mem_conv1_1_q0, input_1_q0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_dut_pad_fu_403_input_1_q0 <= mem_conv1_1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            grp_dut_pad_fu_403_input_1_q0 <= input_1_q0;
        else 
            grp_dut_pad_fu_403_input_1_q0 <= "X";
        end if; 
    end process;

    grp_dut_reshape_fu_357_ap_start <= ap_reg_grp_dut_reshape_fu_357_ap_start;

    grp_fu_417_p0_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_19, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it5, ap_sig_cseq_ST_pp0_stg2_fsm_20, tmp_10_i_reg_756, one_out_reg_761, one_out_i_phi_fu_300_p4, ap_sig_cseq_ST_pp0_stg3_fsm_21)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_19) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5))) then 
            grp_fu_417_p0 <= one_out_reg_761;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20))) then 
            grp_fu_417_p0 <= tmp_10_i_reg_756;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_21))) then 
            grp_fu_417_p0 <= one_out_i_phi_fu_300_p4;
        else 
            grp_fu_417_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_417_p1_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_19, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it5, b_fc1_load_reg_707, ap_sig_cseq_ST_pp0_stg2_fsm_20, tmp_17_i_reg_745, ap_sig_cseq_ST_pp0_stg3_fsm_21)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_19) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5))) then 
            grp_fu_417_p1 <= b_fc1_load_reg_707;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20))) then 
            grp_fu_417_p1 <= ap_const_lv32_C4000000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_21))) then 
            grp_fu_417_p1 <= tmp_17_i_reg_745;
        else 
            grp_fu_417_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_423_p0_assign_proc : process(reg_437, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_20, one_out_1_reg_750, ap_sig_cseq_ST_pp0_stg3_fsm_21)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20))) then 
            grp_fu_423_p0 <= reg_437;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_21))) then 
            grp_fu_423_p0 <= one_out_1_reg_750;
        else 
            grp_fu_423_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_423_p1_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp0_stg2_fsm_20, ap_sig_cseq_ST_pp0_stg3_fsm_21)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20))) then 
            grp_fu_423_p1 <= ap_const_lv32_3D800000;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_21))) then 
            grp_fu_423_p1 <= ap_const_lv32_40000000;
        else 
            grp_fu_423_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_429_p0 <= std_logic_vector(resize(unsigned(tmp_15_i_reg_735),32));
    i_2_fu_449_p2 <= std_logic_vector(unsigned(i_reg_262) + unsigned(ap_const_lv4_1));
    i_3_fu_645_p2 <= std_logic_vector(unsigned(max_id_V_reg_332) + unsigned(ap_const_lv4_1));
    ifzero_fu_566_p2 <= "1" when (m_fu_533_p2 = ap_const_lv10_200) else "0";

    input_0_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, grp_dut_pad_fu_403_input_0_address0, ap_sig_cseq_ST_st4_fsm_3, newIndex1_fu_500_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            input_0_address0 <= newIndex1_fu_500_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            input_0_address0 <= grp_dut_pad_fu_403_input_0_address0;
        else 
            input_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_0_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, grp_dut_pad_fu_403_input_0_ce0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            input_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            input_0_ce0 <= grp_dut_pad_fu_403_input_0_ce0;
        else 
            input_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    input_0_d0 <= tmp_V_1_reg_666(to_integer(unsigned(Hi_assign_cast1_fu_471_p1)) downto to_integer(unsigned(Hi_assign_cast1_fu_471_p1))) when (to_integer(unsigned(Hi_assign_cast1_fu_471_p1))>= 0 and to_integer(unsigned(Hi_assign_cast1_fu_471_p1))<=31) else "-";

    input_0_we0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, exitcond_fu_475_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond_fu_475_p2)))) then 
            input_0_we0 <= ap_const_logic_1;
        else 
            input_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_481_p2 <= std_logic_vector(unsigned(Hi_assign_reg_273) + unsigned(ap_const_lv6_1));
    m_fu_533_p2 <= std_logic_vector(unsigned(m_i_phi_fu_312_p4) + unsigned(ap_const_lv10_1));

    m_i_phi_fu_312_p4_assign_proc : process(m_i_reg_308, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_18, exitcond_i1_reg_712, m_reg_716)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18) and (ap_const_lv1_0 = exitcond_i1_reg_712))) then 
            m_i_phi_fu_312_p4 <= m_reg_716;
        else 
            m_i_phi_fu_312_p4 <= m_i_reg_308;
        end if; 
    end process;

    max_id_V_cast4_fu_630_p1 <= std_logic_vector(resize(unsigned(max_id_V_reg_332),32));

    mem_conv1_0_address0_assign_proc : process(ap_sig_cseq_ST_st54_fsm_25, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg0_fsm_18, grp_dut_max_pool_fu_343_input_0_address0, grp_dut_max_pool_fu_343_output_0_address0, grp_dut_reshape_fu_357_output_0_address0, grp_dut_conv_fu_363_input_0_address0, grp_dut_conv_fu_363_output_0_address0, grp_dut_dense_fu_393_output_0_address0, grp_dut_pad_fu_403_input_0_address0, grp_dut_pad_fu_403_output_0_address0, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st53_fsm_24, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9, newIndex3_i_fu_556_p1, newIndex18_i_fu_640_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25)) then 
            mem_conv1_0_address0 <= newIndex18_i_fu_640_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18))) then 
            mem_conv1_0_address0 <= newIndex3_i_fu_556_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_0_address0 <= grp_dut_pad_fu_403_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv1_0_address0 <= grp_dut_pad_fu_403_input_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24)) then 
            mem_conv1_0_address0 <= grp_dut_dense_fu_393_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_0_address0 <= grp_dut_conv_fu_363_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_0_address0 <= grp_dut_conv_fu_363_input_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_address0 <= grp_dut_reshape_fu_357_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_address0 <= grp_dut_max_pool_fu_343_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_address0 <= grp_dut_max_pool_fu_343_input_0_address0;
        else 
            mem_conv1_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_0_address1_assign_proc : process(grp_dut_max_pool_fu_343_input_0_address1, grp_dut_max_pool_fu_343_output_0_address1, grp_dut_reshape_fu_357_output_0_address1, grp_dut_conv_fu_363_input_0_address1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_0_address1 <= grp_dut_conv_fu_363_input_0_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_address1 <= grp_dut_reshape_fu_357_output_0_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_address1 <= grp_dut_max_pool_fu_343_output_0_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_address1 <= grp_dut_max_pool_fu_343_input_0_address1;
        else 
            mem_conv1_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_0_ce0_assign_proc : process(ap_sig_cseq_ST_st54_fsm_25, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg0_fsm_18, ap_sig_284, grp_dut_max_pool_fu_343_input_0_ce0, grp_dut_max_pool_fu_343_output_0_ce0, grp_dut_reshape_fu_357_output_0_ce0, grp_dut_conv_fu_363_input_0_ce0, grp_dut_conv_fu_363_output_0_ce0, grp_dut_dense_fu_393_output_0_ce0, grp_dut_pad_fu_403_input_0_ce0, grp_dut_pad_fu_403_output_0_ce0, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st53_fsm_24, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25) and not(ap_sig_284)))) then 
            mem_conv1_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_0_ce0 <= grp_dut_pad_fu_403_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv1_0_ce0 <= grp_dut_pad_fu_403_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24)) then 
            mem_conv1_0_ce0 <= grp_dut_dense_fu_393_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_0_ce0 <= grp_dut_conv_fu_363_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_0_ce0 <= grp_dut_conv_fu_363_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_ce0 <= grp_dut_reshape_fu_357_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_ce0 <= grp_dut_max_pool_fu_343_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_ce0 <= grp_dut_max_pool_fu_343_input_0_ce0;
        else 
            mem_conv1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_0_ce1_assign_proc : process(grp_dut_max_pool_fu_343_input_0_ce1, grp_dut_max_pool_fu_343_output_0_ce1, grp_dut_reshape_fu_357_output_0_ce1, grp_dut_conv_fu_363_input_0_ce1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_0_ce1 <= grp_dut_conv_fu_363_input_0_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_ce1 <= grp_dut_reshape_fu_357_output_0_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_ce1 <= grp_dut_max_pool_fu_343_output_0_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_ce1 <= grp_dut_max_pool_fu_343_input_0_ce1;
        else 
            mem_conv1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_0_d0_assign_proc : process(grp_dut_max_pool_fu_343_output_0_d0, grp_dut_reshape_fu_357_output_0_d0, grp_dut_conv_fu_363_output_0_d0, grp_dut_dense_fu_393_output_0_d0, grp_dut_pad_fu_403_output_0_d0, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st53_fsm_24, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_0_d0 <= grp_dut_pad_fu_403_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24)) then 
            mem_conv1_0_d0 <= grp_dut_dense_fu_393_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_0_d0 <= grp_dut_conv_fu_363_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_d0 <= grp_dut_reshape_fu_357_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_d0 <= grp_dut_max_pool_fu_343_output_0_d0;
        else 
            mem_conv1_0_d0 <= "X";
        end if; 
    end process;


    mem_conv1_0_d1_assign_proc : process(grp_dut_max_pool_fu_343_output_0_d1, grp_dut_reshape_fu_357_output_0_d1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_d1 <= grp_dut_reshape_fu_357_output_0_d1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_d1 <= grp_dut_max_pool_fu_343_output_0_d1;
        else 
            mem_conv1_0_d1 <= "X";
        end if; 
    end process;


    mem_conv1_0_we0_assign_proc : process(grp_dut_max_pool_fu_343_output_0_we0, grp_dut_reshape_fu_357_output_0_we0, grp_dut_conv_fu_363_output_0_we0, grp_dut_dense_fu_393_output_0_we0, grp_dut_pad_fu_403_output_0_we0, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st53_fsm_24, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_0_we0 <= grp_dut_pad_fu_403_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24)) then 
            mem_conv1_0_we0 <= grp_dut_dense_fu_393_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_0_we0 <= grp_dut_conv_fu_363_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_we0 <= grp_dut_reshape_fu_357_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_we0 <= grp_dut_max_pool_fu_343_output_0_we0;
        else 
            mem_conv1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_0_we1_assign_proc : process(grp_dut_max_pool_fu_343_output_0_we1, grp_dut_reshape_fu_357_output_0_we1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_we1 <= grp_dut_reshape_fu_357_output_0_we1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_we1 <= grp_dut_max_pool_fu_343_output_0_we1;
        else 
            mem_conv1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_address0_assign_proc : process(grp_dut_max_pool_fu_343_input_1_address0, grp_dut_max_pool_fu_343_output_1_address0, grp_dut_conv_fu_363_input_1_address0, grp_dut_conv_fu_363_output_1_address0, grp_dut_pad_fu_403_input_1_address0, grp_dut_pad_fu_403_output_1_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_1_address0 <= grp_dut_pad_fu_403_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv1_1_address0 <= grp_dut_pad_fu_403_input_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_1_address0 <= grp_dut_conv_fu_363_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_1_address0 <= grp_dut_conv_fu_363_input_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_address0 <= grp_dut_max_pool_fu_343_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_1_address0 <= grp_dut_max_pool_fu_343_input_1_address0;
        else 
            mem_conv1_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_1_address1_assign_proc : process(grp_dut_max_pool_fu_343_input_1_address1, grp_dut_max_pool_fu_343_output_1_address1, grp_dut_conv_fu_363_input_1_address1, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_1_address1 <= grp_dut_conv_fu_363_input_1_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_address1 <= grp_dut_max_pool_fu_343_output_1_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_1_address1 <= grp_dut_max_pool_fu_343_input_1_address1;
        else 
            mem_conv1_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_1_ce0_assign_proc : process(grp_dut_max_pool_fu_343_input_1_ce0, grp_dut_max_pool_fu_343_output_1_ce0, grp_dut_conv_fu_363_input_1_ce0, grp_dut_conv_fu_363_output_1_ce0, grp_dut_pad_fu_403_input_1_ce0, grp_dut_pad_fu_403_output_1_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_1_ce0 <= grp_dut_pad_fu_403_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv1_1_ce0 <= grp_dut_pad_fu_403_input_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_1_ce0 <= grp_dut_conv_fu_363_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_1_ce0 <= grp_dut_conv_fu_363_input_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_ce0 <= grp_dut_max_pool_fu_343_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_1_ce0 <= grp_dut_max_pool_fu_343_input_1_ce0;
        else 
            mem_conv1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_ce1_assign_proc : process(grp_dut_max_pool_fu_343_input_1_ce1, grp_dut_max_pool_fu_343_output_1_ce1, grp_dut_conv_fu_363_input_1_ce1, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv1_1_ce1 <= grp_dut_conv_fu_363_input_1_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_ce1 <= grp_dut_max_pool_fu_343_output_1_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_1_ce1 <= grp_dut_max_pool_fu_343_input_1_ce1;
        else 
            mem_conv1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_d0_assign_proc : process(grp_dut_max_pool_fu_343_output_1_d0, grp_dut_conv_fu_363_output_1_d0, grp_dut_pad_fu_403_output_1_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_1_d0 <= grp_dut_pad_fu_403_output_1_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_1_d0 <= grp_dut_conv_fu_363_output_1_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_d0 <= grp_dut_max_pool_fu_343_output_1_d0;
        else 
            mem_conv1_1_d0 <= "X";
        end if; 
    end process;


    mem_conv1_1_we0_assign_proc : process(grp_dut_max_pool_fu_343_output_1_we0, grp_dut_conv_fu_363_output_1_we0, grp_dut_pad_fu_403_output_1_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv1_1_we0 <= grp_dut_pad_fu_403_output_1_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_1_we0 <= grp_dut_conv_fu_363_output_1_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_we0 <= grp_dut_max_pool_fu_343_output_1_we0;
        else 
            mem_conv1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_we1_assign_proc : process(grp_dut_max_pool_fu_343_output_1_we1, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_we1 <= grp_dut_max_pool_fu_343_output_1_we1;
        else 
            mem_conv1_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it6, mem_conv2_0_addr_reg_697, ap_sig_cseq_ST_pp0_stg2_fsm_20, grp_dut_max_pool_fu_343_input_0_address0, grp_dut_max_pool_fu_343_output_0_address0, grp_dut_reshape_fu_357_input_0_address0, grp_dut_conv_fu_363_input_0_address0, grp_dut_conv_fu_363_output_0_address0, grp_dut_dense_fu_393_input_0_address0, grp_dut_pad_fu_403_output_0_address0, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st53_fsm_24, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20))) then 
            mem_conv2_0_address0 <= mem_conv2_0_addr_reg_697;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_0_address0 <= grp_dut_pad_fu_403_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24)) then 
            mem_conv2_0_address0 <= grp_dut_dense_fu_393_input_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_0_address0 <= grp_dut_conv_fu_363_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_address0 <= grp_dut_conv_fu_363_input_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_address0 <= grp_dut_reshape_fu_357_input_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_address0 <= grp_dut_max_pool_fu_343_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_address0 <= grp_dut_max_pool_fu_343_input_0_address0;
        else 
            mem_conv2_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_0_address1_assign_proc : process(grp_dut_max_pool_fu_343_input_0_address1, grp_dut_max_pool_fu_343_output_0_address1, grp_dut_reshape_fu_357_input_0_address1, grp_dut_conv_fu_363_input_0_address1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_address1 <= grp_dut_conv_fu_363_input_0_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_address1 <= grp_dut_reshape_fu_357_input_0_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_address1 <= grp_dut_max_pool_fu_343_output_0_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_address1 <= grp_dut_max_pool_fu_343_input_0_address1;
        else 
            mem_conv2_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_cseq_ST_pp0_stg2_fsm_20, grp_dut_max_pool_fu_343_input_0_ce0, grp_dut_max_pool_fu_343_output_0_ce0, grp_dut_reshape_fu_357_input_0_ce0, grp_dut_conv_fu_363_input_0_ce0, grp_dut_conv_fu_363_output_0_ce0, grp_dut_dense_fu_393_input_0_ce0, grp_dut_pad_fu_403_output_0_ce0, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st53_fsm_24, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20))) then 
            mem_conv2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_0_ce0 <= grp_dut_pad_fu_403_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st53_fsm_24)) then 
            mem_conv2_0_ce0 <= grp_dut_dense_fu_393_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_0_ce0 <= grp_dut_conv_fu_363_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_ce0 <= grp_dut_conv_fu_363_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_ce0 <= grp_dut_reshape_fu_357_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_ce0 <= grp_dut_max_pool_fu_343_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_ce0 <= grp_dut_max_pool_fu_343_input_0_ce0;
        else 
            mem_conv2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_ce1_assign_proc : process(grp_dut_max_pool_fu_343_input_0_ce1, grp_dut_max_pool_fu_343_output_0_ce1, grp_dut_reshape_fu_357_input_0_ce1, grp_dut_conv_fu_363_input_0_ce1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_ce1 <= grp_dut_conv_fu_363_input_0_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_ce1 <= grp_dut_reshape_fu_357_input_0_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_ce1 <= grp_dut_max_pool_fu_343_output_0_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_ce1 <= grp_dut_max_pool_fu_343_input_0_ce1;
        else 
            mem_conv2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_d0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_cseq_ST_pp0_stg2_fsm_20, tmp_5_reg_766, grp_dut_max_pool_fu_343_output_0_d0, grp_dut_conv_fu_363_output_0_d0, grp_dut_pad_fu_403_output_0_d0, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20))) then 
            mem_conv2_0_d0 <= tmp_5_reg_766;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_0_d0 <= grp_dut_pad_fu_403_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_0_d0 <= grp_dut_conv_fu_363_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_d0 <= grp_dut_max_pool_fu_343_output_0_d0;
        else 
            mem_conv2_0_d0 <= "X";
        end if; 
    end process;


    mem_conv2_0_we0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppstg_ifzero_reg_731_pp0_iter6, ap_sig_cseq_ST_pp0_stg2_fsm_20, grp_dut_max_pool_fu_343_output_0_we0, grp_dut_conv_fu_363_output_0_we0, grp_dut_pad_fu_403_output_0_we0, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg2_fsm_20) and not((ap_const_lv1_0 = ap_reg_ppstg_ifzero_reg_731_pp0_iter6))))) then 
            mem_conv2_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_0_we0 <= grp_dut_pad_fu_403_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_0_we0 <= grp_dut_conv_fu_363_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_we0 <= grp_dut_max_pool_fu_343_output_0_we0;
        else 
            mem_conv2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_we1_assign_proc : process(grp_dut_max_pool_fu_343_output_0_we1, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_we1 <= grp_dut_max_pool_fu_343_output_0_we1;
        else 
            mem_conv2_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_address0_assign_proc : process(grp_dut_max_pool_fu_343_input_1_address0, grp_dut_max_pool_fu_343_output_1_address0, grp_dut_conv_fu_363_input_1_address0, grp_dut_conv_fu_363_output_1_address0, grp_dut_pad_fu_403_output_1_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_1_address0 <= grp_dut_pad_fu_403_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_1_address0 <= grp_dut_conv_fu_363_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_1_address0 <= grp_dut_conv_fu_363_input_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_1_address0 <= grp_dut_max_pool_fu_343_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_address0 <= grp_dut_max_pool_fu_343_input_1_address0;
        else 
            mem_conv2_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_1_address1_assign_proc : process(grp_dut_max_pool_fu_343_input_1_address1, grp_dut_max_pool_fu_343_output_1_address1, grp_dut_conv_fu_363_input_1_address1, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_1_address1 <= grp_dut_conv_fu_363_input_1_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_1_address1 <= grp_dut_max_pool_fu_343_output_1_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_address1 <= grp_dut_max_pool_fu_343_input_1_address1;
        else 
            mem_conv2_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_1_ce0_assign_proc : process(grp_dut_max_pool_fu_343_input_1_ce0, grp_dut_max_pool_fu_343_output_1_ce0, grp_dut_conv_fu_363_input_1_ce0, grp_dut_conv_fu_363_output_1_ce0, grp_dut_pad_fu_403_output_1_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_1_ce0 <= grp_dut_pad_fu_403_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_1_ce0 <= grp_dut_conv_fu_363_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_1_ce0 <= grp_dut_conv_fu_363_input_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_1_ce0 <= grp_dut_max_pool_fu_343_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_ce0 <= grp_dut_max_pool_fu_343_input_1_ce0;
        else 
            mem_conv2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_ce1_assign_proc : process(grp_dut_max_pool_fu_343_input_1_ce1, grp_dut_max_pool_fu_343_output_1_ce1, grp_dut_conv_fu_363_input_1_ce1, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_1_ce1 <= grp_dut_conv_fu_363_input_1_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_1_ce1 <= grp_dut_max_pool_fu_343_output_1_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_ce1 <= grp_dut_max_pool_fu_343_input_1_ce1;
        else 
            mem_conv2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_d0_assign_proc : process(grp_dut_max_pool_fu_343_output_1_d0, grp_dut_conv_fu_363_output_1_d0, grp_dut_pad_fu_403_output_1_d0, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_1_d0 <= grp_dut_pad_fu_403_output_1_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_1_d0 <= grp_dut_conv_fu_363_output_1_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_1_d0 <= grp_dut_max_pool_fu_343_output_1_d0;
        else 
            mem_conv2_1_d0 <= "X";
        end if; 
    end process;


    mem_conv2_1_we0_assign_proc : process(grp_dut_max_pool_fu_343_output_1_we0, grp_dut_conv_fu_363_output_1_we0, grp_dut_pad_fu_403_output_1_we0, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            mem_conv2_1_we0 <= grp_dut_pad_fu_403_output_1_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mem_conv2_1_we0 <= grp_dut_conv_fu_363_output_1_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_1_we0 <= grp_dut_max_pool_fu_343_output_1_we0;
        else 
            mem_conv2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_we1_assign_proc : process(grp_dut_max_pool_fu_343_output_1_we1, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_1_we1 <= grp_dut_max_pool_fu_343_output_1_we1;
        else 
            mem_conv2_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    n_fu_511_p2 <= std_logic_vector(unsigned(n_i_reg_284) + unsigned(ap_const_lv9_1));
    n_i_cast9_fu_523_p1 <= std_logic_vector(resize(unsigned(n_i_reg_284),17));
    newIndex18_i_fu_640_p1 <= std_logic_vector(resize(unsigned(max_id_V_reg_332),64));
    newIndex1_fu_500_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_495_p2),64));
    newIndex3_i_fu_556_p1 <= std_logic_vector(resize(unsigned(m_i_phi_fu_312_p4),64));
    notlhs_fu_606_p2 <= "0" when (tmp_1_fu_592_p4 = ap_const_lv8_FF) else "1";
    notrhs_fu_612_p2 <= "1" when (tmp_16_fu_602_p1 = ap_const_lv23_0) else "0";

    one_out_i_phi_fu_300_p4_assign_proc : process(one_out_i_reg_296, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter2, one_out_1_reg_750, ap_sig_cseq_ST_pp0_stg3_fsm_21)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_i1_reg_712_pp0_iter2) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg3_fsm_21))) then 
            one_out_i_phi_fu_300_p4 <= one_out_1_reg_750;
        else 
            one_out_i_phi_fu_300_p4 <= one_out_i_reg_296;
        end if; 
    end process;

    phitmp_i_fu_651_p3 <= 
        max_id_V_cast4_reg_771 when (mem_conv1_0_q0(0) = '1') else 
        output_V_reg_319;

    strm_in_V_V_blk_n_assign_proc : process(strm_in_V_V_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_443_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_443_p2 = ap_const_lv1_0))) then 
            strm_in_V_V_blk_n <= strm_in_V_V_empty_n;
        else 
            strm_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_443_p2, ap_sig_177)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_443_p2 = ap_const_lv1_0) and not(ap_sig_177))) then 
            strm_in_V_V_read <= ap_const_logic_1;
        else 
            strm_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_V_blk_n_assign_proc : process(strm_out_V_V_full_n, ap_sig_cseq_ST_st54_fsm_25, exitcond_i_fu_634_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25) and not((ap_const_lv1_0 = exitcond_i_fu_634_p2)))) then 
            strm_out_V_V_blk_n <= strm_out_V_V_full_n;
        else 
            strm_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_V_din <= output_V_reg_319;

    strm_out_V_V_write_assign_proc : process(ap_sig_cseq_ST_st54_fsm_25, exitcond_i_fu_634_p2, ap_sig_284)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st54_fsm_25) and not((ap_const_lv1_0 = exitcond_i_fu_634_p2)) and not(ap_sig_284))) then 
            strm_out_V_V_write <= ap_const_logic_1;
        else 
            strm_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_12_i_fu_517_p1 <= std_logic_vector(resize(unsigned(n_i_reg_284),64));
    tmp_13_fu_455_p1 <= i_reg_262(3 - 1 downto 0);
    tmp_14_i_fu_561_p1 <= std_logic_vector(resize(unsigned(w_index_fu_551_p2),64));
    tmp_15_fu_539_p1 <= m_i_phi_fu_312_p4(9 - 1 downto 0);
    tmp_15_i_fu_578_p2 <= (mem_conv1_0_q0 xor tmp_fu_572_p2);
    tmp_16_fu_602_p1 <= biased_i_to_int_fu_588_p1(23 - 1 downto 0);
    tmp_1_fu_592_p4 <= biased_i_to_int_fu_588_p1(30 downto 23);
    tmp_3_fu_618_p2 <= (notrhs_fu_612_p2 or notlhs_fu_606_p2);
    tmp_5_fu_624_p2 <= (tmp_3_fu_618_p2 and tmp_4_fu_432_p2);
    tmp_7_fu_495_p2 <= std_logic_vector(unsigned(tmp_s_reg_671) + unsigned(Hi_assign_cast_fu_467_p1));
    tmp_9_i_fu_543_p3 <= (tmp_15_fu_539_p1 & ap_const_lv8_0);
    tmp_fu_572_p2 <= (w_fc1_q0 xor ap_const_lv1_1);
    tmp_s_fu_459_p3 <= (tmp_13_fu_455_p1 & ap_const_lv5_0);
    w_fc1_address0 <= tmp_14_i_fu_561_p1(17 - 1 downto 0);

    w_fc1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp0_stg0_fsm_18)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_18))) then 
            w_fc1_ce0 <= ap_const_logic_1;
        else 
            w_fc1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_551_p2 <= std_logic_vector(unsigned(n_i_cast9_reg_702) + unsigned(tmp_9_i_fu_543_p3));
end behav;
