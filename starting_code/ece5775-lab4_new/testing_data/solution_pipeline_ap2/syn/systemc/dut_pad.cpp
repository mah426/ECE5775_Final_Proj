// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut_pad.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut_pad::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut_pad::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> dut_pad::ap_ST_st1_fsm_0 = "1";
const sc_lv<23> dut_pad::ap_ST_st2_fsm_1 = "10";
const sc_lv<23> dut_pad::ap_ST_st3_fsm_2 = "100";
const sc_lv<23> dut_pad::ap_ST_st4_fsm_3 = "1000";
const sc_lv<23> dut_pad::ap_ST_st5_fsm_4 = "10000";
const sc_lv<23> dut_pad::ap_ST_st6_fsm_5 = "100000";
const sc_lv<23> dut_pad::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<23> dut_pad::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<23> dut_pad::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<23> dut_pad::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<23> dut_pad::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<23> dut_pad::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<23> dut_pad::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<23> dut_pad::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<23> dut_pad::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<23> dut_pad::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<23> dut_pad::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<23> dut_pad::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<23> dut_pad::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<23> dut_pad::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<23> dut_pad::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<23> dut_pad::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<23> dut_pad::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<32> dut_pad::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut_pad::ap_const_lv1_1 = "1";
const sc_lv<32> dut_pad::ap_const_lv32_1 = "1";
const sc_lv<1> dut_pad::ap_const_lv1_0 = "0";
const sc_lv<32> dut_pad::ap_const_lv32_2 = "10";
const sc_lv<32> dut_pad::ap_const_lv32_3 = "11";
const sc_lv<32> dut_pad::ap_const_lv32_4 = "100";
const sc_lv<32> dut_pad::ap_const_lv32_5 = "101";
const sc_lv<32> dut_pad::ap_const_lv32_6 = "110";
const sc_lv<13> dut_pad::ap_const_lv13_0 = "0000000000000";
const sc_lv<5> dut_pad::ap_const_lv5_0 = "00000";
const sc_lv<8> dut_pad::ap_const_lv8_0 = "00000000";
const sc_lv<32> dut_pad::ap_const_lv32_16 = "10110";
const sc_lv<5> dut_pad::ap_const_lv5_2 = "10";
const sc_lv<13> dut_pad::ap_const_lv13_1440 = "1010001000000";
const sc_lv<13> dut_pad::ap_const_lv13_1 = "1";
const sc_lv<13> dut_pad::ap_const_lv13_A20 = "101000100000";
const sc_lv<13> dut_pad::ap_const_lv13_15E0 = "1010111100000";
const sc_lv<5> dut_pad::ap_const_lv5_1 = "1";
const sc_lv<12> dut_pad::ap_const_lv12_A20 = "101000100000";
const sc_lv<12> dut_pad::ap_const_lv12_5E0 = "10111100000";

dut_pad::dut_pad(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dut_urem_13ns_13ns_13_17_seq_U1 = new dut_urem_13ns_13ns_13_17_seq<1,17,13,13,13>("dut_urem_13ns_13ns_13_17_seq_U1");
    dut_urem_13ns_13ns_13_17_seq_U1->clk(ap_clk);
    dut_urem_13ns_13ns_13_17_seq_U1->reset(ap_rst);
    dut_urem_13ns_13ns_13_17_seq_U1->start(grp_fu_410_ap_start);
    dut_urem_13ns_13ns_13_17_seq_U1->done(grp_fu_410_ap_done);
    dut_urem_13ns_13ns_13_17_seq_U1->din0(o_index_reg_529);
    dut_urem_13ns_13ns_13_17_seq_U1->din1(ap_var_for_const0);
    dut_urem_13ns_13ns_13_17_seq_U1->ce(ap_var_for_const1);
    dut_urem_13ns_13ns_13_17_seq_U1->dout(grp_fu_410_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_I_cast6_fu_259_p1);
    sensitive << ( I );

    SC_METHOD(thread_I_cast_fu_262_p1);
    sensitive << ( I );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_2_fu_278_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_2_fu_278_p2 );

    SC_METHOD(thread_ap_sig_111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_128);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_145);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_161);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_176);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_202);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_40 );

    SC_METHOD(thread_ap_sig_cseq_ST_st23_fsm_22);
    sensitive << ( ap_sig_202 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_91 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_111 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_128 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_145 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_161 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_176 );

    SC_METHOD(thread_exitcond1_fu_218_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_exitcond_fu_325_p2);
    sensitive << ( I );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( y_cast_fu_321_p1 );

    SC_METHOD(thread_grp_fu_410_ap_start);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_i_1_fu_224_p2);
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_i_index_fu_360_p2);
    sensitive << ( x_cast2_reg_493 );
    sensitive << ( tmp2_reg_519 );

    SC_METHOD(thread_input_0_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( newIndex3_fu_397_p1 );

    SC_METHOD(thread_input_0_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_input_1_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( newIndex3_fu_397_p1 );

    SC_METHOD(thread_input_1_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_input_load_phi_fu_403_p3);
    sensitive << ( input_0_q0 );
    sensitive << ( input_1_q0 );
    sensitive << ( tmp_11_reg_535 );

    SC_METHOD(thread_m_1_fu_283_p2);
    sensitive << ( m_reg_155 );

    SC_METHOD(thread_m_cast_fu_274_p1);
    sensitive << ( m_reg_155 );

    SC_METHOD(thread_newIndex1_fu_242_p3);
    sensitive << ( i_reg_144 );
    sensitive << ( tmp_9_fu_230_p2 );
    sensitive << ( tmp_10_fu_236_p2 );

    SC_METHOD(thread_newIndex2_fu_250_p1);
    sensitive << ( newIndex1_fu_242_p3 );

    SC_METHOD(thread_newIndex3_fu_397_p1);
    sensitive << ( newIndex_fu_389_p3 );

    SC_METHOD(thread_newIndex4_fu_420_p1);
    sensitive << ( grp_fu_410_p2 );

    SC_METHOD(thread_newIndex_fu_389_p3);
    sensitive << ( tmp_11_fu_377_p2 );
    sensitive << ( i_index_fu_360_p2 );
    sensitive << ( tmp_12_fu_383_p2 );

    SC_METHOD(thread_next_mul_fu_265_p2);
    sensitive << ( I_cast6_reg_465 );
    sensitive << ( phi_mul_reg_166 );

    SC_METHOD(thread_o_index_fu_372_p2);
    sensitive << ( tmp_6_cast_reg_506 );
    sensitive << ( tmp1_fu_367_p2 );

    SC_METHOD(thread_output_0_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( newIndex2_fu_250_p1 );
    sensitive << ( newIndex4_fu_420_p1 );

    SC_METHOD(thread_output_0_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_output_0_d0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( input_load_phi_reg_550 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_output_0_we0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_218_p2 );
    sensitive << ( tmp_6_reg_556 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( tmp_9_fu_230_p2 );

    SC_METHOD(thread_output_1_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( newIndex2_fu_250_p1 );
    sensitive << ( newIndex4_fu_420_p1 );

    SC_METHOD(thread_output_1_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_output_1_d0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( input_load_phi_reg_550 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_output_1_we0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_218_p2 );
    sensitive << ( tmp_6_reg_556 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( tmp_9_fu_230_p2 );

    SC_METHOD(thread_tmp1_fu_367_p0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp1_fu_367_p00 );

    SC_METHOD(thread_tmp1_fu_367_p00);
    sensitive << ( tmp9_reg_524 );

    SC_METHOD(thread_tmp1_fu_367_p1);
    sensitive << ( tmp_cast5_cast_reg_439 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_tmp1_fu_367_p2);
    sensitive << ( tmp1_fu_367_p0 );
    sensitive << ( tmp1_fu_367_p1 );

    SC_METHOD(thread_tmp2_fu_346_p0);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp2_fu_346_p00 );

    SC_METHOD(thread_tmp2_fu_346_p00);
    sensitive << ( tmp_fu_336_p2 );

    SC_METHOD(thread_tmp2_fu_346_p1);
    sensitive << ( I_cast_reg_470 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_tmp2_fu_346_p2);
    sensitive << ( tmp2_fu_346_p0 );
    sensitive << ( tmp2_fu_346_p1 );

    SC_METHOD(thread_tmp9_fu_355_p2);
    sensitive << ( tmp_4_reg_488 );
    sensitive << ( y_1_cast_fu_351_p1 );

    SC_METHOD(thread_tmp_10_fu_236_p2);
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_tmp_11_fu_377_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( i_index_fu_360_p2 );

    SC_METHOD(thread_tmp_12_fu_383_p2);
    sensitive << ( i_index_fu_360_p2 );

    SC_METHOD(thread_tmp_1_fu_200_p1);
    sensitive << ( I );

    SC_METHOD(thread_tmp_2_fu_278_p2);
    sensitive << ( tmp_3_reg_460 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( m_cast_fu_274_p1 );

    SC_METHOD(thread_tmp_3_fu_256_p1);
    sensitive << ( M );

    SC_METHOD(thread_tmp_4_fu_289_p0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_4_fu_289_p00 );

    SC_METHOD(thread_tmp_4_fu_289_p00);
    sensitive << ( m_reg_155 );

    SC_METHOD(thread_tmp_4_fu_289_p1);
    sensitive << ( tmp_cast_cast_reg_444 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_tmp_4_fu_289_p2);
    sensitive << ( tmp_4_fu_289_p0 );
    sensitive << ( tmp_4_fu_289_p1 );

    SC_METHOD(thread_tmp_5_fu_302_p2);
    sensitive << ( I );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( x_cast_fu_298_p1 );

    SC_METHOD(thread_tmp_6_cast_fu_313_p1);
    sensitive << ( x_1_fu_307_p2 );

    SC_METHOD(thread_tmp_6_fu_415_p2);
    sensitive << ( o_index_reg_529 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_tmp_9_fu_230_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_218_p2 );
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_tmp_cast5_cast_fu_210_p1);
    sensitive << ( tmp_s_fu_204_p2 );

    SC_METHOD(thread_tmp_cast_cast_fu_214_p1);
    sensitive << ( tmp_s_fu_204_p2 );

    SC_METHOD(thread_tmp_fu_336_p2);
    sensitive << ( phi_mul_reg_166 );
    sensitive << ( y_cast1_fu_317_p1 );

    SC_METHOD(thread_tmp_s_fu_204_p2);
    sensitive << ( tmp_1_fu_200_p1 );

    SC_METHOD(thread_x_1_fu_307_p2);
    sensitive << ( x_reg_178 );

    SC_METHOD(thread_x_cast2_fu_294_p1);
    sensitive << ( x_reg_178 );

    SC_METHOD(thread_x_cast_fu_298_p1);
    sensitive << ( x_reg_178 );

    SC_METHOD(thread_y_1_cast_fu_351_p1);
    sensitive << ( y_1_fu_330_p2 );

    SC_METHOD(thread_y_1_fu_330_p2);
    sensitive << ( y_reg_189 );

    SC_METHOD(thread_y_cast1_fu_317_p1);
    sensitive << ( y_reg_189 );

    SC_METHOD(thread_y_cast_fu_321_p1);
    sensitive << ( y_reg_189 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_218_p2 );
    sensitive << ( tmp_2_fu_278_p2 );
    sensitive << ( tmp_5_fu_302_p2 );
    sensitive << ( exitcond_fu_325_p2 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_pad_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_address0, "(port)input_0_address0");
    sc_trace(mVcdFile, input_0_ce0, "(port)input_0_ce0");
    sc_trace(mVcdFile, input_0_q0, "(port)input_0_q0");
    sc_trace(mVcdFile, input_1_address0, "(port)input_1_address0");
    sc_trace(mVcdFile, input_1_ce0, "(port)input_1_ce0");
    sc_trace(mVcdFile, input_1_q0, "(port)input_1_q0");
    sc_trace(mVcdFile, output_0_address0, "(port)output_0_address0");
    sc_trace(mVcdFile, output_0_ce0, "(port)output_0_ce0");
    sc_trace(mVcdFile, output_0_we0, "(port)output_0_we0");
    sc_trace(mVcdFile, output_0_d0, "(port)output_0_d0");
    sc_trace(mVcdFile, output_1_address0, "(port)output_1_address0");
    sc_trace(mVcdFile, output_1_ce0, "(port)output_1_ce0");
    sc_trace(mVcdFile, output_1_we0, "(port)output_1_we0");
    sc_trace(mVcdFile, output_1_d0, "(port)output_1_d0");
    sc_trace(mVcdFile, M, "(port)M");
    sc_trace(mVcdFile, I, "(port)I");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_40, "ap_sig_40");
    sc_trace(mVcdFile, tmp_cast5_cast_fu_210_p1, "tmp_cast5_cast_fu_210_p1");
    sc_trace(mVcdFile, tmp_cast5_cast_reg_439, "tmp_cast5_cast_reg_439");
    sc_trace(mVcdFile, tmp_cast_cast_fu_214_p1, "tmp_cast_cast_fu_214_p1");
    sc_trace(mVcdFile, tmp_cast_cast_reg_444, "tmp_cast_cast_reg_444");
    sc_trace(mVcdFile, i_1_fu_224_p2, "i_1_fu_224_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_91, "ap_sig_91");
    sc_trace(mVcdFile, tmp_3_fu_256_p1, "tmp_3_fu_256_p1");
    sc_trace(mVcdFile, tmp_3_reg_460, "tmp_3_reg_460");
    sc_trace(mVcdFile, exitcond1_fu_218_p2, "exitcond1_fu_218_p2");
    sc_trace(mVcdFile, I_cast6_fu_259_p1, "I_cast6_fu_259_p1");
    sc_trace(mVcdFile, I_cast6_reg_465, "I_cast6_reg_465");
    sc_trace(mVcdFile, I_cast_fu_262_p1, "I_cast_fu_262_p1");
    sc_trace(mVcdFile, I_cast_reg_470, "I_cast_reg_470");
    sc_trace(mVcdFile, next_mul_fu_265_p2, "next_mul_fu_265_p2");
    sc_trace(mVcdFile, next_mul_reg_475, "next_mul_reg_475");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_111, "ap_sig_111");
    sc_trace(mVcdFile, m_1_fu_283_p2, "m_1_fu_283_p2");
    sc_trace(mVcdFile, m_1_reg_483, "m_1_reg_483");
    sc_trace(mVcdFile, tmp_4_fu_289_p2, "tmp_4_fu_289_p2");
    sc_trace(mVcdFile, tmp_4_reg_488, "tmp_4_reg_488");
    sc_trace(mVcdFile, tmp_2_fu_278_p2, "tmp_2_fu_278_p2");
    sc_trace(mVcdFile, x_cast2_fu_294_p1, "x_cast2_fu_294_p1");
    sc_trace(mVcdFile, x_cast2_reg_493, "x_cast2_reg_493");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_128, "ap_sig_128");
    sc_trace(mVcdFile, x_1_fu_307_p2, "x_1_fu_307_p2");
    sc_trace(mVcdFile, x_1_reg_501, "x_1_reg_501");
    sc_trace(mVcdFile, tmp_6_cast_fu_313_p1, "tmp_6_cast_fu_313_p1");
    sc_trace(mVcdFile, tmp_6_cast_reg_506, "tmp_6_cast_reg_506");
    sc_trace(mVcdFile, tmp_5_fu_302_p2, "tmp_5_fu_302_p2");
    sc_trace(mVcdFile, y_1_fu_330_p2, "y_1_fu_330_p2");
    sc_trace(mVcdFile, y_1_reg_514, "y_1_reg_514");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_145, "ap_sig_145");
    sc_trace(mVcdFile, tmp2_fu_346_p2, "tmp2_fu_346_p2");
    sc_trace(mVcdFile, tmp2_reg_519, "tmp2_reg_519");
    sc_trace(mVcdFile, exitcond_fu_325_p2, "exitcond_fu_325_p2");
    sc_trace(mVcdFile, tmp9_fu_355_p2, "tmp9_fu_355_p2");
    sc_trace(mVcdFile, tmp9_reg_524, "tmp9_reg_524");
    sc_trace(mVcdFile, o_index_fu_372_p2, "o_index_fu_372_p2");
    sc_trace(mVcdFile, o_index_reg_529, "o_index_reg_529");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_161, "ap_sig_161");
    sc_trace(mVcdFile, tmp_11_fu_377_p2, "tmp_11_fu_377_p2");
    sc_trace(mVcdFile, tmp_11_reg_535, "tmp_11_reg_535");
    sc_trace(mVcdFile, input_load_phi_fu_403_p3, "input_load_phi_fu_403_p3");
    sc_trace(mVcdFile, input_load_phi_reg_550, "input_load_phi_reg_550");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_176, "ap_sig_176");
    sc_trace(mVcdFile, tmp_6_fu_415_p2, "tmp_6_fu_415_p2");
    sc_trace(mVcdFile, tmp_6_reg_556, "tmp_6_reg_556");
    sc_trace(mVcdFile, i_reg_144, "i_reg_144");
    sc_trace(mVcdFile, m_reg_155, "m_reg_155");
    sc_trace(mVcdFile, phi_mul_reg_166, "phi_mul_reg_166");
    sc_trace(mVcdFile, x_reg_178, "x_reg_178");
    sc_trace(mVcdFile, y_reg_189, "y_reg_189");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st23_fsm_22, "ap_sig_cseq_ST_st23_fsm_22");
    sc_trace(mVcdFile, ap_sig_202, "ap_sig_202");
    sc_trace(mVcdFile, newIndex2_fu_250_p1, "newIndex2_fu_250_p1");
    sc_trace(mVcdFile, newIndex3_fu_397_p1, "newIndex3_fu_397_p1");
    sc_trace(mVcdFile, newIndex4_fu_420_p1, "newIndex4_fu_420_p1");
    sc_trace(mVcdFile, tmp_9_fu_230_p2, "tmp_9_fu_230_p2");
    sc_trace(mVcdFile, tmp_1_fu_200_p1, "tmp_1_fu_200_p1");
    sc_trace(mVcdFile, tmp_s_fu_204_p2, "tmp_s_fu_204_p2");
    sc_trace(mVcdFile, tmp_10_fu_236_p2, "tmp_10_fu_236_p2");
    sc_trace(mVcdFile, newIndex1_fu_242_p3, "newIndex1_fu_242_p3");
    sc_trace(mVcdFile, m_cast_fu_274_p1, "m_cast_fu_274_p1");
    sc_trace(mVcdFile, tmp_4_fu_289_p0, "tmp_4_fu_289_p0");
    sc_trace(mVcdFile, tmp_4_fu_289_p1, "tmp_4_fu_289_p1");
    sc_trace(mVcdFile, x_cast_fu_298_p1, "x_cast_fu_298_p1");
    sc_trace(mVcdFile, y_cast_fu_321_p1, "y_cast_fu_321_p1");
    sc_trace(mVcdFile, y_cast1_fu_317_p1, "y_cast1_fu_317_p1");
    sc_trace(mVcdFile, tmp_fu_336_p2, "tmp_fu_336_p2");
    sc_trace(mVcdFile, tmp2_fu_346_p0, "tmp2_fu_346_p0");
    sc_trace(mVcdFile, tmp2_fu_346_p1, "tmp2_fu_346_p1");
    sc_trace(mVcdFile, y_1_cast_fu_351_p1, "y_1_cast_fu_351_p1");
    sc_trace(mVcdFile, tmp1_fu_367_p0, "tmp1_fu_367_p0");
    sc_trace(mVcdFile, tmp1_fu_367_p1, "tmp1_fu_367_p1");
    sc_trace(mVcdFile, tmp1_fu_367_p2, "tmp1_fu_367_p2");
    sc_trace(mVcdFile, i_index_fu_360_p2, "i_index_fu_360_p2");
    sc_trace(mVcdFile, tmp_12_fu_383_p2, "tmp_12_fu_383_p2");
    sc_trace(mVcdFile, newIndex_fu_389_p3, "newIndex_fu_389_p3");
    sc_trace(mVcdFile, grp_fu_410_p2, "grp_fu_410_p2");
    sc_trace(mVcdFile, grp_fu_410_ap_start, "grp_fu_410_ap_start");
    sc_trace(mVcdFile, grp_fu_410_ap_done, "grp_fu_410_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp1_fu_367_p00, "tmp1_fu_367_p00");
    sc_trace(mVcdFile, tmp2_fu_346_p00, "tmp2_fu_346_p00");
    sc_trace(mVcdFile, tmp_4_fu_289_p00, "tmp_4_fu_289_p00");
#endif

    }
}

dut_pad::~dut_pad() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dut_urem_13ns_13ns_13_17_seq_U1;
}

void dut_pad::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void dut_pad::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv13_A20;
}

void dut_pad::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_0))) {
        i_reg_144 = i_1_fu_224_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_144 = ap_const_lv13_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_0))) {
        m_reg_155 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_302_p2.read()))) {
        m_reg_155 = m_1_reg_483.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_166 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_302_p2.read()))) {
        phi_mul_reg_166 = next_mul_reg_475.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_325_p2.read()))) {
        x_reg_178 = x_1_reg_501.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_278_p2.read()))) {
        x_reg_178 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        y_reg_189 = y_1_reg_514.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_302_p2.read()))) {
        y_reg_189 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_0))) {
        I_cast6_reg_465 = I_cast6_fu_259_p1.read();
        I_cast_reg_470 = I_cast_fu_262_p1.read();
        tmp_3_reg_460 = tmp_3_fu_256_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        input_load_phi_reg_550 = input_load_phi_fu_403_p3.read();
        tmp_6_reg_556 = tmp_6_fu_415_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        m_1_reg_483 = m_1_fu_283_p2.read();
        next_mul_reg_475 = next_mul_fu_265_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        o_index_reg_529 = o_index_fu_372_p2.read();
        tmp_11_reg_535 = tmp_11_fu_377_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_325_p2.read()))) {
        tmp2_reg_519 = tmp2_fu_346_p2.read();
        tmp9_reg_524 = tmp9_fu_355_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_278_p2.read()))) {
        tmp_4_reg_488 = tmp_4_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_302_p2.read()))) {
        tmp_6_cast_reg_506 = tmp_6_cast_fu_313_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_cast5_cast_reg_439 = tmp_cast5_cast_fu_210_p1.read();
        tmp_cast_cast_reg_444 = tmp_cast_cast_fu_214_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        x_1_reg_501 = x_1_fu_307_p2.read();
        x_cast2_reg_493 = x_cast2_fu_294_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        y_1_reg_514 = y_1_fu_330_p2.read();
    }
}

void dut_pad::thread_I_cast6_fu_259_p1() {
    I_cast6_fu_259_p1 = esl_zext<8,6>(I.read());
}

void dut_pad::thread_I_cast_fu_262_p1() {
    I_cast_fu_262_p1 = esl_zext<12,6>(I.read());
}

void dut_pad::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_278_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_278_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_111() {
    ap_sig_111 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut_pad::thread_ap_sig_128() {
    ap_sig_128 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void dut_pad::thread_ap_sig_145() {
    ap_sig_145 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void dut_pad::thread_ap_sig_161() {
    ap_sig_161 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void dut_pad::thread_ap_sig_176() {
    ap_sig_176 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void dut_pad::thread_ap_sig_202() {
    ap_sig_202 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(22, 22));
}

void dut_pad::thread_ap_sig_40() {
    ap_sig_40 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut_pad::thread_ap_sig_91() {
    ap_sig_91 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut_pad::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_40.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_cseq_ST_st23_fsm_22() {
    if (ap_sig_202.read()) {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_91.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_111.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_128.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_145.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_161.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void dut_pad::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_176.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void dut_pad::thread_exitcond1_fu_218_p2() {
    exitcond1_fu_218_p2 = (!i_reg_144.read().is_01() || !ap_const_lv13_1440.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_144.read() == ap_const_lv13_1440);
}

void dut_pad::thread_exitcond_fu_325_p2() {
    exitcond_fu_325_p2 = (!y_cast_fu_321_p1.read().is_01() || !I.read().is_01())? sc_lv<1>(): sc_lv<1>(y_cast_fu_321_p1.read() == I.read());
}

void dut_pad::thread_grp_fu_410_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        grp_fu_410_ap_start = ap_const_logic_1;
    } else {
        grp_fu_410_ap_start = ap_const_logic_0;
    }
}

void dut_pad::thread_i_1_fu_224_p2() {
    i_1_fu_224_p2 = (!i_reg_144.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(i_reg_144.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void dut_pad::thread_i_index_fu_360_p2() {
    i_index_fu_360_p2 = (!tmp2_reg_519.read().is_01() || !x_cast2_reg_493.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp2_reg_519.read()) + sc_biguint<12>(x_cast2_reg_493.read()));
}

void dut_pad::thread_input_0_address0() {
    input_0_address0 =  (sc_lv<12>) (newIndex3_fu_397_p1.read());
}

void dut_pad::thread_input_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        input_0_ce0 = ap_const_logic_1;
    } else {
        input_0_ce0 = ap_const_logic_0;
    }
}

void dut_pad::thread_input_1_address0() {
    input_1_address0 =  (sc_lv<12>) (newIndex3_fu_397_p1.read());
}

void dut_pad::thread_input_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        input_1_ce0 = ap_const_logic_1;
    } else {
        input_1_ce0 = ap_const_logic_0;
    }
}

void dut_pad::thread_input_load_phi_fu_403_p3() {
    input_load_phi_fu_403_p3 = (!tmp_11_reg_535.read()[0].is_01())? sc_lv<1>(): ((tmp_11_reg_535.read()[0].to_bool())? input_0_q0.read(): input_1_q0.read());
}

void dut_pad::thread_m_1_fu_283_p2() {
    m_1_fu_283_p2 = (!m_reg_155.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(m_reg_155.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void dut_pad::thread_m_cast_fu_274_p1() {
    m_cast_fu_274_p1 = esl_zext<6,5>(m_reg_155.read());
}

void dut_pad::thread_newIndex1_fu_242_p3() {
    newIndex1_fu_242_p3 = (!tmp_9_fu_230_p2.read()[0].is_01())? sc_lv<13>(): ((tmp_9_fu_230_p2.read()[0].to_bool())? i_reg_144.read(): tmp_10_fu_236_p2.read());
}

void dut_pad::thread_newIndex2_fu_250_p1() {
    newIndex2_fu_250_p1 = esl_zext<64,13>(newIndex1_fu_242_p3.read());
}

void dut_pad::thread_newIndex3_fu_397_p1() {
    newIndex3_fu_397_p1 = esl_zext<64,12>(newIndex_fu_389_p3.read());
}

void dut_pad::thread_newIndex4_fu_420_p1() {
    newIndex4_fu_420_p1 = esl_zext<64,13>(grp_fu_410_p2.read());
}

void dut_pad::thread_newIndex_fu_389_p3() {
    newIndex_fu_389_p3 = (!tmp_11_fu_377_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_11_fu_377_p2.read()[0].to_bool())? i_index_fu_360_p2.read(): tmp_12_fu_383_p2.read());
}

void dut_pad::thread_next_mul_fu_265_p2() {
    next_mul_fu_265_p2 = (!phi_mul_reg_166.read().is_01() || !I_cast6_reg_465.read().is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul_reg_166.read()) + sc_biguint<8>(I_cast6_reg_465.read()));
}

void dut_pad::thread_o_index_fu_372_p2() {
    o_index_fu_372_p2 = (!tmp_6_cast_reg_506.read().is_01() || !tmp1_fu_367_p2.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_6_cast_reg_506.read()) + sc_biguint<13>(tmp1_fu_367_p2.read()));
}

void dut_pad::thread_output_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        output_0_address0 =  (sc_lv<12>) (newIndex4_fu_420_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        output_0_address0 =  (sc_lv<12>) (newIndex2_fu_250_p1.read());
    } else {
        output_0_address0 = "XXXXXXXXXXXX";
    }
}

void dut_pad::thread_output_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()))) {
        output_0_ce0 = ap_const_logic_1;
    } else {
        output_0_ce0 = ap_const_logic_0;
    }
}

void dut_pad::thread_output_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        output_0_d0 = input_load_phi_reg_550.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        output_0_d0 = ap_const_lv1_0;
    } else {
        output_0_d0 =  (sc_lv<1>) ("X");
    }
}

void dut_pad::thread_output_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_230_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_556.read())))) {
        output_0_we0 = ap_const_logic_1;
    } else {
        output_0_we0 = ap_const_logic_0;
    }
}

void dut_pad::thread_output_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        output_1_address0 =  (sc_lv<12>) (newIndex4_fu_420_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        output_1_address0 =  (sc_lv<12>) (newIndex2_fu_250_p1.read());
    } else {
        output_1_address0 = "XXXXXXXXXXXX";
    }
}

void dut_pad::thread_output_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()))) {
        output_1_ce0 = ap_const_logic_1;
    } else {
        output_1_ce0 = ap_const_logic_0;
    }
}

void dut_pad::thread_output_1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        output_1_d0 = input_load_phi_reg_550.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        output_1_d0 = ap_const_lv1_0;
    } else {
        output_1_d0 =  (sc_lv<1>) ("X");
    }
}

void dut_pad::thread_output_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_230_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_556.read())))) {
        output_1_we0 = ap_const_logic_1;
    } else {
        output_1_we0 = ap_const_logic_0;
    }
}

void dut_pad::thread_tmp1_fu_367_p0() {
    tmp1_fu_367_p0 =  (sc_lv<9>) (tmp1_fu_367_p00.read());
}

void dut_pad::thread_tmp1_fu_367_p00() {
    tmp1_fu_367_p00 = esl_zext<13,9>(tmp9_reg_524.read());
}

void dut_pad::thread_tmp1_fu_367_p1() {
    tmp1_fu_367_p1 =  (sc_lv<5>) (tmp_cast5_cast_reg_439.read());
}

void dut_pad::thread_tmp1_fu_367_p2() {
    tmp1_fu_367_p2 = (!tmp1_fu_367_p0.read().is_01() || !tmp1_fu_367_p1.read().is_01())? sc_lv<13>(): sc_biguint<9>(tmp1_fu_367_p0.read()) * sc_biguint<5>(tmp1_fu_367_p1.read());
}

void dut_pad::thread_tmp2_fu_346_p0() {
    tmp2_fu_346_p0 =  (sc_lv<8>) (tmp2_fu_346_p00.read());
}

void dut_pad::thread_tmp2_fu_346_p00() {
    tmp2_fu_346_p00 = esl_zext<12,8>(tmp_fu_336_p2.read());
}

void dut_pad::thread_tmp2_fu_346_p1() {
    tmp2_fu_346_p1 =  (sc_lv<6>) (I_cast_reg_470.read());
}

void dut_pad::thread_tmp2_fu_346_p2() {
    tmp2_fu_346_p2 = (!tmp2_fu_346_p0.read().is_01() || !tmp2_fu_346_p1.read().is_01())? sc_lv<12>(): sc_biguint<8>(tmp2_fu_346_p0.read()) * sc_biguint<6>(tmp2_fu_346_p1.read());
}

void dut_pad::thread_tmp9_fu_355_p2() {
    tmp9_fu_355_p2 = (!y_1_cast_fu_351_p1.read().is_01() || !tmp_4_reg_488.read().is_01())? sc_lv<9>(): (sc_biguint<9>(y_1_cast_fu_351_p1.read()) + sc_biguint<9>(tmp_4_reg_488.read()));
}

void dut_pad::thread_tmp_10_fu_236_p2() {
    tmp_10_fu_236_p2 = (!i_reg_144.read().is_01() || !ap_const_lv13_15E0.is_01())? sc_lv<13>(): (sc_biguint<13>(i_reg_144.read()) + sc_bigint<13>(ap_const_lv13_15E0));
}

void dut_pad::thread_tmp_11_fu_377_p2() {
    tmp_11_fu_377_p2 = (!i_index_fu_360_p2.read().is_01() || !ap_const_lv12_A20.is_01())? sc_lv<1>(): (sc_biguint<12>(i_index_fu_360_p2.read()) < sc_biguint<12>(ap_const_lv12_A20));
}

void dut_pad::thread_tmp_12_fu_383_p2() {
    tmp_12_fu_383_p2 = (!i_index_fu_360_p2.read().is_01() || !ap_const_lv12_5E0.is_01())? sc_lv<12>(): (sc_biguint<12>(i_index_fu_360_p2.read()) + sc_biguint<12>(ap_const_lv12_5E0));
}

void dut_pad::thread_tmp_1_fu_200_p1() {
    tmp_1_fu_200_p1 = I.read().range(5-1, 0);
}

void dut_pad::thread_tmp_2_fu_278_p2() {
    tmp_2_fu_278_p2 = (!m_cast_fu_274_p1.read().is_01() || !tmp_3_reg_460.read().is_01())? sc_lv<1>(): (sc_bigint<6>(m_cast_fu_274_p1.read()) < sc_bigint<6>(tmp_3_reg_460.read()));
}

void dut_pad::thread_tmp_3_fu_256_p1() {
    tmp_3_fu_256_p1 = M.read().range(6-1, 0);
}

void dut_pad::thread_tmp_4_fu_289_p0() {
    tmp_4_fu_289_p0 =  (sc_lv<5>) (tmp_4_fu_289_p00.read());
}

void dut_pad::thread_tmp_4_fu_289_p00() {
    tmp_4_fu_289_p00 = esl_zext<9,5>(m_reg_155.read());
}

void dut_pad::thread_tmp_4_fu_289_p1() {
    tmp_4_fu_289_p1 =  (sc_lv<5>) (tmp_cast_cast_reg_444.read());
}

void dut_pad::thread_tmp_4_fu_289_p2() {
    tmp_4_fu_289_p2 = (!tmp_4_fu_289_p0.read().is_01() || !tmp_4_fu_289_p1.read().is_01())? sc_lv<9>(): sc_biguint<5>(tmp_4_fu_289_p0.read()) * sc_biguint<5>(tmp_4_fu_289_p1.read());
}

void dut_pad::thread_tmp_5_fu_302_p2() {
    tmp_5_fu_302_p2 = (!x_cast_fu_298_p1.read().is_01() || !I.read().is_01())? sc_lv<1>(): (sc_bigint<6>(x_cast_fu_298_p1.read()) < sc_bigint<6>(I.read()));
}

void dut_pad::thread_tmp_6_cast_fu_313_p1() {
    tmp_6_cast_fu_313_p1 = esl_zext<13,5>(x_1_fu_307_p2.read());
}

void dut_pad::thread_tmp_6_fu_415_p2() {
    tmp_6_fu_415_p2 = (!o_index_reg_529.read().is_01() || !ap_const_lv13_A20.is_01())? sc_lv<1>(): (sc_biguint<13>(o_index_reg_529.read()) < sc_biguint<13>(ap_const_lv13_A20));
}

void dut_pad::thread_tmp_9_fu_230_p2() {
    tmp_9_fu_230_p2 = (!i_reg_144.read().is_01() || !ap_const_lv13_A20.is_01())? sc_lv<1>(): (sc_biguint<13>(i_reg_144.read()) < sc_biguint<13>(ap_const_lv13_A20));
}

void dut_pad::thread_tmp_cast5_cast_fu_210_p1() {
    tmp_cast5_cast_fu_210_p1 = esl_zext<13,5>(tmp_s_fu_204_p2.read());
}

void dut_pad::thread_tmp_cast_cast_fu_214_p1() {
    tmp_cast_cast_fu_214_p1 = esl_zext<9,5>(tmp_s_fu_204_p2.read());
}

void dut_pad::thread_tmp_fu_336_p2() {
    tmp_fu_336_p2 = (!y_cast1_fu_317_p1.read().is_01() || !phi_mul_reg_166.read().is_01())? sc_lv<8>(): (sc_biguint<8>(y_cast1_fu_317_p1.read()) + sc_biguint<8>(phi_mul_reg_166.read()));
}

void dut_pad::thread_tmp_s_fu_204_p2() {
    tmp_s_fu_204_p2 = (!ap_const_lv5_2.is_01() || !tmp_1_fu_200_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_2) + sc_biguint<5>(tmp_1_fu_200_p1.read()));
}

void dut_pad::thread_x_1_fu_307_p2() {
    x_1_fu_307_p2 = (!x_reg_178.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(x_reg_178.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void dut_pad::thread_x_cast2_fu_294_p1() {
    x_cast2_fu_294_p1 = esl_zext<12,5>(x_reg_178.read());
}

void dut_pad::thread_x_cast_fu_298_p1() {
    x_cast_fu_298_p1 = esl_zext<6,5>(x_reg_178.read());
}

void dut_pad::thread_y_1_cast_fu_351_p1() {
    y_1_cast_fu_351_p1 = esl_zext<9,5>(y_1_fu_330_p2.read());
}

void dut_pad::thread_y_1_fu_330_p2() {
    y_1_fu_330_p2 = (!y_reg_189.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(y_reg_189.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void dut_pad::thread_y_cast1_fu_317_p1() {
    y_cast1_fu_317_p1 = esl_zext<8,5>(y_reg_189.read());
}

void dut_pad::thread_y_cast_fu_321_p1() {
    y_cast_fu_321_p1 = esl_zext<6,5>(y_reg_189.read());
}

void dut_pad::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_278_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_302_p2.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_325_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

