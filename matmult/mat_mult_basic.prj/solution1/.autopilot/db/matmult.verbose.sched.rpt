

================================================================
== Vivado HLS Report for 'matmult'
================================================================
* Date:           Tue Nov 29 15:13:07 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        1-mat_mult.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.41|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +----------+----------+----------+----------+---------+
    |       Latency       |       Interval      | Pipeline|
    |    min   |    max   |    min   |    max   |   Type  |
    +----------+----------+----------+----------+---------+
    |  11060401|  11060401|  11060402|  11060402|   none  |
    +----------+----------+----------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+----------+----------+----------+-----------+-----------+------+----------+
        |                 |       Latency       | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |    min   |    max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+----------+----------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  11060400|  11060400|    110604|          -|          -|   100|    no    |
        | + Loop 1.1      |       100|       100|         1|          -|          -|   100|    no    |
        | + Loop 1.2      |    110300|    110300|      1103|          -|          -|   100|    no    |
        |  ++ Loop 1.2.1  |      1100|      1100|        11|          -|          -|   100|    no    |
        | + Loop 1.3      |       200|       200|         2|          -|          -|   100|    no    |
        +-----------------+----------+----------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 18
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
3 --> 
	4  / (exitcond3)
	3  / (!exitcond3)
4 --> 
	5  / (!exitcond2)
	17  / (exitcond2)
5 --> 
	6  / true
6 --> 
	4  / (exitcond1)
	7  / (!exitcond1)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	6  / true
17 --> 
	2  / (exitcond)
	18  / (!exitcond)
18 --> 
	17  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_19 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([10000 x float]* %a) nounwind, !map !14

ST_1: stg_20 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([10000 x float]* %b) nounwind, !map !20

ST_1: stg_21 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([10000 x float]* %out_r) nounwind, !map !24

ST_1: stg_22 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @matmult_str) nounwind

ST_1: out_vec [1/1] 0.00ns
:4  %out_vec = alloca [100 x float], align 16

ST_1: stg_24 [1/1] 1.57ns
:5  br label %.loopexit


 <State 2>: 3.54ns
ST_2: i [1/1] 0.00ns
.loopexit:0  %i = phi i7 [ 0, %0 ], [ %i_1, %.preheader ]

ST_2: phi_mul1 [1/1] 0.00ns
.loopexit:1  %phi_mul1 = phi i14 [ 0, %0 ], [ %next_mul2, %.preheader ]

ST_2: next_mul2 [1/1] 1.96ns
.loopexit:2  %next_mul2 = add i14 %phi_mul1, 100

ST_2: exitcond4 [1/1] 1.97ns
.loopexit:3  %exitcond4 = icmp eq i7 %i, -28

ST_2: empty [1/1] 0.00ns
.loopexit:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_2: i_1 [1/1] 1.72ns
.loopexit:5  %i_1 = add i7 %i, 1

ST_2: stg_31 [1/1] 1.57ns
.loopexit:6  br i1 %exitcond4, label %4, label %.preheader7

ST_2: stg_32 [1/1] 0.00ns
:0  ret void


 <State 3>: 3.54ns
ST_3: j [1/1] 0.00ns
.preheader7:0  %j = phi i7 [ %j_1, %1 ], [ 0, %.loopexit ]

ST_3: exitcond3 [1/1] 1.97ns
.preheader7:1  %exitcond3 = icmp eq i7 %j, -28

ST_3: empty_3 [1/1] 0.00ns
.preheader7:2  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_3: j_1 [1/1] 1.72ns
.preheader7:3  %j_1 = add i7 %j, 1

ST_3: stg_37 [1/1] 1.57ns
.preheader7:4  br i1 %exitcond3, label %.preheader6, label %1

ST_3: tmp_1 [1/1] 0.00ns
:0  %tmp_1 = zext i7 %j to i64

ST_3: out_vec_addr [1/1] 0.00ns
:1  %out_vec_addr = getelementptr inbounds [100 x float]* %out_vec, i64 0, i64 %tmp_1

ST_3: stg_40 [1/1] 2.71ns
:2  store float 0.000000e+00, float* %out_vec_addr, align 4

ST_3: stg_41 [1/1] 0.00ns
:3  br label %.preheader7


 <State 4>: 4.67ns
ST_4: k [1/1] 0.00ns
.preheader6:0  %k = phi i7 [ 0, %.preheader7 ], [ %k_1, %.preheader5 ]

ST_4: phi_mul [1/1] 0.00ns
.preheader6:1  %phi_mul = phi i14 [ 0, %.preheader7 ], [ %next_mul, %.preheader5 ]

ST_4: next_mul [1/1] 1.96ns
.preheader6:2  %next_mul = add i14 %phi_mul, 100

ST_4: exitcond2 [1/1] 1.97ns
.preheader6:3  %exitcond2 = icmp eq i7 %k, -28

ST_4: empty_4 [1/1] 0.00ns
.preheader6:4  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_4: k_1 [1/1] 1.72ns
.preheader6:5  %k_1 = add i7 %k, 1

ST_4: stg_48 [1/1] 1.57ns
.preheader6:6  br i1 %exitcond2, label %.preheader, label %.preheader5.preheader

ST_4: tmp_3_cast [1/1] 0.00ns
.preheader5.preheader:0  %tmp_3_cast = zext i7 %k to i14

ST_4: tmp_4 [1/1] 1.96ns
.preheader5.preheader:1  %tmp_4 = add i14 %phi_mul1, %tmp_3_cast

ST_4: tmp_4_cast [1/1] 0.00ns
.preheader5.preheader:2  %tmp_4_cast = zext i14 %tmp_4 to i64

ST_4: a_addr [1/1] 0.00ns
.preheader5.preheader:3  %a_addr = getelementptr [10000 x float]* %a, i64 0, i64 %tmp_4_cast

ST_4: a_load [2/2] 2.71ns
.preheader5.preheader:4  %a_load = load float* %a_addr, align 4


 <State 5>: 2.71ns
ST_5: a_load [1/2] 2.71ns
.preheader5.preheader:4  %a_load = load float* %a_addr, align 4

ST_5: stg_55 [1/1] 1.57ns
.preheader5.preheader:5  br label %.preheader5


 <State 6>: 4.67ns
ST_6: j1 [1/1] 0.00ns
.preheader5:0  %j1 = phi i7 [ %j_3, %2 ], [ 0, %.preheader5.preheader ]

ST_6: exitcond1 [1/1] 1.97ns
.preheader5:1  %exitcond1 = icmp eq i7 %j1, -28

ST_6: empty_5 [1/1] 0.00ns
.preheader5:2  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_6: j_3 [1/1] 1.72ns
.preheader5:3  %j_3 = add i7 %j1, 1

ST_6: stg_60 [1/1] 0.00ns
.preheader5:4  br i1 %exitcond1, label %.preheader6, label %2

ST_6: tmp_8_cast [1/1] 0.00ns
:1  %tmp_8_cast = zext i7 %j1 to i14

ST_6: tmp_2 [1/1] 1.96ns
:2  %tmp_2 = add i14 %phi_mul, %tmp_8_cast

ST_6: tmp_10_cast [1/1] 0.00ns
:3  %tmp_10_cast = zext i14 %tmp_2 to i64

ST_6: b_addr [1/1] 0.00ns
:4  %b_addr = getelementptr [10000 x float]* %b, i64 0, i64 %tmp_10_cast

ST_6: b_load [2/2] 2.71ns
:5  %b_load = load float* %b_addr, align 4


 <State 7>: 8.41ns
ST_7: b_load [1/2] 2.71ns
:5  %b_load = load float* %b_addr, align 4

ST_7: tmp_9 [4/4] 5.70ns
:6  %tmp_9 = fmul float %a_load, %b_load


 <State 8>: 5.70ns
ST_8: tmp_9 [3/4] 5.70ns
:6  %tmp_9 = fmul float %a_load, %b_load


 <State 9>: 5.70ns
ST_9: tmp_8 [1/1] 0.00ns
:0  %tmp_8 = zext i7 %j1 to i64

ST_9: tmp_9 [2/4] 5.70ns
:6  %tmp_9 = fmul float %a_load, %b_load

ST_9: out_vec_addr_2 [1/1] 0.00ns
:7  %out_vec_addr_2 = getelementptr inbounds [100 x float]* %out_vec, i64 0, i64 %tmp_8

ST_9: out_vec_load_1 [2/2] 2.71ns
:8  %out_vec_load_1 = load float* %out_vec_addr_2, align 4


 <State 10>: 5.70ns
ST_10: tmp_9 [1/4] 5.70ns
:6  %tmp_9 = fmul float %a_load, %b_load

ST_10: out_vec_load_1 [1/2] 2.71ns
:8  %out_vec_load_1 = load float* %out_vec_addr_2, align 4


 <State 11>: 7.26ns
ST_11: tmp_s [5/5] 7.26ns
:9  %tmp_s = fadd float %out_vec_load_1, %tmp_9


 <State 12>: 7.26ns
ST_12: tmp_s [4/5] 7.26ns
:9  %tmp_s = fadd float %out_vec_load_1, %tmp_9


 <State 13>: 7.26ns
ST_13: tmp_s [3/5] 7.26ns
:9  %tmp_s = fadd float %out_vec_load_1, %tmp_9


 <State 14>: 7.26ns
ST_14: tmp_s [2/5] 7.26ns
:9  %tmp_s = fadd float %out_vec_load_1, %tmp_9


 <State 15>: 7.26ns
ST_15: tmp_s [1/5] 7.26ns
:9  %tmp_s = fadd float %out_vec_load_1, %tmp_9


 <State 16>: 2.71ns
ST_16: stg_80 [1/1] 2.71ns
:10  store float %tmp_s, float* %out_vec_addr_2, align 4

ST_16: stg_81 [1/1] 0.00ns
:11  br label %.preheader5


 <State 17>: 2.71ns
ST_17: j2 [1/1] 0.00ns
.preheader:0  %j2 = phi i7 [ %j_2, %3 ], [ 0, %.preheader6 ]

ST_17: exitcond [1/1] 1.97ns
.preheader:1  %exitcond = icmp eq i7 %j2, -28

ST_17: empty_6 [1/1] 0.00ns
.preheader:2  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_17: j_2 [1/1] 1.72ns
.preheader:3  %j_2 = add i7 %j2, 1

ST_17: stg_86 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %.loopexit, label %3

ST_17: tmp_5 [1/1] 0.00ns
:0  %tmp_5 = zext i7 %j2 to i64

ST_17: tmp_5_cast [1/1] 0.00ns
:1  %tmp_5_cast = zext i7 %j2 to i14

ST_17: tmp_7 [1/1] 1.96ns
:2  %tmp_7 = add i14 %phi_mul1, %tmp_5_cast

ST_17: out_vec_addr_1 [1/1] 0.00ns
:5  %out_vec_addr_1 = getelementptr inbounds [100 x float]* %out_vec, i64 0, i64 %tmp_5

ST_17: out_vec_load [2/2] 2.71ns
:6  %out_vec_load = load float* %out_vec_addr_1, align 4


 <State 18>: 5.42ns
ST_18: tmp_7_cast [1/1] 0.00ns
:3  %tmp_7_cast = zext i14 %tmp_7 to i64

ST_18: out_addr [1/1] 0.00ns
:4  %out_addr = getelementptr [10000 x float]* %out_r, i64 0, i64 %tmp_7_cast

ST_18: out_vec_load [1/2] 2.71ns
:6  %out_vec_load = load float* %out_vec_addr_1, align 4

ST_18: stg_95 [1/1] 2.71ns
:7  store float %out_vec_load, float* %out_addr, align 4

ST_18: stg_96 [1/1] 0.00ns
:8  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
