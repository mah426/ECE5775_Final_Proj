// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matmult_HH_
#define _matmult_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matmult_fadd_32ns_32ns_32_5_full_dsp.h"
#include "matmult_fmul_32ns_32ns_32_4_max_dsp.h"
#include "matmult_out_vec.h"

namespace ap_rtl {

struct matmult : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<32> > a_q0;
    sc_out< sc_lv<14> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<32> > b_q0;
    sc_out< sc_lv<14> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<32> > out_r_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matmult(sc_module_name name);
    SC_HAS_PROCESS(matmult);

    ~matmult();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matmult_out_vec* out_vec_U;
    matmult_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* matmult_fadd_32ns_32ns_32_5_full_dsp_U1;
    matmult_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* matmult_fmul_32ns_32ns_32_4_max_dsp_U2;
    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_33;
    sc_signal< sc_lv<14> > next_mul2_fu_188_p2;
    sc_signal< sc_lv<14> > next_mul2_reg_319;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_66;
    sc_signal< sc_lv<7> > i_1_fu_200_p2;
    sc_signal< sc_lv<7> > i_1_reg_327;
    sc_signal< sc_lv<7> > j_1_fu_212_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_77;
    sc_signal< sc_lv<14> > next_mul_fu_223_p2;
    sc_signal< sc_lv<14> > next_mul_reg_340;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_86;
    sc_signal< sc_lv<7> > k_1_fu_235_p2;
    sc_signal< sc_lv<7> > k_1_reg_348;
    sc_signal< sc_lv<1> > exitcond2_fu_229_p2;
    sc_signal< sc_lv<32> > a_load_reg_358;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_102;
    sc_signal< sc_lv<7> > j_3_fu_262_p2;
    sc_signal< sc_lv<7> > j_3_reg_366;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_111;
    sc_signal< sc_lv<1> > exitcond1_fu_256_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_124;
    sc_signal< sc_lv<7> > out_vec_addr_2_reg_381;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_133;
    sc_signal< sc_lv<32> > grp_fu_183_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_386;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_142;
    sc_signal< sc_lv<32> > out_vec_q0;
    sc_signal< sc_lv<32> > out_vec_load_1_reg_391;
    sc_signal< sc_lv<32> > grp_fu_179_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_396;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_153;
    sc_signal< sc_lv<7> > j_2_fu_294_p2;
    sc_signal< sc_lv<7> > j_2_reg_404;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_16;
    sc_signal< bool > ap_sig_162;
    sc_signal< sc_lv<14> > tmp_7_fu_309_p2;
    sc_signal< sc_lv<14> > tmp_7_reg_409;
    sc_signal< sc_lv<1> > exitcond_fu_288_p2;
    sc_signal< sc_lv<7> > out_vec_address0;
    sc_signal< sc_logic > out_vec_ce0;
    sc_signal< sc_logic > out_vec_we0;
    sc_signal< sc_lv<32> > out_vec_d0;
    sc_signal< sc_lv<7> > i_reg_99;
    sc_signal< sc_lv<14> > phi_mul1_reg_110;
    sc_signal< sc_lv<7> > j_reg_122;
    sc_signal< sc_lv<1> > exitcond3_fu_206_p2;
    sc_signal< sc_lv<1> > exitcond4_fu_194_p2;
    sc_signal< sc_lv<7> > k_reg_133;
    sc_signal< sc_lv<14> > phi_mul_reg_144;
    sc_signal< sc_lv<7> > j1_reg_156;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_15;
    sc_signal< bool > ap_sig_214;
    sc_signal< sc_lv<7> > j2_reg_168;
    sc_signal< sc_logic > ap_sig_cseq_ST_st18_fsm_17;
    sc_signal< bool > ap_sig_223;
    sc_signal< sc_lv<64> > tmp_1_fu_218_p1;
    sc_signal< sc_lv<64> > tmp_4_cast_fu_251_p1;
    sc_signal< sc_lv<64> > tmp_10_cast_fu_278_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_283_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_300_p1;
    sc_signal< sc_lv<64> > tmp_7_cast_fu_315_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_247;
    sc_signal< sc_lv<14> > tmp_3_cast_fu_241_p1;
    sc_signal< sc_lv<14> > tmp_4_fu_245_p2;
    sc_signal< sc_lv<14> > tmp_8_cast_fu_268_p1;
    sc_signal< sc_lv<14> > tmp_2_fu_272_p2;
    sc_signal< sc_lv<14> > tmp_5_cast_fu_305_p1;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_st1_fsm_0;
    static const sc_lv<18> ap_ST_st2_fsm_1;
    static const sc_lv<18> ap_ST_st3_fsm_2;
    static const sc_lv<18> ap_ST_st4_fsm_3;
    static const sc_lv<18> ap_ST_st5_fsm_4;
    static const sc_lv<18> ap_ST_st6_fsm_5;
    static const sc_lv<18> ap_ST_st7_fsm_6;
    static const sc_lv<18> ap_ST_st8_fsm_7;
    static const sc_lv<18> ap_ST_st9_fsm_8;
    static const sc_lv<18> ap_ST_st10_fsm_9;
    static const sc_lv<18> ap_ST_st11_fsm_10;
    static const sc_lv<18> ap_ST_st12_fsm_11;
    static const sc_lv<18> ap_ST_st13_fsm_12;
    static const sc_lv<18> ap_ST_st14_fsm_13;
    static const sc_lv<18> ap_ST_st15_fsm_14;
    static const sc_lv<18> ap_ST_st16_fsm_15;
    static const sc_lv<18> ap_ST_st17_fsm_16;
    static const sc_lv<18> ap_ST_st18_fsm_17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<14> ap_const_lv14_64;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_102();
    void thread_ap_sig_111();
    void thread_ap_sig_124();
    void thread_ap_sig_133();
    void thread_ap_sig_142();
    void thread_ap_sig_153();
    void thread_ap_sig_162();
    void thread_ap_sig_214();
    void thread_ap_sig_223();
    void thread_ap_sig_247();
    void thread_ap_sig_33();
    void thread_ap_sig_66();
    void thread_ap_sig_77();
    void thread_ap_sig_86();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st16_fsm_15();
    void thread_ap_sig_cseq_ST_st17_fsm_16();
    void thread_ap_sig_cseq_ST_st18_fsm_17();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_exitcond1_fu_256_p2();
    void thread_exitcond2_fu_229_p2();
    void thread_exitcond3_fu_206_p2();
    void thread_exitcond4_fu_194_p2();
    void thread_exitcond_fu_288_p2();
    void thread_i_1_fu_200_p2();
    void thread_j_1_fu_212_p2();
    void thread_j_2_fu_294_p2();
    void thread_j_3_fu_262_p2();
    void thread_k_1_fu_235_p2();
    void thread_next_mul2_fu_188_p2();
    void thread_next_mul_fu_223_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_out_vec_address0();
    void thread_out_vec_ce0();
    void thread_out_vec_d0();
    void thread_out_vec_we0();
    void thread_tmp_10_cast_fu_278_p1();
    void thread_tmp_1_fu_218_p1();
    void thread_tmp_2_fu_272_p2();
    void thread_tmp_3_cast_fu_241_p1();
    void thread_tmp_4_cast_fu_251_p1();
    void thread_tmp_4_fu_245_p2();
    void thread_tmp_5_cast_fu_305_p1();
    void thread_tmp_5_fu_300_p1();
    void thread_tmp_7_cast_fu_315_p1();
    void thread_tmp_7_fu_309_p2();
    void thread_tmp_8_cast_fu_268_p1();
    void thread_tmp_8_fu_283_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
