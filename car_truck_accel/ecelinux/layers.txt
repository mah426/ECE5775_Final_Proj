3*32*32
(conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
6*28*28
(pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
6*14*14
(conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
16*10*10
(pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
16*5*5
(fc1): Linear(in_features=400, out_features=120, bias=True)
120
(fc2): Linear(in_features=120, out_features=84, bias=True)
84
(fc3): Linear(in_features=84, out_features=2, bias=True)
2


model
<class 'collections.OrderedDict'>
conv1_weight
torch.Size([6, 3, 5, 5])
conv1_bias
torch.Size([6])
conv2_weight
torch.Size([16, 6, 5, 5])
conv2_bias
torch.Size([16])
fc1_weight
torch.Size([120, 400])
fc1_bias
torch.Size([120])
fc2_weight
torch.Size([84, 120])
fc2_bias
torch.Size([84])
fc3_weight
torch.Size([2, 84])
fc3_bias
torch.Size([2])

torch.Size([1, 3, 32, 32])
conv1 done
torch.Size([1, 6, 14, 14])
conv2 done
torch.Size([1, 16, 5, 5])
flatten done
torch.Size([1, 400])
fc1 done
torch.Size([1, 120])
fc2 done
torch.Size([1, 84])
fc3 done
torch.Size([1, 2])
