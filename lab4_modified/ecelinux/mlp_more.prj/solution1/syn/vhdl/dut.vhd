-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_V_empty_n : IN STD_LOGIC;
    strm_in_V_V_read : OUT STD_LOGIC;
    strm_out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_V_full_n : IN STD_LOGIC;
    strm_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of dut is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.729000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=255,HLS_SYN_DSP=40,HLS_SYN_FF=5573,HLS_SYN_LUT=22567}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv12_C00 : STD_LOGIC_VECTOR (11 downto 0) := "110000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_498 : STD_LOGIC_VECTOR (11 downto 0) := "010010011000";
    constant ap_const_lv25_1BDE : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001101111011110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_35 : BOOLEAN;
    signal strm_in_V_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_56 : BOOLEAN;
    signal exitcond_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_V_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_68 : BOOLEAN;
    signal i_1_fu_364_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_1_reg_646 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_74 : BOOLEAN;
    signal idx_urem_fu_382_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal idx_urem_reg_651 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_V_2_reg_656 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_mul_fu_390_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal next_mul_reg_661 : STD_LOGIC_VECTOR (24 downto 0);
    signal input_addr_reg_666 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_27_fu_411_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_27_reg_671 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_28_fu_419_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_28_reg_676 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_77_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_681 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_99 : BOOLEAN;
    signal tmp_72_fu_551_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_reg_699 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_110 : BOOLEAN;
    signal tmp_73_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_704 : STD_LOGIC_VECTOR (31 downto 0);
    signal notlhs_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_709 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_714 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_reg_719 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs6_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs6_reg_724 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_729 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_129 : BOOLEAN;
    signal mem_conv1_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_0_ce0 : STD_LOGIC;
    signal mem_conv1_0_we0 : STD_LOGIC;
    signal mem_conv1_0_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_0_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_1_ce0 : STD_LOGIC;
    signal mem_conv1_1_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_2_ce0 : STD_LOGIC;
    signal mem_conv1_2_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_3_ce0 : STD_LOGIC;
    signal mem_conv1_3_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_4_ce0 : STD_LOGIC;
    signal mem_conv1_4_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_5_ce0 : STD_LOGIC;
    signal mem_conv1_5_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_6_ce0 : STD_LOGIC;
    signal mem_conv1_6_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv1_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv1_7_ce0 : STD_LOGIC;
    signal mem_conv1_7_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_0_ce0 : STD_LOGIC;
    signal mem_conv2_0_we0 : STD_LOGIC;
    signal mem_conv2_0_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_0_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_0_ce1 : STD_LOGIC;
    signal mem_conv2_0_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_1_ce0 : STD_LOGIC;
    signal mem_conv2_1_we0 : STD_LOGIC;
    signal mem_conv2_1_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_1_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_2_ce0 : STD_LOGIC;
    signal mem_conv2_2_we0 : STD_LOGIC;
    signal mem_conv2_2_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_2_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_3_ce0 : STD_LOGIC;
    signal mem_conv2_3_we0 : STD_LOGIC;
    signal mem_conv2_3_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_3_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_4_ce0 : STD_LOGIC;
    signal mem_conv2_4_we0 : STD_LOGIC;
    signal mem_conv2_4_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_4_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_5_ce0 : STD_LOGIC;
    signal mem_conv2_5_we0 : STD_LOGIC;
    signal mem_conv2_5_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_5_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_6_ce0 : STD_LOGIC;
    signal mem_conv2_6_we0 : STD_LOGIC;
    signal mem_conv2_6_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_6_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem_conv2_7_ce0 : STD_LOGIC;
    signal mem_conv2_7_we0 : STD_LOGIC;
    signal mem_conv2_7_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal mem_conv2_7_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal input_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal input_ce0 : STD_LOGIC;
    signal input_we0 : STD_LOGIC;
    signal input_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal input_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_ap_start : STD_LOGIC;
    signal grp_dut_conv1_fu_256_ap_done : STD_LOGIC;
    signal grp_dut_conv1_fu_256_ap_idle : STD_LOGIC;
    signal grp_dut_conv1_fu_256_ap_ready : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_0_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_1_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_2_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_3_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_4_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_5_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_6_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_input_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_input_7_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_0_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_0_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_0_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_output_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_1_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_1_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_1_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_output_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_2_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_2_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_2_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_output_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_3_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_3_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_3_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_output_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_4_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_4_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_4_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_output_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_5_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_5_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_5_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_output_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_6_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_6_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_6_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_fu_256_output_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_fu_256_output_7_ce0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_7_we0 : STD_LOGIC;
    signal grp_dut_conv1_fu_256_output_7_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_ap_start : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_ap_done : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_ap_idle : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_ap_ready : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_input_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dut_conv1_1_fu_278_input_r_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_0_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_0_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_0_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_output_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_1_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_1_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_1_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_output_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_2_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_2_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_2_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_output_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_3_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_3_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_3_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_output_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_4_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_4_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_4_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_output_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_5_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_5_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_5_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_output_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_6_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_6_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_6_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_conv1_1_fu_278_output_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_conv1_1_fu_278_output_7_ce0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_7_we0 : STD_LOGIC;
    signal grp_dut_conv1_1_fu_278_output_7_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_ap_start : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_ap_done : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_ap_idle : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_ap_ready : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_0_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_1_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_2_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_3_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_4_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_5_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_6_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_input_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_input_7_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_0_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_0_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_0_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_output_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_1_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_1_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_1_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_output_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_2_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_2_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_2_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_output_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_3_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_3_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_3_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_output_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_4_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_4_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_4_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_output_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_5_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_5_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_5_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_output_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_6_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_6_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_6_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_output_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_max_pool_fu_293_output_7_ce0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_7_we0 : STD_LOGIC;
    signal grp_dut_max_pool_fu_293_output_7_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_max_pool_fu_293_M : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dut_max_pool_fu_293_I : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_ap_start : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_ap_done : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_ap_idle : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_ap_ready : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input_r_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input1_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input2_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input3_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input4_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input5_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input6_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_input7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_input7_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_output_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_2_fu_319_output_r_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_output_r_we0 : STD_LOGIC;
    signal grp_dut_dense_mlp_2_fu_319_output_r_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_dense_mlp_1_fu_336_ap_start : STD_LOGIC;
    signal grp_dut_dense_mlp_1_fu_336_ap_done : STD_LOGIC;
    signal grp_dut_dense_mlp_1_fu_336_ap_idle : STD_LOGIC;
    signal grp_dut_dense_mlp_1_fu_336_ap_ready : STD_LOGIC;
    signal grp_dut_dense_mlp_1_fu_336_input_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_1_fu_336_input_r_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_1_fu_336_output_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_1_fu_336_output_r_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_1_fu_336_output_r_we0 : STD_LOGIC;
    signal grp_dut_dense_mlp_1_fu_336_output_r_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_dut_dense_mlp_fu_346_ap_start : STD_LOGIC;
    signal grp_dut_dense_mlp_fu_346_ap_done : STD_LOGIC;
    signal grp_dut_dense_mlp_fu_346_ap_idle : STD_LOGIC;
    signal grp_dut_dense_mlp_fu_346_ap_ready : STD_LOGIC;
    signal grp_dut_dense_mlp_fu_346_input_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_fu_346_input_0_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_fu_346_output_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dut_dense_mlp_fu_346_output_0_ce0 : STD_LOGIC;
    signal grp_dut_dense_mlp_fu_346_output_0_we0 : STD_LOGIC;
    signal grp_dut_dense_mlp_fu_346_output_0_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal i_reg_223 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_555 : BOOLEAN;
    signal phi_mul_reg_234 : STD_LOGIC_VECTOR (24 downto 0);
    signal phi_urem_reg_245 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_grp_dut_conv1_fu_256_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_569 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_576 : BOOLEAN;
    signal ap_reg_grp_dut_conv1_1_fu_278_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_595 : BOOLEAN;
    signal ap_reg_grp_dut_max_pool_fu_293_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_612 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_619 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_627 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_634 : BOOLEAN;
    signal ap_reg_grp_dut_dense_mlp_2_fu_319_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_648 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_655 : BOOLEAN;
    signal ap_reg_grp_dut_dense_mlp_1_fu_336_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_680 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_687 : BOOLEAN;
    signal ap_reg_grp_dut_dense_mlp_fu_346_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_712 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_719 : BOOLEAN;
    signal tmp_26_fu_396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_fu_354_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_urem_fu_370_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_76_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_401_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_78_fu_431_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_434_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_fu_440_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_82_fu_446_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_fu_460_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_83_fu_453_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_85_fu_467_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_fu_437_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_86_fu_473_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_89_fu_485_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_90_fu_491_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_87_fu_477_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_88_fu_481_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_92_fu_508_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_93_fu_514_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_demorgan_fu_520_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_94_fu_526_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_91_fu_501_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_95_fu_532_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_96_fu_538_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_fu_559_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_569_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_s_fu_573_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_fu_583_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_32_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);

    component dut_conv1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_2_ce0 : OUT STD_LOGIC;
        input_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_3_ce0 : OUT STD_LOGIC;
        input_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_4_ce0 : OUT STD_LOGIC;
        input_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_5_ce0 : OUT STD_LOGIC;
        input_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_6_ce0 : OUT STD_LOGIC;
        input_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_7_ce0 : OUT STD_LOGIC;
        input_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_conv1_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_max_pool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_2_ce0 : OUT STD_LOGIC;
        input_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_3_ce0 : OUT STD_LOGIC;
        input_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_4_ce0 : OUT STD_LOGIC;
        input_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_5_ce0 : OUT STD_LOGIC;
        input_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_6_ce0 : OUT STD_LOGIC;
        input_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_7_ce0 : OUT STD_LOGIC;
        input_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        M : IN STD_LOGIC_VECTOR (5 downto 0);
        I : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component dut_dense_mlp_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input1_ce0 : OUT STD_LOGIC;
        input1_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input2_ce0 : OUT STD_LOGIC;
        input2_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input3_ce0 : OUT STD_LOGIC;
        input3_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input4_ce0 : OUT STD_LOGIC;
        input4_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input5_ce0 : OUT STD_LOGIC;
        input5_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input6_ce0 : OUT STD_LOGIC;
        input6_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        input7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input7_ce0 : OUT STD_LOGIC;
        input7_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_r_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_dense_mlp_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_r_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_dense_mlp IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_0_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_fcmp_32ns_32ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_mem_conv1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_mem_conv2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_input IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    mem_conv1_0_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_0_address0,
        ce0 => mem_conv1_0_ce0,
        we0 => mem_conv1_0_we0,
        d0 => mem_conv1_0_d0,
        q0 => mem_conv1_0_q0);

    mem_conv1_1_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_1_address0,
        ce0 => mem_conv1_1_ce0,
        we0 => grp_dut_max_pool_fu_293_output_1_we0,
        d0 => grp_dut_max_pool_fu_293_output_1_d0,
        q0 => mem_conv1_1_q0);

    mem_conv1_2_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_2_address0,
        ce0 => mem_conv1_2_ce0,
        we0 => grp_dut_max_pool_fu_293_output_2_we0,
        d0 => grp_dut_max_pool_fu_293_output_2_d0,
        q0 => mem_conv1_2_q0);

    mem_conv1_3_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_3_address0,
        ce0 => mem_conv1_3_ce0,
        we0 => grp_dut_max_pool_fu_293_output_3_we0,
        d0 => grp_dut_max_pool_fu_293_output_3_d0,
        q0 => mem_conv1_3_q0);

    mem_conv1_4_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_4_address0,
        ce0 => mem_conv1_4_ce0,
        we0 => grp_dut_max_pool_fu_293_output_4_we0,
        d0 => grp_dut_max_pool_fu_293_output_4_d0,
        q0 => mem_conv1_4_q0);

    mem_conv1_5_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_5_address0,
        ce0 => mem_conv1_5_ce0,
        we0 => grp_dut_max_pool_fu_293_output_5_we0,
        d0 => grp_dut_max_pool_fu_293_output_5_d0,
        q0 => mem_conv1_5_q0);

    mem_conv1_6_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_6_address0,
        ce0 => mem_conv1_6_ce0,
        we0 => grp_dut_max_pool_fu_293_output_6_we0,
        d0 => grp_dut_max_pool_fu_293_output_6_d0,
        q0 => mem_conv1_6_q0);

    mem_conv1_7_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv1_7_address0,
        ce0 => mem_conv1_7_ce0,
        we0 => grp_dut_max_pool_fu_293_output_7_we0,
        d0 => grp_dut_max_pool_fu_293_output_7_d0,
        q0 => mem_conv1_7_q0);

    mem_conv2_0_U : component dut_mem_conv2_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_0_address0,
        ce0 => mem_conv2_0_ce0,
        we0 => mem_conv2_0_we0,
        d0 => mem_conv2_0_d0,
        q0 => mem_conv2_0_q0,
        address1 => mem_conv2_0_address1,
        ce1 => mem_conv2_0_ce1,
        q1 => mem_conv2_0_q1);

    mem_conv2_1_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_1_address0,
        ce0 => mem_conv2_1_ce0,
        we0 => mem_conv2_1_we0,
        d0 => mem_conv2_1_d0,
        q0 => mem_conv2_1_q0);

    mem_conv2_2_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_2_address0,
        ce0 => mem_conv2_2_ce0,
        we0 => mem_conv2_2_we0,
        d0 => mem_conv2_2_d0,
        q0 => mem_conv2_2_q0);

    mem_conv2_3_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_3_address0,
        ce0 => mem_conv2_3_ce0,
        we0 => mem_conv2_3_we0,
        d0 => mem_conv2_3_d0,
        q0 => mem_conv2_3_q0);

    mem_conv2_4_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_4_address0,
        ce0 => mem_conv2_4_ce0,
        we0 => mem_conv2_4_we0,
        d0 => mem_conv2_4_d0,
        q0 => mem_conv2_4_q0);

    mem_conv2_5_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_5_address0,
        ce0 => mem_conv2_5_ce0,
        we0 => mem_conv2_5_we0,
        d0 => mem_conv2_5_d0,
        q0 => mem_conv2_5_q0);

    mem_conv2_6_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_6_address0,
        ce0 => mem_conv2_6_ce0,
        we0 => mem_conv2_6_we0,
        d0 => mem_conv2_6_d0,
        q0 => mem_conv2_6_q0);

    mem_conv2_7_U : component dut_mem_conv1_0
    generic map (
        DataWidth => 128,
        AddressRange => 147,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem_conv2_7_address0,
        ce0 => mem_conv2_7_ce0,
        we0 => mem_conv2_7_we0,
        d0 => mem_conv2_7_d0,
        q0 => mem_conv2_7_q0);

    input_U : component dut_input
    generic map (
        DataWidth => 128,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_address0,
        ce0 => input_ce0,
        we0 => input_we0,
        d0 => input_d0,
        q0 => input_q0);

    grp_dut_conv1_fu_256 : component dut_conv1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_conv1_fu_256_ap_start,
        ap_done => grp_dut_conv1_fu_256_ap_done,
        ap_idle => grp_dut_conv1_fu_256_ap_idle,
        ap_ready => grp_dut_conv1_fu_256_ap_ready,
        input_0_address0 => grp_dut_conv1_fu_256_input_0_address0,
        input_0_ce0 => grp_dut_conv1_fu_256_input_0_ce0,
        input_0_q0 => mem_conv1_0_q0,
        input_1_address0 => grp_dut_conv1_fu_256_input_1_address0,
        input_1_ce0 => grp_dut_conv1_fu_256_input_1_ce0,
        input_1_q0 => mem_conv1_1_q0,
        input_2_address0 => grp_dut_conv1_fu_256_input_2_address0,
        input_2_ce0 => grp_dut_conv1_fu_256_input_2_ce0,
        input_2_q0 => mem_conv1_2_q0,
        input_3_address0 => grp_dut_conv1_fu_256_input_3_address0,
        input_3_ce0 => grp_dut_conv1_fu_256_input_3_ce0,
        input_3_q0 => mem_conv1_3_q0,
        input_4_address0 => grp_dut_conv1_fu_256_input_4_address0,
        input_4_ce0 => grp_dut_conv1_fu_256_input_4_ce0,
        input_4_q0 => mem_conv1_4_q0,
        input_5_address0 => grp_dut_conv1_fu_256_input_5_address0,
        input_5_ce0 => grp_dut_conv1_fu_256_input_5_ce0,
        input_5_q0 => mem_conv1_5_q0,
        input_6_address0 => grp_dut_conv1_fu_256_input_6_address0,
        input_6_ce0 => grp_dut_conv1_fu_256_input_6_ce0,
        input_6_q0 => mem_conv1_6_q0,
        input_7_address0 => grp_dut_conv1_fu_256_input_7_address0,
        input_7_ce0 => grp_dut_conv1_fu_256_input_7_ce0,
        input_7_q0 => mem_conv1_7_q0,
        output_0_address0 => grp_dut_conv1_fu_256_output_0_address0,
        output_0_ce0 => grp_dut_conv1_fu_256_output_0_ce0,
        output_0_we0 => grp_dut_conv1_fu_256_output_0_we0,
        output_0_d0 => grp_dut_conv1_fu_256_output_0_d0,
        output_0_q0 => mem_conv2_0_q0,
        output_1_address0 => grp_dut_conv1_fu_256_output_1_address0,
        output_1_ce0 => grp_dut_conv1_fu_256_output_1_ce0,
        output_1_we0 => grp_dut_conv1_fu_256_output_1_we0,
        output_1_d0 => grp_dut_conv1_fu_256_output_1_d0,
        output_1_q0 => mem_conv2_1_q0,
        output_2_address0 => grp_dut_conv1_fu_256_output_2_address0,
        output_2_ce0 => grp_dut_conv1_fu_256_output_2_ce0,
        output_2_we0 => grp_dut_conv1_fu_256_output_2_we0,
        output_2_d0 => grp_dut_conv1_fu_256_output_2_d0,
        output_2_q0 => mem_conv2_2_q0,
        output_3_address0 => grp_dut_conv1_fu_256_output_3_address0,
        output_3_ce0 => grp_dut_conv1_fu_256_output_3_ce0,
        output_3_we0 => grp_dut_conv1_fu_256_output_3_we0,
        output_3_d0 => grp_dut_conv1_fu_256_output_3_d0,
        output_3_q0 => mem_conv2_3_q0,
        output_4_address0 => grp_dut_conv1_fu_256_output_4_address0,
        output_4_ce0 => grp_dut_conv1_fu_256_output_4_ce0,
        output_4_we0 => grp_dut_conv1_fu_256_output_4_we0,
        output_4_d0 => grp_dut_conv1_fu_256_output_4_d0,
        output_4_q0 => mem_conv2_4_q0,
        output_5_address0 => grp_dut_conv1_fu_256_output_5_address0,
        output_5_ce0 => grp_dut_conv1_fu_256_output_5_ce0,
        output_5_we0 => grp_dut_conv1_fu_256_output_5_we0,
        output_5_d0 => grp_dut_conv1_fu_256_output_5_d0,
        output_5_q0 => mem_conv2_5_q0,
        output_6_address0 => grp_dut_conv1_fu_256_output_6_address0,
        output_6_ce0 => grp_dut_conv1_fu_256_output_6_ce0,
        output_6_we0 => grp_dut_conv1_fu_256_output_6_we0,
        output_6_d0 => grp_dut_conv1_fu_256_output_6_d0,
        output_6_q0 => mem_conv2_6_q0,
        output_7_address0 => grp_dut_conv1_fu_256_output_7_address0,
        output_7_ce0 => grp_dut_conv1_fu_256_output_7_ce0,
        output_7_we0 => grp_dut_conv1_fu_256_output_7_we0,
        output_7_d0 => grp_dut_conv1_fu_256_output_7_d0,
        output_7_q0 => mem_conv2_7_q0);

    grp_dut_conv1_1_fu_278 : component dut_conv1_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_conv1_1_fu_278_ap_start,
        ap_done => grp_dut_conv1_1_fu_278_ap_done,
        ap_idle => grp_dut_conv1_1_fu_278_ap_idle,
        ap_ready => grp_dut_conv1_1_fu_278_ap_ready,
        input_r_address0 => grp_dut_conv1_1_fu_278_input_r_address0,
        input_r_ce0 => grp_dut_conv1_1_fu_278_input_r_ce0,
        input_r_q0 => input_q0,
        output_0_address0 => grp_dut_conv1_1_fu_278_output_0_address0,
        output_0_ce0 => grp_dut_conv1_1_fu_278_output_0_ce0,
        output_0_we0 => grp_dut_conv1_1_fu_278_output_0_we0,
        output_0_d0 => grp_dut_conv1_1_fu_278_output_0_d0,
        output_0_q0 => mem_conv2_0_q0,
        output_1_address0 => grp_dut_conv1_1_fu_278_output_1_address0,
        output_1_ce0 => grp_dut_conv1_1_fu_278_output_1_ce0,
        output_1_we0 => grp_dut_conv1_1_fu_278_output_1_we0,
        output_1_d0 => grp_dut_conv1_1_fu_278_output_1_d0,
        output_1_q0 => mem_conv2_1_q0,
        output_2_address0 => grp_dut_conv1_1_fu_278_output_2_address0,
        output_2_ce0 => grp_dut_conv1_1_fu_278_output_2_ce0,
        output_2_we0 => grp_dut_conv1_1_fu_278_output_2_we0,
        output_2_d0 => grp_dut_conv1_1_fu_278_output_2_d0,
        output_2_q0 => mem_conv2_2_q0,
        output_3_address0 => grp_dut_conv1_1_fu_278_output_3_address0,
        output_3_ce0 => grp_dut_conv1_1_fu_278_output_3_ce0,
        output_3_we0 => grp_dut_conv1_1_fu_278_output_3_we0,
        output_3_d0 => grp_dut_conv1_1_fu_278_output_3_d0,
        output_3_q0 => mem_conv2_3_q0,
        output_4_address0 => grp_dut_conv1_1_fu_278_output_4_address0,
        output_4_ce0 => grp_dut_conv1_1_fu_278_output_4_ce0,
        output_4_we0 => grp_dut_conv1_1_fu_278_output_4_we0,
        output_4_d0 => grp_dut_conv1_1_fu_278_output_4_d0,
        output_4_q0 => mem_conv2_4_q0,
        output_5_address0 => grp_dut_conv1_1_fu_278_output_5_address0,
        output_5_ce0 => grp_dut_conv1_1_fu_278_output_5_ce0,
        output_5_we0 => grp_dut_conv1_1_fu_278_output_5_we0,
        output_5_d0 => grp_dut_conv1_1_fu_278_output_5_d0,
        output_5_q0 => mem_conv2_5_q0,
        output_6_address0 => grp_dut_conv1_1_fu_278_output_6_address0,
        output_6_ce0 => grp_dut_conv1_1_fu_278_output_6_ce0,
        output_6_we0 => grp_dut_conv1_1_fu_278_output_6_we0,
        output_6_d0 => grp_dut_conv1_1_fu_278_output_6_d0,
        output_6_q0 => mem_conv2_6_q0,
        output_7_address0 => grp_dut_conv1_1_fu_278_output_7_address0,
        output_7_ce0 => grp_dut_conv1_1_fu_278_output_7_ce0,
        output_7_we0 => grp_dut_conv1_1_fu_278_output_7_we0,
        output_7_d0 => grp_dut_conv1_1_fu_278_output_7_d0,
        output_7_q0 => mem_conv2_7_q0);

    grp_dut_max_pool_fu_293 : component dut_max_pool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_max_pool_fu_293_ap_start,
        ap_done => grp_dut_max_pool_fu_293_ap_done,
        ap_idle => grp_dut_max_pool_fu_293_ap_idle,
        ap_ready => grp_dut_max_pool_fu_293_ap_ready,
        input_0_address0 => grp_dut_max_pool_fu_293_input_0_address0,
        input_0_ce0 => grp_dut_max_pool_fu_293_input_0_ce0,
        input_0_q0 => mem_conv2_0_q0,
        input_1_address0 => grp_dut_max_pool_fu_293_input_1_address0,
        input_1_ce0 => grp_dut_max_pool_fu_293_input_1_ce0,
        input_1_q0 => mem_conv2_1_q0,
        input_2_address0 => grp_dut_max_pool_fu_293_input_2_address0,
        input_2_ce0 => grp_dut_max_pool_fu_293_input_2_ce0,
        input_2_q0 => mem_conv2_2_q0,
        input_3_address0 => grp_dut_max_pool_fu_293_input_3_address0,
        input_3_ce0 => grp_dut_max_pool_fu_293_input_3_ce0,
        input_3_q0 => mem_conv2_3_q0,
        input_4_address0 => grp_dut_max_pool_fu_293_input_4_address0,
        input_4_ce0 => grp_dut_max_pool_fu_293_input_4_ce0,
        input_4_q0 => mem_conv2_4_q0,
        input_5_address0 => grp_dut_max_pool_fu_293_input_5_address0,
        input_5_ce0 => grp_dut_max_pool_fu_293_input_5_ce0,
        input_5_q0 => mem_conv2_5_q0,
        input_6_address0 => grp_dut_max_pool_fu_293_input_6_address0,
        input_6_ce0 => grp_dut_max_pool_fu_293_input_6_ce0,
        input_6_q0 => mem_conv2_6_q0,
        input_7_address0 => grp_dut_max_pool_fu_293_input_7_address0,
        input_7_ce0 => grp_dut_max_pool_fu_293_input_7_ce0,
        input_7_q0 => mem_conv2_7_q0,
        output_0_address0 => grp_dut_max_pool_fu_293_output_0_address0,
        output_0_ce0 => grp_dut_max_pool_fu_293_output_0_ce0,
        output_0_we0 => grp_dut_max_pool_fu_293_output_0_we0,
        output_0_d0 => grp_dut_max_pool_fu_293_output_0_d0,
        output_0_q0 => mem_conv1_0_q0,
        output_1_address0 => grp_dut_max_pool_fu_293_output_1_address0,
        output_1_ce0 => grp_dut_max_pool_fu_293_output_1_ce0,
        output_1_we0 => grp_dut_max_pool_fu_293_output_1_we0,
        output_1_d0 => grp_dut_max_pool_fu_293_output_1_d0,
        output_1_q0 => mem_conv1_1_q0,
        output_2_address0 => grp_dut_max_pool_fu_293_output_2_address0,
        output_2_ce0 => grp_dut_max_pool_fu_293_output_2_ce0,
        output_2_we0 => grp_dut_max_pool_fu_293_output_2_we0,
        output_2_d0 => grp_dut_max_pool_fu_293_output_2_d0,
        output_2_q0 => mem_conv1_2_q0,
        output_3_address0 => grp_dut_max_pool_fu_293_output_3_address0,
        output_3_ce0 => grp_dut_max_pool_fu_293_output_3_ce0,
        output_3_we0 => grp_dut_max_pool_fu_293_output_3_we0,
        output_3_d0 => grp_dut_max_pool_fu_293_output_3_d0,
        output_3_q0 => mem_conv1_3_q0,
        output_4_address0 => grp_dut_max_pool_fu_293_output_4_address0,
        output_4_ce0 => grp_dut_max_pool_fu_293_output_4_ce0,
        output_4_we0 => grp_dut_max_pool_fu_293_output_4_we0,
        output_4_d0 => grp_dut_max_pool_fu_293_output_4_d0,
        output_4_q0 => mem_conv1_4_q0,
        output_5_address0 => grp_dut_max_pool_fu_293_output_5_address0,
        output_5_ce0 => grp_dut_max_pool_fu_293_output_5_ce0,
        output_5_we0 => grp_dut_max_pool_fu_293_output_5_we0,
        output_5_d0 => grp_dut_max_pool_fu_293_output_5_d0,
        output_5_q0 => mem_conv1_5_q0,
        output_6_address0 => grp_dut_max_pool_fu_293_output_6_address0,
        output_6_ce0 => grp_dut_max_pool_fu_293_output_6_ce0,
        output_6_we0 => grp_dut_max_pool_fu_293_output_6_we0,
        output_6_d0 => grp_dut_max_pool_fu_293_output_6_d0,
        output_6_q0 => mem_conv1_6_q0,
        output_7_address0 => grp_dut_max_pool_fu_293_output_7_address0,
        output_7_ce0 => grp_dut_max_pool_fu_293_output_7_ce0,
        output_7_we0 => grp_dut_max_pool_fu_293_output_7_we0,
        output_7_d0 => grp_dut_max_pool_fu_293_output_7_d0,
        output_7_q0 => mem_conv1_7_q0,
        M => grp_dut_max_pool_fu_293_M,
        I => grp_dut_max_pool_fu_293_I);

    grp_dut_dense_mlp_2_fu_319 : component dut_dense_mlp_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_dense_mlp_2_fu_319_ap_start,
        ap_done => grp_dut_dense_mlp_2_fu_319_ap_done,
        ap_idle => grp_dut_dense_mlp_2_fu_319_ap_idle,
        ap_ready => grp_dut_dense_mlp_2_fu_319_ap_ready,
        input_r_address0 => grp_dut_dense_mlp_2_fu_319_input_r_address0,
        input_r_ce0 => grp_dut_dense_mlp_2_fu_319_input_r_ce0,
        input_r_q0 => mem_conv1_0_q0,
        input1_address0 => grp_dut_dense_mlp_2_fu_319_input1_address0,
        input1_ce0 => grp_dut_dense_mlp_2_fu_319_input1_ce0,
        input1_q0 => mem_conv1_1_q0,
        input2_address0 => grp_dut_dense_mlp_2_fu_319_input2_address0,
        input2_ce0 => grp_dut_dense_mlp_2_fu_319_input2_ce0,
        input2_q0 => mem_conv1_2_q0,
        input3_address0 => grp_dut_dense_mlp_2_fu_319_input3_address0,
        input3_ce0 => grp_dut_dense_mlp_2_fu_319_input3_ce0,
        input3_q0 => mem_conv1_3_q0,
        input4_address0 => grp_dut_dense_mlp_2_fu_319_input4_address0,
        input4_ce0 => grp_dut_dense_mlp_2_fu_319_input4_ce0,
        input4_q0 => mem_conv1_4_q0,
        input5_address0 => grp_dut_dense_mlp_2_fu_319_input5_address0,
        input5_ce0 => grp_dut_dense_mlp_2_fu_319_input5_ce0,
        input5_q0 => mem_conv1_5_q0,
        input6_address0 => grp_dut_dense_mlp_2_fu_319_input6_address0,
        input6_ce0 => grp_dut_dense_mlp_2_fu_319_input6_ce0,
        input6_q0 => mem_conv1_6_q0,
        input7_address0 => grp_dut_dense_mlp_2_fu_319_input7_address0,
        input7_ce0 => grp_dut_dense_mlp_2_fu_319_input7_ce0,
        input7_q0 => mem_conv1_7_q0,
        output_r_address0 => grp_dut_dense_mlp_2_fu_319_output_r_address0,
        output_r_ce0 => grp_dut_dense_mlp_2_fu_319_output_r_ce0,
        output_r_we0 => grp_dut_dense_mlp_2_fu_319_output_r_we0,
        output_r_d0 => grp_dut_dense_mlp_2_fu_319_output_r_d0,
        output_r_q0 => mem_conv2_0_q0);

    grp_dut_dense_mlp_1_fu_336 : component dut_dense_mlp_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_dense_mlp_1_fu_336_ap_start,
        ap_done => grp_dut_dense_mlp_1_fu_336_ap_done,
        ap_idle => grp_dut_dense_mlp_1_fu_336_ap_idle,
        ap_ready => grp_dut_dense_mlp_1_fu_336_ap_ready,
        input_r_address0 => grp_dut_dense_mlp_1_fu_336_input_r_address0,
        input_r_ce0 => grp_dut_dense_mlp_1_fu_336_input_r_ce0,
        input_r_q0 => mem_conv2_0_q0,
        output_r_address0 => grp_dut_dense_mlp_1_fu_336_output_r_address0,
        output_r_ce0 => grp_dut_dense_mlp_1_fu_336_output_r_ce0,
        output_r_we0 => grp_dut_dense_mlp_1_fu_336_output_r_we0,
        output_r_d0 => grp_dut_dense_mlp_1_fu_336_output_r_d0,
        output_r_q0 => mem_conv1_0_q0);

    grp_dut_dense_mlp_fu_346 : component dut_dense_mlp
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dut_dense_mlp_fu_346_ap_start,
        ap_done => grp_dut_dense_mlp_fu_346_ap_done,
        ap_idle => grp_dut_dense_mlp_fu_346_ap_idle,
        ap_ready => grp_dut_dense_mlp_fu_346_ap_ready,
        input_0_address0 => grp_dut_dense_mlp_fu_346_input_0_address0,
        input_0_ce0 => grp_dut_dense_mlp_fu_346_input_0_ce0,
        input_0_q0 => mem_conv1_0_q0,
        output_0_address0 => grp_dut_dense_mlp_fu_346_output_0_address0,
        output_0_ce0 => grp_dut_dense_mlp_fu_346_output_0_ce0,
        output_0_we0 => grp_dut_dense_mlp_fu_346_output_0_we0,
        output_0_d0 => grp_dut_dense_mlp_fu_346_output_0_d0,
        output_0_q0 => mem_conv2_0_q0);

    dut_fcmp_32ns_32ns_1_1_U103 : component dut_fcmp_32ns_32ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_35_fu_354_p0,
        din1 => tmp_35_fu_354_p1,
        opcode => ap_const_lv5_4,
        dout => tmp_35_fu_354_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_dut_conv1_1_fu_278_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_conv1_1_fu_278_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_74) and not((exitcond_fu_358_p2 = ap_const_lv1_0)))) then 
                    ap_reg_grp_dut_conv1_1_fu_278_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_conv1_1_fu_278_ap_ready)) then 
                    ap_reg_grp_dut_conv1_1_fu_278_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_conv1_fu_256_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_conv1_fu_256_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                    ap_reg_grp_dut_conv1_fu_256_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_conv1_fu_256_ap_ready)) then 
                    ap_reg_grp_dut_conv1_fu_256_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_dense_mlp_1_fu_336_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_dense_mlp_1_fu_336_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                    ap_reg_grp_dut_dense_mlp_1_fu_336_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_dense_mlp_1_fu_336_ap_ready)) then 
                    ap_reg_grp_dut_dense_mlp_1_fu_336_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_dense_mlp_2_fu_319_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_dense_mlp_2_fu_319_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                    ap_reg_grp_dut_dense_mlp_2_fu_319_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_dense_mlp_2_fu_319_ap_ready)) then 
                    ap_reg_grp_dut_dense_mlp_2_fu_319_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_dense_mlp_fu_346_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_dense_mlp_fu_346_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
                    ap_reg_grp_dut_dense_mlp_fu_346_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_dense_mlp_fu_346_ap_ready)) then 
                    ap_reg_grp_dut_dense_mlp_fu_346_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_dut_max_pool_fu_293_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dut_max_pool_fu_293_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
                    ap_reg_grp_dut_max_pool_fu_293_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dut_max_pool_fu_293_ap_ready)) then 
                    ap_reg_grp_dut_max_pool_fu_293_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                i_reg_223 <= i_1_reg_646;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_223 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                phi_mul_reg_234 <= next_mul_reg_661;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_mul_reg_234 <= ap_const_lv25_0;
            end if; 
        end if;
    end process;

    phi_urem_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                phi_urem_reg_245 <= idx_urem_reg_651;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_urem_reg_245 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_74))) then
                i_1_reg_646 <= i_1_fu_364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_358_p2 = ap_const_lv1_0) and not(ap_sig_74))) then
                idx_urem_reg_651 <= idx_urem_fu_382_p3;
                input_addr_reg_666 <= tmp_26_fu_396_p1(11 - 1 downto 0);
                next_mul_reg_661 <= next_mul_fu_390_p2;
                    tmp_27_reg_671(6 downto 5) <= tmp_27_fu_411_p3(6 downto 5);
                    tmp_28_reg_676(6 downto 5) <= tmp_28_fu_419_p2(6 downto 5);
                tmp_77_reg_681 <= tmp_77_fu_425_p2;
                tmp_V_2_reg_656 <= strm_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                notlhs5_reg_719 <= notlhs5_fu_599_p2;
                notlhs_reg_709 <= notlhs_fu_587_p2;
                notrhs6_reg_724 <= notrhs6_fu_605_p2;
                notrhs_reg_714 <= notrhs_fu_593_p2;
                tmp_72_reg_699 <= tmp_72_fu_551_p1;
                tmp_73_reg_704 <= tmp_73_fu_555_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then
                tmp_36_reg_729 <= tmp_36_fu_633_p2;
            end if;
        end if;
    end process;
    tmp_27_reg_671(4 downto 0) <= "00000";
    tmp_28_reg_676(4 downto 0) <= "11111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, strm_out_V_V_full_n, exitcond_fu_358_p2, ap_sig_74, grp_dut_conv1_fu_256_ap_done, grp_dut_conv1_1_fu_278_ap_done, grp_dut_max_pool_fu_293_ap_done, grp_dut_dense_mlp_2_fu_319_ap_done, grp_dut_dense_mlp_1_fu_336_ap_done, grp_dut_dense_mlp_fu_346_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not(ap_sig_74) and not((exitcond_fu_358_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                elsif (((exitcond_fu_358_p2 = ap_const_lv1_0) and not(ap_sig_74))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_logic_0 = grp_dut_conv1_1_fu_278_ap_done))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_logic_0 = grp_dut_max_pool_fu_293_ap_done))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = grp_dut_conv1_fu_256_ap_done))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_logic_0 = grp_dut_max_pool_fu_293_ap_done))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_logic_0 = grp_dut_dense_mlp_2_fu_319_ap_done))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                if (not((ap_const_logic_0 = grp_dut_dense_mlp_1_fu_336_ap_done))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                if (not((ap_const_logic_0 = grp_dut_dense_mlp_fu_346_ap_done))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                if (not((strm_out_V_V_full_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(strm_out_V_V_full_n, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((strm_out_V_V_full_n = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(strm_out_V_V_full_n, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((strm_out_V_V_full_n = ap_const_logic_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_110_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_110 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_129_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_129 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_35_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_35 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_555_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_555 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_56_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_56 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_569_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_569 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_576_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_576 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_595_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_595 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_612_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_612 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_619_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_619 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_627_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_627 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_634_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_634 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_648_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_648 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_655_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_655 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_68_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_68 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_680_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_680 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_687_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_687 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_712_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_712 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_719_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_719 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_74_assign_proc : process(strm_in_V_V_empty_n, exitcond_fu_358_p2)
    begin
                ap_sig_74 <= ((exitcond_fu_358_p2 = ap_const_lv1_0) and (strm_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_99_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_99 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_634)
    begin
        if (ap_sig_634) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_648)
    begin
        if (ap_sig_648) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_655)
    begin
        if (ap_sig_655) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_680)
    begin
        if (ap_sig_680) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_687)
    begin
        if (ap_sig_687) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_712)
    begin
        if (ap_sig_712) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_719)
    begin
        if (ap_sig_719) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_99)
    begin
        if (ap_sig_99) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_110)
    begin
        if (ap_sig_110) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_129)
    begin
        if (ap_sig_129) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_35)
    begin
        if (ap_sig_35) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_68)
    begin
        if (ap_sig_68) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_56)
    begin
        if (ap_sig_56) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_555)
    begin
        if (ap_sig_555) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_595)
    begin
        if (ap_sig_595) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_612)
    begin
        if (ap_sig_612) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_627)
    begin
        if (ap_sig_627) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_569)
    begin
        if (ap_sig_569) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_576)
    begin
        if (ap_sig_576) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_619)
    begin
        if (ap_sig_619) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_358_p2 <= "1" when (i_reg_223 = ap_const_lv12_C00) else "0";
    grp_dut_conv1_1_fu_278_ap_start <= ap_reg_grp_dut_conv1_1_fu_278_ap_start;
    grp_dut_conv1_fu_256_ap_start <= ap_reg_grp_dut_conv1_fu_256_ap_start;
    grp_dut_dense_mlp_1_fu_336_ap_start <= ap_reg_grp_dut_dense_mlp_1_fu_336_ap_start;
    grp_dut_dense_mlp_2_fu_319_ap_start <= ap_reg_grp_dut_dense_mlp_2_fu_319_ap_start;
    grp_dut_dense_mlp_fu_346_ap_start <= ap_reg_grp_dut_dense_mlp_fu_346_ap_start;

    grp_dut_max_pool_fu_293_I_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_dut_max_pool_fu_293_I <= ap_const_lv6_A;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_max_pool_fu_293_I <= ap_const_lv6_1C;
        else 
            grp_dut_max_pool_fu_293_I <= "XXXXXX";
        end if; 
    end process;


    grp_dut_max_pool_fu_293_M_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_dut_max_pool_fu_293_M <= ap_const_lv6_10;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_dut_max_pool_fu_293_M <= ap_const_lv6_6;
        else 
            grp_dut_max_pool_fu_293_M <= "XXXXXX";
        end if; 
    end process;

    grp_dut_max_pool_fu_293_ap_start <= ap_reg_grp_dut_max_pool_fu_293_ap_start;
    i_1_fu_364_p2 <= std_logic_vector(unsigned(i_reg_223) + unsigned(ap_const_lv12_1));
    idx_urem_fu_382_p3 <= 
        next_urem_fu_370_p2 when (tmp_76_fu_376_p2(0) = '1') else 
        ap_const_lv12_0;

    input_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_358_p2, input_addr_reg_666, grp_dut_conv1_1_fu_278_input_r_address0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, tmp_26_fu_396_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            input_address0 <= input_addr_reg_666;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_358_p2 = ap_const_lv1_0))) then 
            input_address0 <= tmp_26_fu_396_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            input_address0 <= grp_dut_conv1_1_fu_278_input_r_address0;
        else 
            input_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    input_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_358_p2, ap_sig_74, grp_dut_conv1_1_fu_278_input_r_ce0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_358_p2 = ap_const_lv1_0) and not(ap_sig_74)) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            input_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            input_ce0 <= grp_dut_conv1_1_fu_278_input_r_ce0;
        else 
            input_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    input_d0 <= (tmp_95_fu_532_p2 or tmp_96_fu_538_p2);

    input_we0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            input_we0 <= ap_const_logic_1;
        else 
            input_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_0_address0_assign_proc : process(grp_dut_conv1_fu_256_input_0_address0, grp_dut_max_pool_fu_293_output_0_address0, grp_dut_dense_mlp_2_fu_319_input_r_address0, grp_dut_dense_mlp_1_fu_336_output_r_address0, grp_dut_dense_mlp_fu_346_input_0_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_address0 <= grp_dut_dense_mlp_fu_346_input_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_address0 <= grp_dut_dense_mlp_1_fu_336_output_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_0_address0 <= grp_dut_dense_mlp_2_fu_319_input_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_0_address0 <= grp_dut_max_pool_fu_293_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_address0 <= grp_dut_conv1_fu_256_input_0_address0;
        else 
            mem_conv1_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_0_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_0_ce0, grp_dut_max_pool_fu_293_output_0_ce0, grp_dut_dense_mlp_2_fu_319_input_r_ce0, grp_dut_dense_mlp_1_fu_336_output_r_ce0, grp_dut_dense_mlp_fu_346_input_0_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv1_0_ce0 <= grp_dut_dense_mlp_fu_346_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_ce0 <= grp_dut_dense_mlp_1_fu_336_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_0_ce0 <= grp_dut_dense_mlp_2_fu_319_input_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_0_ce0 <= grp_dut_max_pool_fu_293_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_0_ce0 <= grp_dut_conv1_fu_256_input_0_ce0;
        else 
            mem_conv1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_0_d0_assign_proc : process(grp_dut_max_pool_fu_293_output_0_d0, grp_dut_dense_mlp_1_fu_336_output_r_d0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_d0 <= grp_dut_dense_mlp_1_fu_336_output_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_0_d0 <= grp_dut_max_pool_fu_293_output_0_d0;
        else 
            mem_conv1_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv1_0_we0_assign_proc : process(grp_dut_max_pool_fu_293_output_0_we0, grp_dut_dense_mlp_1_fu_336_output_r_we0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv1_0_we0 <= grp_dut_dense_mlp_1_fu_336_output_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_0_we0 <= grp_dut_max_pool_fu_293_output_0_we0;
        else 
            mem_conv1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_1_address0_assign_proc : process(grp_dut_conv1_fu_256_input_1_address0, grp_dut_max_pool_fu_293_output_1_address0, grp_dut_dense_mlp_2_fu_319_input1_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_1_address0 <= grp_dut_dense_mlp_2_fu_319_input1_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_1_address0 <= grp_dut_max_pool_fu_293_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_address0 <= grp_dut_conv1_fu_256_input_1_address0;
        else 
            mem_conv1_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_1_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_1_ce0, grp_dut_max_pool_fu_293_output_1_ce0, grp_dut_dense_mlp_2_fu_319_input1_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_1_ce0 <= grp_dut_dense_mlp_2_fu_319_input1_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_1_ce0 <= grp_dut_max_pool_fu_293_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_1_ce0 <= grp_dut_conv1_fu_256_input_1_ce0;
        else 
            mem_conv1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_2_address0_assign_proc : process(grp_dut_conv1_fu_256_input_2_address0, grp_dut_max_pool_fu_293_output_2_address0, grp_dut_dense_mlp_2_fu_319_input2_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_2_address0 <= grp_dut_dense_mlp_2_fu_319_input2_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_2_address0 <= grp_dut_max_pool_fu_293_output_2_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_2_address0 <= grp_dut_conv1_fu_256_input_2_address0;
        else 
            mem_conv1_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_2_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_2_ce0, grp_dut_max_pool_fu_293_output_2_ce0, grp_dut_dense_mlp_2_fu_319_input2_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_2_ce0 <= grp_dut_dense_mlp_2_fu_319_input2_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_2_ce0 <= grp_dut_max_pool_fu_293_output_2_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_2_ce0 <= grp_dut_conv1_fu_256_input_2_ce0;
        else 
            mem_conv1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_3_address0_assign_proc : process(grp_dut_conv1_fu_256_input_3_address0, grp_dut_max_pool_fu_293_output_3_address0, grp_dut_dense_mlp_2_fu_319_input3_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_3_address0 <= grp_dut_dense_mlp_2_fu_319_input3_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_3_address0 <= grp_dut_max_pool_fu_293_output_3_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_3_address0 <= grp_dut_conv1_fu_256_input_3_address0;
        else 
            mem_conv1_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_3_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_3_ce0, grp_dut_max_pool_fu_293_output_3_ce0, grp_dut_dense_mlp_2_fu_319_input3_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_3_ce0 <= grp_dut_dense_mlp_2_fu_319_input3_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_3_ce0 <= grp_dut_max_pool_fu_293_output_3_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_3_ce0 <= grp_dut_conv1_fu_256_input_3_ce0;
        else 
            mem_conv1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_4_address0_assign_proc : process(grp_dut_conv1_fu_256_input_4_address0, grp_dut_max_pool_fu_293_output_4_address0, grp_dut_dense_mlp_2_fu_319_input4_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_4_address0 <= grp_dut_dense_mlp_2_fu_319_input4_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_4_address0 <= grp_dut_max_pool_fu_293_output_4_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_4_address0 <= grp_dut_conv1_fu_256_input_4_address0;
        else 
            mem_conv1_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_4_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_4_ce0, grp_dut_max_pool_fu_293_output_4_ce0, grp_dut_dense_mlp_2_fu_319_input4_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_4_ce0 <= grp_dut_dense_mlp_2_fu_319_input4_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_4_ce0 <= grp_dut_max_pool_fu_293_output_4_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_4_ce0 <= grp_dut_conv1_fu_256_input_4_ce0;
        else 
            mem_conv1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_5_address0_assign_proc : process(grp_dut_conv1_fu_256_input_5_address0, grp_dut_max_pool_fu_293_output_5_address0, grp_dut_dense_mlp_2_fu_319_input5_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_5_address0 <= grp_dut_dense_mlp_2_fu_319_input5_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_5_address0 <= grp_dut_max_pool_fu_293_output_5_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_5_address0 <= grp_dut_conv1_fu_256_input_5_address0;
        else 
            mem_conv1_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_5_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_5_ce0, grp_dut_max_pool_fu_293_output_5_ce0, grp_dut_dense_mlp_2_fu_319_input5_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_5_ce0 <= grp_dut_dense_mlp_2_fu_319_input5_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_5_ce0 <= grp_dut_max_pool_fu_293_output_5_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_5_ce0 <= grp_dut_conv1_fu_256_input_5_ce0;
        else 
            mem_conv1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_6_address0_assign_proc : process(grp_dut_conv1_fu_256_input_6_address0, grp_dut_max_pool_fu_293_output_6_address0, grp_dut_dense_mlp_2_fu_319_input6_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_6_address0 <= grp_dut_dense_mlp_2_fu_319_input6_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_6_address0 <= grp_dut_max_pool_fu_293_output_6_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_6_address0 <= grp_dut_conv1_fu_256_input_6_address0;
        else 
            mem_conv1_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_6_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_6_ce0, grp_dut_max_pool_fu_293_output_6_ce0, grp_dut_dense_mlp_2_fu_319_input6_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_6_ce0 <= grp_dut_dense_mlp_2_fu_319_input6_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_6_ce0 <= grp_dut_max_pool_fu_293_output_6_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_6_ce0 <= grp_dut_conv1_fu_256_input_6_ce0;
        else 
            mem_conv1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv1_7_address0_assign_proc : process(grp_dut_conv1_fu_256_input_7_address0, grp_dut_max_pool_fu_293_output_7_address0, grp_dut_dense_mlp_2_fu_319_input7_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_7_address0 <= grp_dut_dense_mlp_2_fu_319_input7_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_7_address0 <= grp_dut_max_pool_fu_293_output_7_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_7_address0 <= grp_dut_conv1_fu_256_input_7_address0;
        else 
            mem_conv1_7_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv1_7_ce0_assign_proc : process(grp_dut_conv1_fu_256_input_7_ce0, grp_dut_max_pool_fu_293_output_7_ce0, grp_dut_dense_mlp_2_fu_319_input7_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv1_7_ce0 <= grp_dut_dense_mlp_2_fu_319_input7_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv1_7_ce0 <= grp_dut_max_pool_fu_293_output_7_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv1_7_ce0 <= grp_dut_conv1_fu_256_input_7_ce0;
        else 
            mem_conv1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_address0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, grp_dut_conv1_fu_256_output_0_address0, grp_dut_conv1_1_fu_278_output_0_address0, grp_dut_max_pool_fu_293_input_0_address0, grp_dut_dense_mlp_2_fu_319_output_r_address0, grp_dut_dense_mlp_1_fu_336_input_r_address0, grp_dut_dense_mlp_fu_346_output_0_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            mem_conv2_0_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_address0 <= grp_dut_dense_mlp_fu_346_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_address0 <= grp_dut_dense_mlp_1_fu_336_input_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_address0 <= grp_dut_dense_mlp_2_fu_319_output_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_0_address0 <= grp_dut_max_pool_fu_293_input_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_0_address0 <= grp_dut_conv1_1_fu_278_output_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_address0 <= grp_dut_conv1_fu_256_output_0_address0;
        else 
            mem_conv2_0_address0 <= "XXXXXXXX";
        end if; 
    end process;

    mem_conv2_0_address1 <= ap_const_lv64_1(8 - 1 downto 0);

    mem_conv2_0_ce0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16, grp_dut_conv1_fu_256_output_0_ce0, grp_dut_conv1_1_fu_278_output_0_ce0, grp_dut_max_pool_fu_293_input_0_ce0, grp_dut_dense_mlp_2_fu_319_output_r_ce0, grp_dut_dense_mlp_1_fu_336_input_r_ce0, grp_dut_dense_mlp_fu_346_output_0_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            mem_conv2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_ce0 <= grp_dut_dense_mlp_fu_346_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            mem_conv2_0_ce0 <= grp_dut_dense_mlp_1_fu_336_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_ce0 <= grp_dut_dense_mlp_2_fu_319_output_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_0_ce0 <= grp_dut_max_pool_fu_293_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_0_ce0 <= grp_dut_conv1_1_fu_278_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_ce0 <= grp_dut_conv1_fu_256_output_0_ce0;
        else 
            mem_conv2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_ce1_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            mem_conv2_0_ce1 <= ap_const_logic_1;
        else 
            mem_conv2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_0_d0_assign_proc : process(grp_dut_conv1_fu_256_output_0_d0, grp_dut_conv1_1_fu_278_output_0_d0, grp_dut_dense_mlp_2_fu_319_output_r_d0, grp_dut_dense_mlp_fu_346_output_0_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_d0 <= grp_dut_dense_mlp_fu_346_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_d0 <= grp_dut_dense_mlp_2_fu_319_output_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_0_d0 <= grp_dut_conv1_1_fu_278_output_0_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_d0 <= grp_dut_conv1_fu_256_output_0_d0;
        else 
            mem_conv2_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_0_we0_assign_proc : process(grp_dut_conv1_fu_256_output_0_we0, grp_dut_conv1_1_fu_278_output_0_we0, grp_dut_dense_mlp_2_fu_319_output_r_we0, grp_dut_dense_mlp_fu_346_output_0_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            mem_conv2_0_we0 <= grp_dut_dense_mlp_fu_346_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            mem_conv2_0_we0 <= grp_dut_dense_mlp_2_fu_319_output_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_0_we0 <= grp_dut_conv1_1_fu_278_output_0_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_0_we0 <= grp_dut_conv1_fu_256_output_0_we0;
        else 
            mem_conv2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_address0_assign_proc : process(grp_dut_conv1_fu_256_output_1_address0, grp_dut_conv1_1_fu_278_output_1_address0, grp_dut_max_pool_fu_293_input_1_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_1_address0 <= grp_dut_max_pool_fu_293_input_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_1_address0 <= grp_dut_conv1_1_fu_278_output_1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_address0 <= grp_dut_conv1_fu_256_output_1_address0;
        else 
            mem_conv2_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_1_ce0_assign_proc : process(grp_dut_conv1_fu_256_output_1_ce0, grp_dut_conv1_1_fu_278_output_1_ce0, grp_dut_max_pool_fu_293_input_1_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_1_ce0 <= grp_dut_max_pool_fu_293_input_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_1_ce0 <= grp_dut_conv1_1_fu_278_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_ce0 <= grp_dut_conv1_fu_256_output_1_ce0;
        else 
            mem_conv2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_1_d0_assign_proc : process(grp_dut_conv1_fu_256_output_1_d0, grp_dut_conv1_1_fu_278_output_1_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_1_d0 <= grp_dut_conv1_1_fu_278_output_1_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_d0 <= grp_dut_conv1_fu_256_output_1_d0;
        else 
            mem_conv2_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_1_we0_assign_proc : process(grp_dut_conv1_fu_256_output_1_we0, grp_dut_conv1_1_fu_278_output_1_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_1_we0 <= grp_dut_conv1_1_fu_278_output_1_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_1_we0 <= grp_dut_conv1_fu_256_output_1_we0;
        else 
            mem_conv2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_2_address0_assign_proc : process(grp_dut_conv1_fu_256_output_2_address0, grp_dut_conv1_1_fu_278_output_2_address0, grp_dut_max_pool_fu_293_input_2_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_2_address0 <= grp_dut_max_pool_fu_293_input_2_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_2_address0 <= grp_dut_conv1_1_fu_278_output_2_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_2_address0 <= grp_dut_conv1_fu_256_output_2_address0;
        else 
            mem_conv2_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_2_ce0_assign_proc : process(grp_dut_conv1_fu_256_output_2_ce0, grp_dut_conv1_1_fu_278_output_2_ce0, grp_dut_max_pool_fu_293_input_2_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_2_ce0 <= grp_dut_max_pool_fu_293_input_2_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_2_ce0 <= grp_dut_conv1_1_fu_278_output_2_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_2_ce0 <= grp_dut_conv1_fu_256_output_2_ce0;
        else 
            mem_conv2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_2_d0_assign_proc : process(grp_dut_conv1_fu_256_output_2_d0, grp_dut_conv1_1_fu_278_output_2_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_2_d0 <= grp_dut_conv1_1_fu_278_output_2_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_2_d0 <= grp_dut_conv1_fu_256_output_2_d0;
        else 
            mem_conv2_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_2_we0_assign_proc : process(grp_dut_conv1_fu_256_output_2_we0, grp_dut_conv1_1_fu_278_output_2_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_2_we0 <= grp_dut_conv1_1_fu_278_output_2_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_2_we0 <= grp_dut_conv1_fu_256_output_2_we0;
        else 
            mem_conv2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_3_address0_assign_proc : process(grp_dut_conv1_fu_256_output_3_address0, grp_dut_conv1_1_fu_278_output_3_address0, grp_dut_max_pool_fu_293_input_3_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_3_address0 <= grp_dut_max_pool_fu_293_input_3_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_3_address0 <= grp_dut_conv1_1_fu_278_output_3_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_3_address0 <= grp_dut_conv1_fu_256_output_3_address0;
        else 
            mem_conv2_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_3_ce0_assign_proc : process(grp_dut_conv1_fu_256_output_3_ce0, grp_dut_conv1_1_fu_278_output_3_ce0, grp_dut_max_pool_fu_293_input_3_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_3_ce0 <= grp_dut_max_pool_fu_293_input_3_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_3_ce0 <= grp_dut_conv1_1_fu_278_output_3_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_3_ce0 <= grp_dut_conv1_fu_256_output_3_ce0;
        else 
            mem_conv2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_3_d0_assign_proc : process(grp_dut_conv1_fu_256_output_3_d0, grp_dut_conv1_1_fu_278_output_3_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_3_d0 <= grp_dut_conv1_1_fu_278_output_3_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_3_d0 <= grp_dut_conv1_fu_256_output_3_d0;
        else 
            mem_conv2_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_3_we0_assign_proc : process(grp_dut_conv1_fu_256_output_3_we0, grp_dut_conv1_1_fu_278_output_3_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_3_we0 <= grp_dut_conv1_1_fu_278_output_3_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_3_we0 <= grp_dut_conv1_fu_256_output_3_we0;
        else 
            mem_conv2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_4_address0_assign_proc : process(grp_dut_conv1_fu_256_output_4_address0, grp_dut_conv1_1_fu_278_output_4_address0, grp_dut_max_pool_fu_293_input_4_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_4_address0 <= grp_dut_max_pool_fu_293_input_4_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_4_address0 <= grp_dut_conv1_1_fu_278_output_4_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_4_address0 <= grp_dut_conv1_fu_256_output_4_address0;
        else 
            mem_conv2_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_4_ce0_assign_proc : process(grp_dut_conv1_fu_256_output_4_ce0, grp_dut_conv1_1_fu_278_output_4_ce0, grp_dut_max_pool_fu_293_input_4_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_4_ce0 <= grp_dut_max_pool_fu_293_input_4_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_4_ce0 <= grp_dut_conv1_1_fu_278_output_4_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_4_ce0 <= grp_dut_conv1_fu_256_output_4_ce0;
        else 
            mem_conv2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_4_d0_assign_proc : process(grp_dut_conv1_fu_256_output_4_d0, grp_dut_conv1_1_fu_278_output_4_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_4_d0 <= grp_dut_conv1_1_fu_278_output_4_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_4_d0 <= grp_dut_conv1_fu_256_output_4_d0;
        else 
            mem_conv2_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_4_we0_assign_proc : process(grp_dut_conv1_fu_256_output_4_we0, grp_dut_conv1_1_fu_278_output_4_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_4_we0 <= grp_dut_conv1_1_fu_278_output_4_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_4_we0 <= grp_dut_conv1_fu_256_output_4_we0;
        else 
            mem_conv2_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_5_address0_assign_proc : process(grp_dut_conv1_fu_256_output_5_address0, grp_dut_conv1_1_fu_278_output_5_address0, grp_dut_max_pool_fu_293_input_5_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_5_address0 <= grp_dut_max_pool_fu_293_input_5_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_5_address0 <= grp_dut_conv1_1_fu_278_output_5_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_5_address0 <= grp_dut_conv1_fu_256_output_5_address0;
        else 
            mem_conv2_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_5_ce0_assign_proc : process(grp_dut_conv1_fu_256_output_5_ce0, grp_dut_conv1_1_fu_278_output_5_ce0, grp_dut_max_pool_fu_293_input_5_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_5_ce0 <= grp_dut_max_pool_fu_293_input_5_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_5_ce0 <= grp_dut_conv1_1_fu_278_output_5_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_5_ce0 <= grp_dut_conv1_fu_256_output_5_ce0;
        else 
            mem_conv2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_5_d0_assign_proc : process(grp_dut_conv1_fu_256_output_5_d0, grp_dut_conv1_1_fu_278_output_5_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_5_d0 <= grp_dut_conv1_1_fu_278_output_5_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_5_d0 <= grp_dut_conv1_fu_256_output_5_d0;
        else 
            mem_conv2_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_5_we0_assign_proc : process(grp_dut_conv1_fu_256_output_5_we0, grp_dut_conv1_1_fu_278_output_5_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_5_we0 <= grp_dut_conv1_1_fu_278_output_5_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_5_we0 <= grp_dut_conv1_fu_256_output_5_we0;
        else 
            mem_conv2_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_6_address0_assign_proc : process(grp_dut_conv1_fu_256_output_6_address0, grp_dut_conv1_1_fu_278_output_6_address0, grp_dut_max_pool_fu_293_input_6_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_6_address0 <= grp_dut_max_pool_fu_293_input_6_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_6_address0 <= grp_dut_conv1_1_fu_278_output_6_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_6_address0 <= grp_dut_conv1_fu_256_output_6_address0;
        else 
            mem_conv2_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_6_ce0_assign_proc : process(grp_dut_conv1_fu_256_output_6_ce0, grp_dut_conv1_1_fu_278_output_6_ce0, grp_dut_max_pool_fu_293_input_6_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_6_ce0 <= grp_dut_max_pool_fu_293_input_6_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_6_ce0 <= grp_dut_conv1_1_fu_278_output_6_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_6_ce0 <= grp_dut_conv1_fu_256_output_6_ce0;
        else 
            mem_conv2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_6_d0_assign_proc : process(grp_dut_conv1_fu_256_output_6_d0, grp_dut_conv1_1_fu_278_output_6_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_6_d0 <= grp_dut_conv1_1_fu_278_output_6_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_6_d0 <= grp_dut_conv1_fu_256_output_6_d0;
        else 
            mem_conv2_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_6_we0_assign_proc : process(grp_dut_conv1_fu_256_output_6_we0, grp_dut_conv1_1_fu_278_output_6_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_6_we0 <= grp_dut_conv1_1_fu_278_output_6_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_6_we0 <= grp_dut_conv1_fu_256_output_6_we0;
        else 
            mem_conv2_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_7_address0_assign_proc : process(grp_dut_conv1_fu_256_output_7_address0, grp_dut_conv1_1_fu_278_output_7_address0, grp_dut_max_pool_fu_293_input_7_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_7_address0 <= grp_dut_max_pool_fu_293_input_7_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_7_address0 <= grp_dut_conv1_1_fu_278_output_7_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_7_address0 <= grp_dut_conv1_fu_256_output_7_address0;
        else 
            mem_conv2_7_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mem_conv2_7_ce0_assign_proc : process(grp_dut_conv1_fu_256_output_7_ce0, grp_dut_conv1_1_fu_278_output_7_ce0, grp_dut_max_pool_fu_293_input_7_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            mem_conv2_7_ce0 <= grp_dut_max_pool_fu_293_input_7_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_7_ce0 <= grp_dut_conv1_1_fu_278_output_7_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_7_ce0 <= grp_dut_conv1_fu_256_output_7_ce0;
        else 
            mem_conv2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_conv2_7_d0_assign_proc : process(grp_dut_conv1_fu_256_output_7_d0, grp_dut_conv1_1_fu_278_output_7_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_7_d0 <= grp_dut_conv1_1_fu_278_output_7_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_7_d0 <= grp_dut_conv1_fu_256_output_7_d0;
        else 
            mem_conv2_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_conv2_7_we0_assign_proc : process(grp_dut_conv1_fu_256_output_7_we0, grp_dut_conv1_1_fu_278_output_7_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mem_conv2_7_we0 <= grp_dut_conv1_1_fu_278_output_7_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            mem_conv2_7_we0 <= grp_dut_conv1_fu_256_output_7_we0;
        else 
            mem_conv2_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    next_mul_fu_390_p2 <= std_logic_vector(unsigned(phi_mul_reg_234) + unsigned(ap_const_lv25_1BDE));
    next_urem_fu_370_p2 <= std_logic_vector(unsigned(phi_urem_reg_245) + unsigned(ap_const_lv12_1));
    notlhs5_fu_599_p2 <= "0" when (tmp_s_fu_573_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_587_p2 <= "0" when (tmp_fu_559_p4 = ap_const_lv8_FF) else "1";
    notrhs6_fu_605_p2 <= "1" when (tmp_75_fu_583_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_593_p2 <= "1" when (tmp_74_fu_569_p1 = ap_const_lv23_0) else "0";
    p_demorgan_fu_520_p2 <= (tmp_92_fu_508_p2 and tmp_93_fu_514_p2);

    strm_in_V_V_blk_n_assign_proc : process(strm_in_V_V_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_358_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_358_p2 = ap_const_lv1_0))) then 
            strm_in_V_V_blk_n <= strm_in_V_V_empty_n;
        else 
            strm_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_358_p2, ap_sig_74)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_358_p2 = ap_const_lv1_0) and not(ap_sig_74))) then 
            strm_in_V_V_read <= ap_const_logic_1;
        else 
            strm_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_V_blk_n_assign_proc : process(strm_out_V_V_full_n, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            strm_out_V_V_blk_n <= strm_out_V_V_full_n;
        else 
            strm_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_V_din <= std_logic_vector(resize(unsigned(tmp_36_reg_729),32));

    strm_out_V_V_write_assign_proc : process(strm_out_V_V_full_n, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((strm_out_V_V_full_n = ap_const_logic_0)))) then 
            strm_out_V_V_write <= ap_const_logic_1;
        else 
            strm_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_19_fu_401_p4 <= phi_mul_reg_234(24 downto 23);
    tmp_26_fu_396_p1 <= std_logic_vector(resize(unsigned(phi_urem_reg_245),64));
    tmp_27_fu_411_p3 <= (tmp_19_fu_401_p4 & ap_const_lv5_0);
    tmp_28_fu_419_p2 <= (tmp_27_fu_411_p3 or ap_const_lv7_1F);
    tmp_32_fu_619_p2 <= (notrhs_reg_714 or notlhs_reg_709);
    tmp_33_fu_623_p2 <= (notrhs6_reg_724 or notlhs5_reg_719);
    tmp_34_fu_627_p2 <= (tmp_32_fu_619_p2 and tmp_33_fu_623_p2);
    tmp_35_fu_354_p0 <= tmp_72_reg_699;
    tmp_35_fu_354_p1 <= tmp_73_reg_704;
    tmp_36_fu_633_p2 <= (tmp_34_fu_627_p2 and tmp_35_fu_354_p2);
    tmp_72_fu_551_p1 <= mem_conv2_0_q0(32 - 1 downto 0);
    tmp_73_fu_555_p1 <= mem_conv2_0_q1(32 - 1 downto 0);
    tmp_74_fu_569_p1 <= mem_conv2_0_q0(23 - 1 downto 0);
    tmp_75_fu_583_p1 <= mem_conv2_0_q1(23 - 1 downto 0);
    tmp_76_fu_376_p2 <= "1" when (unsigned(next_urem_fu_370_p2) < unsigned(ap_const_lv12_498)) else "0";
    tmp_77_fu_425_p2 <= "1" when (unsigned(tmp_27_fu_411_p3) > unsigned(tmp_28_fu_419_p2)) else "0";
    tmp_78_fu_431_p1 <= std_logic_vector(resize(unsigned(tmp_27_reg_671),8));
    tmp_79_fu_434_p1 <= std_logic_vector(resize(unsigned(tmp_28_reg_676),8));
    tmp_80_fu_437_p1 <= std_logic_vector(resize(unsigned(tmp_V_2_reg_656),128));
    tmp_81_fu_440_p2 <= (tmp_78_fu_431_p1 xor ap_const_lv8_7F);
    tmp_82_fu_446_p3 <= 
        tmp_78_fu_431_p1 when (tmp_77_reg_681(0) = '1') else 
        tmp_79_fu_434_p1;
    tmp_83_fu_453_p3 <= 
        tmp_79_fu_434_p1 when (tmp_77_reg_681(0) = '1') else 
        tmp_78_fu_431_p1;
    tmp_84_fu_460_p3 <= 
        tmp_81_fu_440_p2 when (tmp_77_reg_681(0) = '1') else 
        tmp_78_fu_431_p1;
    tmp_85_fu_467_p2 <= (tmp_82_fu_446_p3 xor ap_const_lv8_7F);
    tmp_86_fu_473_p1 <= std_logic_vector(resize(unsigned(tmp_84_fu_460_p3),128));
    tmp_87_fu_477_p1 <= std_logic_vector(resize(unsigned(tmp_83_fu_453_p3),128));
    tmp_88_fu_481_p1 <= std_logic_vector(resize(unsigned(tmp_85_fu_467_p2),128));
    tmp_89_fu_485_p2 <= std_logic_vector(shift_left(unsigned(tmp_80_fu_437_p1),to_integer(unsigned('0' & tmp_86_fu_473_p1(31-1 downto 0)))));
    
    tmp_90_fu_491_p4_proc : process(tmp_89_fu_485_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_90_fu_491_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_7F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := tmp_89_fu_485_p2;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_7F(7-1 downto 0)));
            for tmp_90_fu_491_p4_i in 0 to 128-1 loop
                v0_cpy(tmp_90_fu_491_p4_i) := tmp_89_fu_485_p2(128-1-tmp_90_fu_491_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(128-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_90_fu_491_p4 <= resvalue(128-1 downto 0);
    end process;

    tmp_91_fu_501_p3 <= 
        tmp_90_fu_491_p4 when (tmp_77_reg_681(0) = '1') else 
        tmp_89_fu_485_p2;
    tmp_92_fu_508_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv128_lc_1),to_integer(unsigned('0' & tmp_87_fu_477_p1(31-1 downto 0)))));
    tmp_93_fu_514_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv128_lc_1),to_integer(unsigned('0' & tmp_88_fu_481_p1(31-1 downto 0)))));
    tmp_94_fu_526_p2 <= (p_demorgan_fu_520_p2 xor ap_const_lv128_lc_1);
    tmp_95_fu_532_p2 <= (input_q0 and tmp_94_fu_526_p2);
    tmp_96_fu_538_p2 <= (tmp_91_fu_501_p3 and p_demorgan_fu_520_p2);
    tmp_fu_559_p4 <= mem_conv2_0_q0(30 downto 23);
    tmp_s_fu_573_p4 <= mem_conv2_0_q1(30 downto 23);
end behav;
