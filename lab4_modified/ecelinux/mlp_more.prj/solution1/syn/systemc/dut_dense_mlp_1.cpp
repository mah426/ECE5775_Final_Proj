// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut_dense_mlp_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut_dense_mlp_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut_dense_mlp_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<20> dut_dense_mlp_1::ap_ST_st1_fsm_0 = "1";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st2_fsm_1 = "10";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st3_fsm_2 = "100";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st4_fsm_3 = "1000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st5_fsm_4 = "10000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st6_fsm_5 = "100000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<20> dut_dense_mlp_1::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut_dense_mlp_1::ap_const_lv1_1 = "1";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_1 = "1";
const sc_lv<1> dut_dense_mlp_1::ap_const_lv1_0 = "0";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_2 = "10";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_3 = "11";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_6 = "110";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_B = "1011";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_C = "1100";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_11 = "10001";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_12 = "10010";
const sc_lv<7> dut_dense_mlp_1::ap_const_lv7_0 = "0000000";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_13 = "10011";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_7 = "111";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_D = "1101";
const sc_lv<7> dut_dense_mlp_1::ap_const_lv7_54 = "1010100";
const sc_lv<7> dut_dense_mlp_1::ap_const_lv7_1 = "1";
const sc_lv<3> dut_dense_mlp_1::ap_const_lv3_0 = "000";
const sc_lv<7> dut_dense_mlp_1::ap_const_lv7_78 = "1111000";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_17 = "10111";
const sc_lv<32> dut_dense_mlp_1::ap_const_lv32_1E = "11110";
const sc_lv<8> dut_dense_mlp_1::ap_const_lv8_FF = "11111111";
const sc_lv<23> dut_dense_mlp_1::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> dut_dense_mlp_1::ap_const_lv9_0 = "000000000";
const sc_lv<9> dut_dense_mlp_1::ap_const_lv9_1F = "11111";
const sc_lv<5> dut_dense_mlp_1::ap_const_lv5_2 = "10";

dut_dense_mlp_1::dut_dense_mlp_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fc2_weight_U = new dut_dense_mlp_1_fc2_weight("fc2_weight_U");
    fc2_weight_U->clk(ap_clk);
    fc2_weight_U->reset(ap_rst);
    fc2_weight_U->address0(fc2_weight_address0);
    fc2_weight_U->ce0(fc2_weight_ce0);
    fc2_weight_U->q0(fc2_weight_q0);
    fc2_bias_U = new dut_dense_mlp_1_fc2_bias("fc2_bias_U");
    fc2_bias_U->clk(ap_clk);
    fc2_bias_U->reset(ap_rst);
    fc2_bias_U->address0(fc2_bias_address0);
    fc2_bias_U->ce0(fc2_bias_ce0);
    fc2_bias_U->q0(fc2_bias_q0);
    dut_fadd_32ns_32ns_32_5_full_dsp_U91 = new dut_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("dut_fadd_32ns_32ns_32_5_full_dsp_U91");
    dut_fadd_32ns_32ns_32_5_full_dsp_U91->clk(ap_clk);
    dut_fadd_32ns_32ns_32_5_full_dsp_U91->reset(ap_rst);
    dut_fadd_32ns_32ns_32_5_full_dsp_U91->din0(sum_reg_119);
    dut_fadd_32ns_32ns_32_5_full_dsp_U91->din1(grp_fu_142_p1);
    dut_fadd_32ns_32ns_32_5_full_dsp_U91->ce(ap_var_for_const0);
    dut_fadd_32ns_32ns_32_5_full_dsp_U91->dout(grp_fu_142_p2);
    dut_fmul_32ns_32ns_32_4_max_dsp_U92 = new dut_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("dut_fmul_32ns_32ns_32_4_max_dsp_U92");
    dut_fmul_32ns_32ns_32_4_max_dsp_U92->clk(ap_clk);
    dut_fmul_32ns_32ns_32_4_max_dsp_U92->reset(ap_rst);
    dut_fmul_32ns_32ns_32_4_max_dsp_U92->din0(grp_fu_147_p0);
    dut_fmul_32ns_32ns_32_4_max_dsp_U92->din1(fc2_weight_q0);
    dut_fmul_32ns_32ns_32_4_max_dsp_U92->ce(ap_var_for_const0);
    dut_fmul_32ns_32ns_32_4_max_dsp_U92->dout(grp_fu_147_p2);
    dut_fcmp_32ns_32ns_1_1_U93 = new dut_fcmp_32ns_32ns_1_1<1,1,32,32,1>("dut_fcmp_32ns_32ns_1_1_U93");
    dut_fcmp_32ns_32ns_1_1_U93->din0(biased_reg_376);
    dut_fcmp_32ns_32ns_1_1_U93->din1(ap_var_for_const1);
    dut_fcmp_32ns_32ns_1_1_U93->opcode(ap_var_for_const2);
    dut_fcmp_32ns_32ns_1_1_U93->dout(tmp_44_fu_152_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond2_fu_157_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond2_fu_157_p2 );

    SC_METHOD(thread_ap_sig_114);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_141);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_149);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_158);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_171);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_190);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_197);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_133 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_141 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_197 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_149 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_158 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_37 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_171 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_77 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_92 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_114 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_124 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_190 );

    SC_METHOD(thread_biased_to_int_fu_249_p1);
    sensitive << ( biased_reg_376 );

    SC_METHOD(thread_exitcond2_fu_157_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( n_reg_107 );

    SC_METHOD(thread_exitcond_fu_203_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( m_reg_131 );

    SC_METHOD(thread_fc2_bias_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_15_fu_234_p1 );

    SC_METHOD(thread_fc2_bias_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_fc2_weight_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_13_fu_229_p1 );

    SC_METHOD(thread_fc2_weight_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_grp_fu_142_p1);
    sensitive << ( tmp_14_reg_361 );
    sensitive << ( fc2_bias_load_reg_371 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );

    SC_METHOD(thread_grp_fu_147_p0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_103_fu_240_p1 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex7_fu_224_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_m_2_fu_209_p2);
    sensitive << ( m_reg_131 );

    SC_METHOD(thread_m_cast5_fu_199_p1);
    sensitive << ( m_reg_131 );

    SC_METHOD(thread_n_1_fu_163_p2);
    sensitive << ( n_reg_107 );

    SC_METHOD(thread_newIndex7_fu_224_p1);
    sensitive << ( m_reg_131 );

    SC_METHOD(thread_notlhs_fu_266_p2);
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( tmp_fu_252_p4 );

    SC_METHOD(thread_notrhs_fu_272_p2);
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( tmp_102_fu_262_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_346 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( output_r_q0 );
    sensitive << ( tmp_41_reg_382 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_p_shl1_cast_fu_189_p1);
    sensitive << ( p_shl1_fu_181_p3 );

    SC_METHOD(thread_p_shl1_fu_181_p3);
    sensitive << ( n_reg_107 );

    SC_METHOD(thread_p_shl_cast_fu_177_p1);
    sensitive << ( p_shl_fu_169_p3 );

    SC_METHOD(thread_p_shl_fu_169_p3);
    sensitive << ( n_reg_107 );

    SC_METHOD(thread_tmp_102_fu_262_p1);
    sensitive << ( biased_to_int_fu_249_p1 );

    SC_METHOD(thread_tmp_103_fu_240_p1);
    sensitive << ( input_r_q0 );

    SC_METHOD(thread_tmp_13_fu_229_p1);
    sensitive << ( w_index_cast_fu_220_p1 );

    SC_METHOD(thread_tmp_15_fu_234_p1);
    sensitive << ( n_reg_107 );

    SC_METHOD(thread_tmp_41_fu_290_p3);
    sensitive << ( biased_to_int_fu_249_p1 );
    sensitive << ( tmp_46_fu_284_p2 );

    SC_METHOD(thread_tmp_43_fu_278_p2);
    sensitive << ( notrhs_fu_272_p2 );
    sensitive << ( notlhs_fu_266_p2 );

    SC_METHOD(thread_tmp_46_fu_284_p2);
    sensitive << ( tmp_43_fu_278_p2 );
    sensitive << ( tmp_44_fu_152_p2 );

    SC_METHOD(thread_tmp_fu_252_p4);
    sensitive << ( biased_to_int_fu_249_p1 );

    SC_METHOD(thread_tmp_s_fu_193_p2);
    sensitive << ( p_shl_cast_fu_177_p1 );
    sensitive << ( p_shl1_cast_fu_189_p1 );

    SC_METHOD(thread_w_index_cast_fu_220_p1);
    sensitive << ( w_index_fu_215_p2 );

    SC_METHOD(thread_w_index_fu_215_p2);
    sensitive << ( tmp_s_reg_318 );
    sensitive << ( m_cast5_fu_199_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond2_fu_157_p2 );
    sensitive << ( exitcond_fu_203_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_dense_mlp_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_37, "ap_sig_37");
    sc_trace(mVcdFile, fc2_weight_address0, "fc2_weight_address0");
    sc_trace(mVcdFile, fc2_weight_ce0, "fc2_weight_ce0");
    sc_trace(mVcdFile, fc2_weight_q0, "fc2_weight_q0");
    sc_trace(mVcdFile, fc2_bias_address0, "fc2_bias_address0");
    sc_trace(mVcdFile, fc2_bias_ce0, "fc2_bias_ce0");
    sc_trace(mVcdFile, fc2_bias_q0, "fc2_bias_q0");
    sc_trace(mVcdFile, n_1_fu_163_p2, "n_1_fu_163_p2");
    sc_trace(mVcdFile, n_1_reg_313, "n_1_reg_313");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_77, "ap_sig_77");
    sc_trace(mVcdFile, tmp_s_fu_193_p2, "tmp_s_fu_193_p2");
    sc_trace(mVcdFile, tmp_s_reg_318, "tmp_s_reg_318");
    sc_trace(mVcdFile, exitcond2_fu_157_p2, "exitcond2_fu_157_p2");
    sc_trace(mVcdFile, m_2_fu_209_p2, "m_2_fu_209_p2");
    sc_trace(mVcdFile, m_2_reg_326, "m_2_reg_326");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_92, "ap_sig_92");
    sc_trace(mVcdFile, exitcond_fu_203_p2, "exitcond_fu_203_p2");
    sc_trace(mVcdFile, output_addr_reg_346, "output_addr_reg_346");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_114, "ap_sig_114");
    sc_trace(mVcdFile, grp_fu_147_p2, "grp_fu_147_p2");
    sc_trace(mVcdFile, tmp_14_reg_361, "tmp_14_reg_361");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_124, "ap_sig_124");
    sc_trace(mVcdFile, grp_fu_142_p2, "grp_fu_142_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_133, "ap_sig_133");
    sc_trace(mVcdFile, fc2_bias_load_reg_371, "fc2_bias_load_reg_371");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_141, "ap_sig_141");
    sc_trace(mVcdFile, biased_reg_376, "biased_reg_376");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_149, "ap_sig_149");
    sc_trace(mVcdFile, tmp_41_fu_290_p3, "tmp_41_fu_290_p3");
    sc_trace(mVcdFile, tmp_41_reg_382, "tmp_41_reg_382");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_158, "ap_sig_158");
    sc_trace(mVcdFile, n_reg_107, "n_reg_107");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_171, "ap_sig_171");
    sc_trace(mVcdFile, sum_reg_119, "sum_reg_119");
    sc_trace(mVcdFile, m_reg_131, "m_reg_131");
    sc_trace(mVcdFile, newIndex7_fu_224_p1, "newIndex7_fu_224_p1");
    sc_trace(mVcdFile, tmp_13_fu_229_p1, "tmp_13_fu_229_p1");
    sc_trace(mVcdFile, tmp_15_fu_234_p1, "tmp_15_fu_234_p1");
    sc_trace(mVcdFile, grp_fu_142_p1, "grp_fu_142_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_190, "ap_sig_190");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_197, "ap_sig_197");
    sc_trace(mVcdFile, grp_fu_147_p0, "grp_fu_147_p0");
    sc_trace(mVcdFile, p_shl_fu_169_p3, "p_shl_fu_169_p3");
    sc_trace(mVcdFile, p_shl1_fu_181_p3, "p_shl1_fu_181_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_177_p1, "p_shl_cast_fu_177_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_189_p1, "p_shl1_cast_fu_189_p1");
    sc_trace(mVcdFile, m_cast5_fu_199_p1, "m_cast5_fu_199_p1");
    sc_trace(mVcdFile, w_index_fu_215_p2, "w_index_fu_215_p2");
    sc_trace(mVcdFile, w_index_cast_fu_220_p1, "w_index_cast_fu_220_p1");
    sc_trace(mVcdFile, tmp_103_fu_240_p1, "tmp_103_fu_240_p1");
    sc_trace(mVcdFile, biased_to_int_fu_249_p1, "biased_to_int_fu_249_p1");
    sc_trace(mVcdFile, tmp_fu_252_p4, "tmp_fu_252_p4");
    sc_trace(mVcdFile, tmp_102_fu_262_p1, "tmp_102_fu_262_p1");
    sc_trace(mVcdFile, notrhs_fu_272_p2, "notrhs_fu_272_p2");
    sc_trace(mVcdFile, notlhs_fu_266_p2, "notlhs_fu_266_p2");
    sc_trace(mVcdFile, tmp_43_fu_278_p2, "tmp_43_fu_278_p2");
    sc_trace(mVcdFile, tmp_44_fu_152_p2, "tmp_44_fu_152_p2");
    sc_trace(mVcdFile, tmp_46_fu_284_p2, "tmp_46_fu_284_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dut_dense_mlp_1::~dut_dense_mlp_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fc2_weight_U;
    delete fc2_bias_U;
    delete dut_fadd_32ns_32ns_32_5_full_dsp_U91;
    delete dut_fmul_32ns_32ns_32_4_max_dsp_U92;
    delete dut_fcmp_32ns_32ns_1_1_U93;
}

void dut_dense_mlp_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dut_dense_mlp_1::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void dut_dense_mlp_1::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void dut_dense_mlp_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        m_reg_131 = m_2_reg_326.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_157_p2.read(), ap_const_lv1_0))) {
        m_reg_131 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        n_reg_107 = n_1_reg_313.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        n_reg_107 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        sum_reg_119 = grp_fu_142_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_157_p2.read(), ap_const_lv1_0))) {
        sum_reg_119 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        biased_reg_376 = grp_fu_142_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        fc2_bias_load_reg_371 = fc2_bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        m_2_reg_326 = m_2_fu_209_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        n_1_reg_313 = n_1_fu_163_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_203_p2.read()))) {
        output_addr_reg_346 =  (sc_lv<8>) (tmp_15_fu_234_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        tmp_14_reg_361 = grp_fu_147_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        tmp_41_reg_382 = tmp_41_fu_290_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond2_fu_157_p2.read(), ap_const_lv1_0))) {
        tmp_s_reg_318 = tmp_s_fu_193_p2.read();
    }
}

void dut_dense_mlp_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(exitcond2_fu_157_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond2_fu_157_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_114() {
    ap_sig_114 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void dut_dense_mlp_1::thread_ap_sig_124() {
    ap_sig_124 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void dut_dense_mlp_1::thread_ap_sig_133() {
    ap_sig_133 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void dut_dense_mlp_1::thread_ap_sig_141() {
    ap_sig_141 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void dut_dense_mlp_1::thread_ap_sig_149() {
    ap_sig_149 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void dut_dense_mlp_1::thread_ap_sig_158() {
    ap_sig_158 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void dut_dense_mlp_1::thread_ap_sig_171() {
    ap_sig_171 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void dut_dense_mlp_1::thread_ap_sig_190() {
    ap_sig_190 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void dut_dense_mlp_1::thread_ap_sig_197() {
    ap_sig_197 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void dut_dense_mlp_1::thread_ap_sig_37() {
    ap_sig_37 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut_dense_mlp_1::thread_ap_sig_77() {
    ap_sig_77 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut_dense_mlp_1::thread_ap_sig_92() {
    ap_sig_92 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_133.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_141.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_197.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_149.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_158.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_37.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_171.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_77.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_92.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_114.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_124.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_190.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_biased_to_int_fu_249_p1() {
    biased_to_int_fu_249_p1 = biased_reg_376.read();
}

void dut_dense_mlp_1::thread_exitcond2_fu_157_p2() {
    exitcond2_fu_157_p2 = (!n_reg_107.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_107.read() == ap_const_lv7_54);
}

void dut_dense_mlp_1::thread_exitcond_fu_203_p2() {
    exitcond_fu_203_p2 = (!m_reg_131.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_131.read() == ap_const_lv7_78);
}

void dut_dense_mlp_1::thread_fc2_bias_address0() {
    fc2_bias_address0 =  (sc_lv<7>) (tmp_15_fu_234_p1.read());
}

void dut_dense_mlp_1::thread_fc2_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        fc2_bias_ce0 = ap_const_logic_1;
    } else {
        fc2_bias_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_fc2_weight_address0() {
    fc2_weight_address0 =  (sc_lv<14>) (tmp_13_fu_229_p1.read());
}

void dut_dense_mlp_1::thread_fc2_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        fc2_weight_ce0 = ap_const_logic_1;
    } else {
        fc2_weight_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_grp_fu_142_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_fu_142_p1 = fc2_bias_load_reg_371.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_fu_142_p1 = tmp_14_reg_361.read();
    } else {
        grp_fu_142_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut_dense_mlp_1::thread_grp_fu_147_p0() {
    grp_fu_147_p0 = tmp_103_fu_240_p1.read();
}

void dut_dense_mlp_1::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<8>) (newIndex7_fu_224_p1.read());
}

void dut_dense_mlp_1::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_m_2_fu_209_p2() {
    m_2_fu_209_p2 = (!m_reg_131.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(m_reg_131.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void dut_dense_mlp_1::thread_m_cast5_fu_199_p1() {
    m_cast5_fu_199_p1 = esl_zext<15,7>(m_reg_131.read());
}

void dut_dense_mlp_1::thread_n_1_fu_163_p2() {
    n_1_fu_163_p2 = (!n_reg_107.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(n_reg_107.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void dut_dense_mlp_1::thread_newIndex7_fu_224_p1() {
    newIndex7_fu_224_p1 = esl_zext<64,7>(m_reg_131.read());
}

void dut_dense_mlp_1::thread_notlhs_fu_266_p2() {
    notlhs_fu_266_p2 = (!tmp_fu_252_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_252_p4.read() != ap_const_lv8_FF);
}

void dut_dense_mlp_1::thread_notrhs_fu_272_p2() {
    notrhs_fu_272_p2 = (!tmp_102_fu_262_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_102_fu_262_p1.read() == ap_const_lv23_0);
}

void dut_dense_mlp_1::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_346.read();
}

void dut_dense_mlp_1::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_output_r_d0() {
    output_r_d0 = esl_partset<128,128,32,9,9>(output_r_q0.read(), tmp_41_reg_382.read(), ap_const_lv9_0, ap_const_lv9_1F);
}

void dut_dense_mlp_1::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_1::thread_p_shl1_cast_fu_189_p1() {
    p_shl1_cast_fu_189_p1 = esl_zext<15,10>(p_shl1_fu_181_p3.read());
}

void dut_dense_mlp_1::thread_p_shl1_fu_181_p3() {
    p_shl1_fu_181_p3 = esl_concat<7,3>(n_reg_107.read(), ap_const_lv3_0);
}

void dut_dense_mlp_1::thread_p_shl_cast_fu_177_p1() {
    p_shl_cast_fu_177_p1 = esl_zext<15,14>(p_shl_fu_169_p3.read());
}

void dut_dense_mlp_1::thread_p_shl_fu_169_p3() {
    p_shl_fu_169_p3 = esl_concat<7,7>(n_reg_107.read(), ap_const_lv7_0);
}

void dut_dense_mlp_1::thread_tmp_102_fu_262_p1() {
    tmp_102_fu_262_p1 = biased_to_int_fu_249_p1.read().range(23-1, 0);
}

void dut_dense_mlp_1::thread_tmp_103_fu_240_p1() {
    tmp_103_fu_240_p1 = input_r_q0.read().range(32-1, 0);
}

void dut_dense_mlp_1::thread_tmp_13_fu_229_p1() {
    tmp_13_fu_229_p1 = esl_zext<64,32>(w_index_cast_fu_220_p1.read());
}

void dut_dense_mlp_1::thread_tmp_15_fu_234_p1() {
    tmp_15_fu_234_p1 = esl_zext<64,7>(n_reg_107.read());
}

void dut_dense_mlp_1::thread_tmp_41_fu_290_p3() {
    tmp_41_fu_290_p3 = (!tmp_46_fu_284_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_46_fu_284_p2.read()[0].to_bool())? biased_to_int_fu_249_p1.read(): ap_const_lv32_0);
}

void dut_dense_mlp_1::thread_tmp_43_fu_278_p2() {
    tmp_43_fu_278_p2 = (notrhs_fu_272_p2.read() | notlhs_fu_266_p2.read());
}

void dut_dense_mlp_1::thread_tmp_46_fu_284_p2() {
    tmp_46_fu_284_p2 = (tmp_43_fu_278_p2.read() & tmp_44_fu_152_p2.read());
}

void dut_dense_mlp_1::thread_tmp_fu_252_p4() {
    tmp_fu_252_p4 = biased_to_int_fu_249_p1.read().range(30, 23);
}

void dut_dense_mlp_1::thread_tmp_s_fu_193_p2() {
    tmp_s_fu_193_p2 = (!p_shl_cast_fu_177_p1.read().is_01() || !p_shl1_cast_fu_189_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(p_shl_cast_fu_177_p1.read()) - sc_biguint<15>(p_shl1_cast_fu_189_p1.read()));
}

void dut_dense_mlp_1::thread_w_index_cast_fu_220_p1() {
    w_index_cast_fu_220_p1 = esl_sext<32,15>(w_index_fu_215_p2.read());
}

void dut_dense_mlp_1::thread_w_index_fu_215_p2() {
    w_index_fu_215_p2 = (!tmp_s_reg_318.read().is_01() || !m_cast5_fu_199_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_s_reg_318.read()) + sc_biguint<15>(m_cast5_fu_199_p1.read()));
}

void dut_dense_mlp_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond2_fu_157_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_203_p2.read())) {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

