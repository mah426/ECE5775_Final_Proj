// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut_dense_mlp_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut_dense_mlp_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut_dense_mlp_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> dut_dense_mlp_2::ap_ST_st1_fsm_0 = "1";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st2_fsm_1 = "10";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st3_fsm_2 = "100";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st4_fsm_3 = "1000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st5_fsm_4 = "10000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st6_fsm_5 = "100000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<21> dut_dense_mlp_2::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut_dense_mlp_2::ap_const_lv1_1 = "1";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_1 = "1";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_2 = "10";
const sc_lv<1> dut_dense_mlp_2::ap_const_lv1_0 = "0";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_3 = "11";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_4 = "100";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_7 = "111";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_C = "1100";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_D = "1101";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_12 = "10010";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_13 = "10011";
const sc_lv<7> dut_dense_mlp_2::ap_const_lv7_0 = "0000000";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_14 = "10100";
const sc_lv<16> dut_dense_mlp_2::ap_const_lv16_0 = "0000000000000000";
const sc_lv<9> dut_dense_mlp_2::ap_const_lv9_0 = "000000000";
const sc_lv<19> dut_dense_mlp_2::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_8 = "1000";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_E = "1110";
const sc_lv<16> dut_dense_mlp_2::ap_const_lv16_190 = "110010000";
const sc_lv<7> dut_dense_mlp_2::ap_const_lv7_78 = "1111000";
const sc_lv<7> dut_dense_mlp_2::ap_const_lv7_1 = "1";
const sc_lv<9> dut_dense_mlp_2::ap_const_lv9_190 = "110010000";
const sc_lv<9> dut_dense_mlp_2::ap_const_lv9_1 = "1";
const sc_lv<9> dut_dense_mlp_2::ap_const_lv9_93 = "10010011";
const sc_lv<19> dut_dense_mlp_2::ap_const_lv19_37C = "1101111100";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_11 = "10001";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_17 = "10111";
const sc_lv<32> dut_dense_mlp_2::ap_const_lv32_1E = "11110";
const sc_lv<8> dut_dense_mlp_2::ap_const_lv8_FF = "11111111";
const sc_lv<23> dut_dense_mlp_2::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> dut_dense_mlp_2::ap_const_lv9_1F = "11111";
const sc_lv<5> dut_dense_mlp_2::ap_const_lv5_2 = "10";

dut_dense_mlp_2::dut_dense_mlp_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fc1_weight_U = new dut_dense_mlp_2_fc1_weight("fc1_weight_U");
    fc1_weight_U->clk(ap_clk);
    fc1_weight_U->reset(ap_rst);
    fc1_weight_U->address0(fc1_weight_address0);
    fc1_weight_U->ce0(fc1_weight_ce0);
    fc1_weight_U->q0(fc1_weight_q0);
    fc1_bias_U = new dut_dense_mlp_2_fc1_bias("fc1_bias_U");
    fc1_bias_U->clk(ap_clk);
    fc1_bias_U->reset(ap_rst);
    fc1_bias_U->address0(fc1_bias_address0);
    fc1_bias_U->ce0(fc1_bias_ce0);
    fc1_bias_U->q0(fc1_bias_q0);
    dut_fadd_32ns_32ns_32_5_full_dsp_U76 = new dut_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("dut_fadd_32ns_32ns_32_5_full_dsp_U76");
    dut_fadd_32ns_32ns_32_5_full_dsp_U76->clk(ap_clk);
    dut_fadd_32ns_32ns_32_5_full_dsp_U76->reset(ap_rst);
    dut_fadd_32ns_32ns_32_5_full_dsp_U76->din0(sum_reg_243);
    dut_fadd_32ns_32ns_32_5_full_dsp_U76->din1(grp_fu_288_p1);
    dut_fadd_32ns_32ns_32_5_full_dsp_U76->ce(ap_var_for_const0);
    dut_fadd_32ns_32ns_32_5_full_dsp_U76->dout(grp_fu_288_p2);
    dut_fmul_32ns_32ns_32_4_max_dsp_U77 = new dut_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("dut_fmul_32ns_32ns_32_4_max_dsp_U77");
    dut_fmul_32ns_32ns_32_4_max_dsp_U77->clk(ap_clk);
    dut_fmul_32ns_32ns_32_4_max_dsp_U77->reset(ap_rst);
    dut_fmul_32ns_32ns_32_4_max_dsp_U77->din0(grp_fu_293_p0);
    dut_fmul_32ns_32ns_32_4_max_dsp_U77->din1(fc1_weight_q0);
    dut_fmul_32ns_32ns_32_4_max_dsp_U77->ce(ap_var_for_const0);
    dut_fmul_32ns_32ns_32_4_max_dsp_U77->dout(grp_fu_293_p2);
    dut_fcmp_32ns_32ns_1_1_U78 = new dut_fcmp_32ns_32ns_1_1<1,1,32,32,1>("dut_fcmp_32ns_32ns_1_1_U78");
    dut_fcmp_32ns_32ns_1_1_U78->din0(biased_reg_621);
    dut_fcmp_32ns_32ns_1_1_U78->din1(ap_var_for_const1);
    dut_fcmp_32ns_32ns_1_1_U78->opcode(ap_var_for_const2);
    dut_fcmp_32ns_32ns_1_1_U78->dout(tmp_38_fu_298_p2);
    dut_mux_8to1_sel14_128_1_U79 = new dut_mux_8to1_sel14_128_1<1,1,128,128,128,128,128,128,128,128,14,128>("dut_mux_8to1_sel14_128_1_U79");
    dut_mux_8to1_sel14_128_1_U79->din1(input_r_q0);
    dut_mux_8to1_sel14_128_1_U79->din2(input1_q0);
    dut_mux_8to1_sel14_128_1_U79->din3(input2_q0);
    dut_mux_8to1_sel14_128_1_U79->din4(input3_q0);
    dut_mux_8to1_sel14_128_1_U79->din5(input4_q0);
    dut_mux_8to1_sel14_128_1_U79->din6(input5_q0);
    dut_mux_8to1_sel14_128_1_U79->din7(input6_q0);
    dut_mux_8to1_sel14_128_1_U79->din8(input7_q0);
    dut_mux_8to1_sel14_128_1_U79->din9(tmp_40_fu_400_p9);
    dut_mux_8to1_sel14_128_1_U79->dout(tmp_40_fu_400_p10);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_309_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_fu_309_p2 );

    SC_METHOD(thread_ap_sig_120);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_131);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_174);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_185);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_195);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_204);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_212);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_220);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_229);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_242);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_273);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_280);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_204 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_212 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_280 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_220 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_38 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_229 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_242 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_120 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_131 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_174 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_185 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_195 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_273 );

    SC_METHOD(thread_biased_to_int_fu_434_p1);
    sensitive << ( biased_reg_621 );

    SC_METHOD(thread_exitcond1_fu_309_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( n_reg_219 );

    SC_METHOD(thread_exitcond_fu_325_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( m_reg_255 );

    SC_METHOD(thread_fc1_bias_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_14_fu_391_p1 );

    SC_METHOD(thread_fc1_bias_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_fc1_weight_address0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_12_fu_426_p1 );

    SC_METHOD(thread_fc1_weight_ce0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_fu_288_p1);
    sensitive << ( tmp_13_reg_606 );
    sensitive << ( fc1_bias_load_reg_616 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );

    SC_METHOD(thread_grp_fu_293_p0);
    sensitive << ( tmp_101_reg_586 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_idx_urem_fu_349_p3);
    sensitive << ( next_urem_fu_337_p2 );
    sensitive << ( tmp_99_fu_343_p2 );

    SC_METHOD(thread_input1_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input1_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_input2_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input2_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_input3_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input3_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_input4_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input4_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_input5_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input5_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_input6_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input6_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_input7_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input7_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( newIndex4_fu_379_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_m_2_fu_331_p2);
    sensitive << ( m_reg_255 );

    SC_METHOD(thread_m_cast5_fu_321_p1);
    sensitive << ( m_reg_255 );

    SC_METHOD(thread_n_1_fu_315_p2);
    sensitive << ( n_reg_219 );

    SC_METHOD(thread_newIndex4_fu_379_p1);
    sensitive << ( phi_urem_reg_277 );

    SC_METHOD(thread_next_mul2_fu_303_p2);
    sensitive << ( phi_mul1_reg_231 );

    SC_METHOD(thread_next_mul_fu_363_p2);
    sensitive << ( phi_mul_reg_266 );

    SC_METHOD(thread_next_urem_fu_337_p2);
    sensitive << ( phi_urem_reg_277 );

    SC_METHOD(thread_notlhs_fu_451_p2);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( tmp_fu_437_p4 );

    SC_METHOD(thread_notrhs_fu_457_p2);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( tmp_98_fu_447_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_581 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( output_r_q0 );
    sensitive << ( tmp_33_reg_627 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );

    SC_METHOD(thread_tmp_101_fu_422_p1);
    sensitive << ( tmp_40_fu_400_p10 );

    SC_METHOD(thread_tmp_12_fu_426_p1);
    sensitive << ( w_index_reg_521 );

    SC_METHOD(thread_tmp_14_fu_391_p1);
    sensitive << ( n_reg_219 );

    SC_METHOD(thread_tmp_33_fu_475_p3);
    sensitive << ( biased_to_int_fu_434_p1 );
    sensitive << ( tmp_39_fu_469_p2 );

    SC_METHOD(thread_tmp_39_fu_469_p2);
    sensitive << ( tmp_s_fu_463_p2 );
    sensitive << ( tmp_38_fu_298_p2 );

    SC_METHOD(thread_tmp_40_fu_400_p9);
    sensitive << ( tmp_100_reg_531 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_tmp_98_fu_447_p1);
    sensitive << ( biased_to_int_fu_434_p1 );

    SC_METHOD(thread_tmp_99_fu_343_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_325_p2 );
    sensitive << ( next_urem_fu_337_p2 );

    SC_METHOD(thread_tmp_fu_437_p4);
    sensitive << ( biased_to_int_fu_434_p1 );

    SC_METHOD(thread_tmp_s_fu_463_p2);
    sensitive << ( notrhs_fu_457_p2 );
    sensitive << ( notlhs_fu_451_p2 );

    SC_METHOD(thread_w_index_fu_357_p2);
    sensitive << ( phi_mul1_reg_231 );
    sensitive << ( m_cast5_fu_321_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_325_p2 );
    sensitive << ( exitcond1_fu_309_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_dense_mlp_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input1_address0, "(port)input1_address0");
    sc_trace(mVcdFile, input1_ce0, "(port)input1_ce0");
    sc_trace(mVcdFile, input1_q0, "(port)input1_q0");
    sc_trace(mVcdFile, input2_address0, "(port)input2_address0");
    sc_trace(mVcdFile, input2_ce0, "(port)input2_ce0");
    sc_trace(mVcdFile, input2_q0, "(port)input2_q0");
    sc_trace(mVcdFile, input3_address0, "(port)input3_address0");
    sc_trace(mVcdFile, input3_ce0, "(port)input3_ce0");
    sc_trace(mVcdFile, input3_q0, "(port)input3_q0");
    sc_trace(mVcdFile, input4_address0, "(port)input4_address0");
    sc_trace(mVcdFile, input4_ce0, "(port)input4_ce0");
    sc_trace(mVcdFile, input4_q0, "(port)input4_q0");
    sc_trace(mVcdFile, input5_address0, "(port)input5_address0");
    sc_trace(mVcdFile, input5_ce0, "(port)input5_ce0");
    sc_trace(mVcdFile, input5_q0, "(port)input5_q0");
    sc_trace(mVcdFile, input6_address0, "(port)input6_address0");
    sc_trace(mVcdFile, input6_ce0, "(port)input6_ce0");
    sc_trace(mVcdFile, input6_q0, "(port)input6_q0");
    sc_trace(mVcdFile, input7_address0, "(port)input7_address0");
    sc_trace(mVcdFile, input7_ce0, "(port)input7_ce0");
    sc_trace(mVcdFile, input7_q0, "(port)input7_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_38, "ap_sig_38");
    sc_trace(mVcdFile, fc1_weight_address0, "fc1_weight_address0");
    sc_trace(mVcdFile, fc1_weight_ce0, "fc1_weight_ce0");
    sc_trace(mVcdFile, fc1_weight_q0, "fc1_weight_q0");
    sc_trace(mVcdFile, fc1_bias_address0, "fc1_bias_address0");
    sc_trace(mVcdFile, fc1_bias_ce0, "fc1_bias_ce0");
    sc_trace(mVcdFile, fc1_bias_q0, "fc1_bias_q0");
    sc_trace(mVcdFile, next_mul2_fu_303_p2, "next_mul2_fu_303_p2");
    sc_trace(mVcdFile, next_mul2_reg_495, "next_mul2_reg_495");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_120, "ap_sig_120");
    sc_trace(mVcdFile, n_1_fu_315_p2, "n_1_fu_315_p2");
    sc_trace(mVcdFile, n_1_reg_503, "n_1_reg_503");
    sc_trace(mVcdFile, m_2_fu_331_p2, "m_2_fu_331_p2");
    sc_trace(mVcdFile, m_2_reg_511, "m_2_reg_511");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_131, "ap_sig_131");
    sc_trace(mVcdFile, idx_urem_fu_349_p3, "idx_urem_fu_349_p3");
    sc_trace(mVcdFile, idx_urem_reg_516, "idx_urem_reg_516");
    sc_trace(mVcdFile, exitcond_fu_325_p2, "exitcond_fu_325_p2");
    sc_trace(mVcdFile, w_index_fu_357_p2, "w_index_fu_357_p2");
    sc_trace(mVcdFile, w_index_reg_521, "w_index_reg_521");
    sc_trace(mVcdFile, next_mul_fu_363_p2, "next_mul_fu_363_p2");
    sc_trace(mVcdFile, next_mul_reg_526, "next_mul_reg_526");
    sc_trace(mVcdFile, tmp_100_reg_531, "tmp_100_reg_531");
    sc_trace(mVcdFile, output_addr_reg_581, "output_addr_reg_581");
    sc_trace(mVcdFile, tmp_101_fu_422_p1, "tmp_101_fu_422_p1");
    sc_trace(mVcdFile, tmp_101_reg_586, "tmp_101_reg_586");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_174, "ap_sig_174");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_185, "ap_sig_185");
    sc_trace(mVcdFile, grp_fu_293_p2, "grp_fu_293_p2");
    sc_trace(mVcdFile, tmp_13_reg_606, "tmp_13_reg_606");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_195, "ap_sig_195");
    sc_trace(mVcdFile, grp_fu_288_p2, "grp_fu_288_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_204, "ap_sig_204");
    sc_trace(mVcdFile, fc1_bias_load_reg_616, "fc1_bias_load_reg_616");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_212, "ap_sig_212");
    sc_trace(mVcdFile, biased_reg_621, "biased_reg_621");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_220, "ap_sig_220");
    sc_trace(mVcdFile, tmp_33_fu_475_p3, "tmp_33_fu_475_p3");
    sc_trace(mVcdFile, tmp_33_reg_627, "tmp_33_reg_627");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_229, "ap_sig_229");
    sc_trace(mVcdFile, n_reg_219, "n_reg_219");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_242, "ap_sig_242");
    sc_trace(mVcdFile, phi_mul1_reg_231, "phi_mul1_reg_231");
    sc_trace(mVcdFile, sum_reg_243, "sum_reg_243");
    sc_trace(mVcdFile, exitcond1_fu_309_p2, "exitcond1_fu_309_p2");
    sc_trace(mVcdFile, m_reg_255, "m_reg_255");
    sc_trace(mVcdFile, phi_mul_reg_266, "phi_mul_reg_266");
    sc_trace(mVcdFile, phi_urem_reg_277, "phi_urem_reg_277");
    sc_trace(mVcdFile, newIndex4_fu_379_p1, "newIndex4_fu_379_p1");
    sc_trace(mVcdFile, tmp_14_fu_391_p1, "tmp_14_fu_391_p1");
    sc_trace(mVcdFile, tmp_12_fu_426_p1, "tmp_12_fu_426_p1");
    sc_trace(mVcdFile, grp_fu_288_p1, "grp_fu_288_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_273, "ap_sig_273");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_280, "ap_sig_280");
    sc_trace(mVcdFile, grp_fu_293_p0, "grp_fu_293_p0");
    sc_trace(mVcdFile, next_urem_fu_337_p2, "next_urem_fu_337_p2");
    sc_trace(mVcdFile, tmp_99_fu_343_p2, "tmp_99_fu_343_p2");
    sc_trace(mVcdFile, m_cast5_fu_321_p1, "m_cast5_fu_321_p1");
    sc_trace(mVcdFile, tmp_40_fu_400_p9, "tmp_40_fu_400_p9");
    sc_trace(mVcdFile, tmp_40_fu_400_p10, "tmp_40_fu_400_p10");
    sc_trace(mVcdFile, biased_to_int_fu_434_p1, "biased_to_int_fu_434_p1");
    sc_trace(mVcdFile, tmp_fu_437_p4, "tmp_fu_437_p4");
    sc_trace(mVcdFile, tmp_98_fu_447_p1, "tmp_98_fu_447_p1");
    sc_trace(mVcdFile, notrhs_fu_457_p2, "notrhs_fu_457_p2");
    sc_trace(mVcdFile, notlhs_fu_451_p2, "notlhs_fu_451_p2");
    sc_trace(mVcdFile, tmp_s_fu_463_p2, "tmp_s_fu_463_p2");
    sc_trace(mVcdFile, tmp_38_fu_298_p2, "tmp_38_fu_298_p2");
    sc_trace(mVcdFile, tmp_39_fu_469_p2, "tmp_39_fu_469_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dut_dense_mlp_2::~dut_dense_mlp_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fc1_weight_U;
    delete fc1_bias_U;
    delete dut_fadd_32ns_32ns_32_5_full_dsp_U76;
    delete dut_fmul_32ns_32ns_32_4_max_dsp_U77;
    delete dut_fcmp_32ns_32ns_1_1_U78;
    delete dut_mux_8to1_sel14_128_1_U79;
}

void dut_dense_mlp_2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dut_dense_mlp_2::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void dut_dense_mlp_2::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void dut_dense_mlp_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        m_reg_255 = m_2_reg_511.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_309_p2.read()))) {
        m_reg_255 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        n_reg_219 = n_1_reg_503.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        n_reg_219 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        phi_mul1_reg_231 = next_mul2_reg_495.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        phi_mul1_reg_231 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        phi_mul_reg_266 = next_mul_reg_526.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_309_p2.read()))) {
        phi_mul_reg_266 = ap_const_lv19_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        phi_urem_reg_277 = idx_urem_reg_516.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_309_p2.read()))) {
        phi_urem_reg_277 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        sum_reg_243 = grp_fu_288_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_309_p2.read()))) {
        sum_reg_243 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        biased_reg_621 = grp_fu_288_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        fc1_bias_load_reg_616 = fc1_bias_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(exitcond_fu_325_p2.read(), ap_const_lv1_0))) {
        idx_urem_reg_516 = idx_urem_fu_349_p3.read();
        next_mul_reg_526 = next_mul_fu_363_p2.read();
        tmp_100_reg_531 = phi_mul_reg_266.read().range(18, 17);
        w_index_reg_521 = w_index_fu_357_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        m_2_reg_511 = m_2_fu_331_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        n_1_reg_503 = n_1_fu_315_p2.read();
        next_mul2_reg_495 = next_mul2_fu_303_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && !esl_seteq<1,1,1>(exitcond_fu_325_p2.read(), ap_const_lv1_0))) {
        output_addr_reg_581 =  (sc_lv<8>) (tmp_14_fu_391_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        tmp_101_reg_586 = tmp_101_fu_422_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        tmp_13_reg_606 = grp_fu_293_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        tmp_33_reg_627 = tmp_33_fu_475_p3.read();
    }
}

void dut_dense_mlp_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_309_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_309_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_120() {
    ap_sig_120 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut_dense_mlp_2::thread_ap_sig_131() {
    ap_sig_131 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut_dense_mlp_2::thread_ap_sig_174() {
    ap_sig_174 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void dut_dense_mlp_2::thread_ap_sig_185() {
    ap_sig_185 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void dut_dense_mlp_2::thread_ap_sig_195() {
    ap_sig_195 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void dut_dense_mlp_2::thread_ap_sig_204() {
    ap_sig_204 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void dut_dense_mlp_2::thread_ap_sig_212() {
    ap_sig_212 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void dut_dense_mlp_2::thread_ap_sig_220() {
    ap_sig_220 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void dut_dense_mlp_2::thread_ap_sig_229() {
    ap_sig_229 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void dut_dense_mlp_2::thread_ap_sig_242() {
    ap_sig_242 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void dut_dense_mlp_2::thread_ap_sig_273() {
    ap_sig_273 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void dut_dense_mlp_2::thread_ap_sig_280() {
    ap_sig_280 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void dut_dense_mlp_2::thread_ap_sig_38() {
    ap_sig_38 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_204.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_212.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_280.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_220.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_38.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_229.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_242.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_120.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_131.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_174.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_185.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_195.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_273.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_biased_to_int_fu_434_p1() {
    biased_to_int_fu_434_p1 = biased_reg_621.read();
}

void dut_dense_mlp_2::thread_exitcond1_fu_309_p2() {
    exitcond1_fu_309_p2 = (!n_reg_219.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_219.read() == ap_const_lv7_78);
}

void dut_dense_mlp_2::thread_exitcond_fu_325_p2() {
    exitcond_fu_325_p2 = (!m_reg_255.read().is_01() || !ap_const_lv9_190.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_255.read() == ap_const_lv9_190);
}

void dut_dense_mlp_2::thread_fc1_bias_address0() {
    fc1_bias_address0 =  (sc_lv<7>) (tmp_14_fu_391_p1.read());
}

void dut_dense_mlp_2::thread_fc1_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        fc1_bias_ce0 = ap_const_logic_1;
    } else {
        fc1_bias_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_fc1_weight_address0() {
    fc1_weight_address0 =  (sc_lv<16>) (tmp_12_fu_426_p1.read());
}

void dut_dense_mlp_2::thread_fc1_weight_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        fc1_weight_ce0 = ap_const_logic_1;
    } else {
        fc1_weight_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_grp_fu_288_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        grp_fu_288_p1 = fc1_bias_load_reg_616.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        grp_fu_288_p1 = tmp_13_reg_606.read();
    } else {
        grp_fu_288_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut_dense_mlp_2::thread_grp_fu_293_p0() {
    grp_fu_293_p0 = tmp_101_reg_586.read();
}

void dut_dense_mlp_2::thread_idx_urem_fu_349_p3() {
    idx_urem_fu_349_p3 = (!tmp_99_fu_343_p2.read()[0].is_01())? sc_lv<9>(): ((tmp_99_fu_343_p2.read()[0].to_bool())? next_urem_fu_337_p2.read(): ap_const_lv9_0);
}

void dut_dense_mlp_2::thread_input1_address0() {
    input1_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input1_ce0 = ap_const_logic_1;
    } else {
        input1_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_input2_address0() {
    input2_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input2_ce0 = ap_const_logic_1;
    } else {
        input2_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_input3_address0() {
    input3_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input3_ce0 = ap_const_logic_1;
    } else {
        input3_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_input4_address0() {
    input4_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input4_ce0 = ap_const_logic_1;
    } else {
        input4_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_input5_address0() {
    input5_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input5_ce0 = ap_const_logic_1;
    } else {
        input5_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_input6_address0() {
    input6_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input6_ce0 = ap_const_logic_1;
    } else {
        input6_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_input7_address0() {
    input7_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input7_ce0 = ap_const_logic_1;
    } else {
        input7_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<8>) (newIndex4_fu_379_p1.read());
}

void dut_dense_mlp_2::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_m_2_fu_331_p2() {
    m_2_fu_331_p2 = (!m_reg_255.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(m_reg_255.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void dut_dense_mlp_2::thread_m_cast5_fu_321_p1() {
    m_cast5_fu_321_p1 = esl_zext<16,9>(m_reg_255.read());
}

void dut_dense_mlp_2::thread_n_1_fu_315_p2() {
    n_1_fu_315_p2 = (!n_reg_219.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(n_reg_219.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void dut_dense_mlp_2::thread_newIndex4_fu_379_p1() {
    newIndex4_fu_379_p1 = esl_zext<64,9>(phi_urem_reg_277.read());
}

void dut_dense_mlp_2::thread_next_mul2_fu_303_p2() {
    next_mul2_fu_303_p2 = (!phi_mul1_reg_231.read().is_01() || !ap_const_lv16_190.is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul1_reg_231.read()) + sc_biguint<16>(ap_const_lv16_190));
}

void dut_dense_mlp_2::thread_next_mul_fu_363_p2() {
    next_mul_fu_363_p2 = (!ap_const_lv19_37C.is_01() || !phi_mul_reg_266.read().is_01())? sc_lv<19>(): (sc_biguint<19>(ap_const_lv19_37C) + sc_biguint<19>(phi_mul_reg_266.read()));
}

void dut_dense_mlp_2::thread_next_urem_fu_337_p2() {
    next_urem_fu_337_p2 = (!ap_const_lv9_1.is_01() || !phi_urem_reg_277.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(phi_urem_reg_277.read()));
}

void dut_dense_mlp_2::thread_notlhs_fu_451_p2() {
    notlhs_fu_451_p2 = (!tmp_fu_437_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_437_p4.read() != ap_const_lv8_FF);
}

void dut_dense_mlp_2::thread_notrhs_fu_457_p2() {
    notrhs_fu_457_p2 = (!tmp_98_fu_447_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_98_fu_447_p1.read() == ap_const_lv23_0);
}

void dut_dense_mlp_2::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_581.read();
}

void dut_dense_mlp_2::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_output_r_d0() {
    output_r_d0 = esl_partset<128,128,32,9,9>(output_r_q0.read(), tmp_33_reg_627.read(), ap_const_lv9_0, ap_const_lv9_1F);
}

void dut_dense_mlp_2::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void dut_dense_mlp_2::thread_tmp_101_fu_422_p1() {
    tmp_101_fu_422_p1 = tmp_40_fu_400_p10.read().range(32-1, 0);
}

void dut_dense_mlp_2::thread_tmp_12_fu_426_p1() {
    tmp_12_fu_426_p1 = esl_zext<64,16>(w_index_reg_521.read());
}

void dut_dense_mlp_2::thread_tmp_14_fu_391_p1() {
    tmp_14_fu_391_p1 = esl_zext<64,7>(n_reg_219.read());
}

void dut_dense_mlp_2::thread_tmp_33_fu_475_p3() {
    tmp_33_fu_475_p3 = (!tmp_39_fu_469_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_39_fu_469_p2.read()[0].to_bool())? biased_to_int_fu_434_p1.read(): ap_const_lv32_0);
}

void dut_dense_mlp_2::thread_tmp_39_fu_469_p2() {
    tmp_39_fu_469_p2 = (tmp_s_fu_463_p2.read() & tmp_38_fu_298_p2.read());
}

void dut_dense_mlp_2::thread_tmp_40_fu_400_p9() {
    tmp_40_fu_400_p9 = esl_zext<14,2>(tmp_100_reg_531.read());
}

void dut_dense_mlp_2::thread_tmp_98_fu_447_p1() {
    tmp_98_fu_447_p1 = biased_to_int_fu_434_p1.read().range(23-1, 0);
}

void dut_dense_mlp_2::thread_tmp_99_fu_343_p2() {
    tmp_99_fu_343_p2 = (!next_urem_fu_337_p2.read().is_01() || !ap_const_lv9_93.is_01())? sc_lv<1>(): (sc_biguint<9>(next_urem_fu_337_p2.read()) < sc_biguint<9>(ap_const_lv9_93));
}

void dut_dense_mlp_2::thread_tmp_fu_437_p4() {
    tmp_fu_437_p4 = biased_to_int_fu_434_p1.read().range(30, 23);
}

void dut_dense_mlp_2::thread_tmp_s_fu_463_p2() {
    tmp_s_fu_463_p2 = (notrhs_fu_457_p2.read() | notlhs_fu_451_p2.read());
}

void dut_dense_mlp_2::thread_w_index_fu_357_p2() {
    w_index_fu_357_p2 = (!m_cast5_fu_321_p1.read().is_01() || !phi_mul1_reg_231.read().is_01())? sc_lv<16>(): (sc_biguint<16>(m_cast5_fu_321_p1.read()) + sc_biguint<16>(phi_mul1_reg_231.read()));
}

void dut_dense_mlp_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_309_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(exitcond_fu_325_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

