// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_dense_mlp_1_HH_
#define _dut_dense_mlp_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_fadd_32ns_32ns_32_5_full_dsp.h"
#include "dut_fmul_32ns_32ns_32_4_max_dsp.h"
#include "dut_fcmp_32ns_32ns_1_1.h"
#include "dut_dense_mlp_1_fc2_weight.h"
#include "dut_dense_mlp_1_fc2_bias.h"

namespace ap_rtl {

struct dut_dense_mlp_1 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<128> > input_r_q0;
    sc_out< sc_lv<8> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<128> > output_r_d0;
    sc_in< sc_lv<128> > output_r_q0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    dut_dense_mlp_1(sc_module_name name);
    SC_HAS_PROCESS(dut_dense_mlp_1);

    ~dut_dense_mlp_1();

    sc_trace_file* mVcdFile;

    dut_dense_mlp_1_fc2_weight* fc2_weight_U;
    dut_dense_mlp_1_fc2_bias* fc2_bias_U;
    dut_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* dut_fadd_32ns_32ns_32_5_full_dsp_U91;
    dut_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* dut_fmul_32ns_32ns_32_4_max_dsp_U92;
    dut_fcmp_32ns_32ns_1_1<1,1,32,32,1>* dut_fcmp_32ns_32ns_1_1_U93;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_37;
    sc_signal< sc_lv<14> > fc2_weight_address0;
    sc_signal< sc_logic > fc2_weight_ce0;
    sc_signal< sc_lv<32> > fc2_weight_q0;
    sc_signal< sc_lv<7> > fc2_bias_address0;
    sc_signal< sc_logic > fc2_bias_ce0;
    sc_signal< sc_lv<32> > fc2_bias_q0;
    sc_signal< sc_lv<7> > n_1_fu_163_p2;
    sc_signal< sc_lv<7> > n_1_reg_313;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_77;
    sc_signal< sc_lv<15> > tmp_s_fu_193_p2;
    sc_signal< sc_lv<15> > tmp_s_reg_318;
    sc_signal< sc_lv<1> > exitcond2_fu_157_p2;
    sc_signal< sc_lv<7> > m_2_fu_209_p2;
    sc_signal< sc_lv<7> > m_2_reg_326;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_92;
    sc_signal< sc_lv<1> > exitcond_fu_203_p2;
    sc_signal< sc_lv<8> > output_addr_reg_346;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_114;
    sc_signal< sc_lv<32> > grp_fu_147_p2;
    sc_signal< sc_lv<32> > tmp_14_reg_361;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_124;
    sc_signal< sc_lv<32> > grp_fu_142_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_133;
    sc_signal< sc_lv<32> > fc2_bias_load_reg_371;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_141;
    sc_signal< sc_lv<32> > biased_reg_376;
    sc_signal< sc_logic > ap_sig_cseq_ST_st18_fsm_17;
    sc_signal< bool > ap_sig_149;
    sc_signal< sc_lv<32> > tmp_41_fu_290_p3;
    sc_signal< sc_lv<32> > tmp_41_reg_382;
    sc_signal< sc_logic > ap_sig_cseq_ST_st19_fsm_18;
    sc_signal< bool > ap_sig_158;
    sc_signal< sc_lv<7> > n_reg_107;
    sc_signal< sc_logic > ap_sig_cseq_ST_st20_fsm_19;
    sc_signal< bool > ap_sig_171;
    sc_signal< sc_lv<32> > sum_reg_119;
    sc_signal< sc_lv<7> > m_reg_131;
    sc_signal< sc_lv<64> > newIndex7_fu_224_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_229_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_234_p1;
    sc_signal< sc_lv<32> > grp_fu_142_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_190;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_197;
    sc_signal< sc_lv<32> > grp_fu_147_p0;
    sc_signal< sc_lv<14> > p_shl_fu_169_p3;
    sc_signal< sc_lv<10> > p_shl1_fu_181_p3;
    sc_signal< sc_lv<15> > p_shl_cast_fu_177_p1;
    sc_signal< sc_lv<15> > p_shl1_cast_fu_189_p1;
    sc_signal< sc_lv<15> > m_cast5_fu_199_p1;
    sc_signal< sc_lv<15> > w_index_fu_215_p2;
    sc_signal< sc_lv<32> > w_index_cast_fu_220_p1;
    sc_signal< sc_lv<32> > tmp_103_fu_240_p1;
    sc_signal< sc_lv<32> > biased_to_int_fu_249_p1;
    sc_signal< sc_lv<8> > tmp_fu_252_p4;
    sc_signal< sc_lv<23> > tmp_102_fu_262_p1;
    sc_signal< sc_lv<1> > notrhs_fu_272_p2;
    sc_signal< sc_lv<1> > notlhs_fu_266_p2;
    sc_signal< sc_lv<1> > tmp_43_fu_278_p2;
    sc_signal< sc_lv<1> > tmp_44_fu_152_p2;
    sc_signal< sc_lv<1> > tmp_46_fu_284_p2;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_st1_fsm_0;
    static const sc_lv<20> ap_ST_st2_fsm_1;
    static const sc_lv<20> ap_ST_st3_fsm_2;
    static const sc_lv<20> ap_ST_st4_fsm_3;
    static const sc_lv<20> ap_ST_st5_fsm_4;
    static const sc_lv<20> ap_ST_st6_fsm_5;
    static const sc_lv<20> ap_ST_st7_fsm_6;
    static const sc_lv<20> ap_ST_st8_fsm_7;
    static const sc_lv<20> ap_ST_st9_fsm_8;
    static const sc_lv<20> ap_ST_st10_fsm_9;
    static const sc_lv<20> ap_ST_st11_fsm_10;
    static const sc_lv<20> ap_ST_st12_fsm_11;
    static const sc_lv<20> ap_ST_st13_fsm_12;
    static const sc_lv<20> ap_ST_st14_fsm_13;
    static const sc_lv<20> ap_ST_st15_fsm_14;
    static const sc_lv<20> ap_ST_st16_fsm_15;
    static const sc_lv<20> ap_ST_st17_fsm_16;
    static const sc_lv<20> ap_ST_st18_fsm_17;
    static const sc_lv<20> ap_ST_st19_fsm_18;
    static const sc_lv<20> ap_ST_st20_fsm_19;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<9> ap_const_lv9_1F;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_114();
    void thread_ap_sig_124();
    void thread_ap_sig_133();
    void thread_ap_sig_141();
    void thread_ap_sig_149();
    void thread_ap_sig_158();
    void thread_ap_sig_171();
    void thread_ap_sig_190();
    void thread_ap_sig_197();
    void thread_ap_sig_37();
    void thread_ap_sig_77();
    void thread_ap_sig_92();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st18_fsm_17();
    void thread_ap_sig_cseq_ST_st19_fsm_18();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st20_fsm_19();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_biased_to_int_fu_249_p1();
    void thread_exitcond2_fu_157_p2();
    void thread_exitcond_fu_203_p2();
    void thread_fc2_bias_address0();
    void thread_fc2_bias_ce0();
    void thread_fc2_weight_address0();
    void thread_fc2_weight_ce0();
    void thread_grp_fu_142_p1();
    void thread_grp_fu_147_p0();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_2_fu_209_p2();
    void thread_m_cast5_fu_199_p1();
    void thread_n_1_fu_163_p2();
    void thread_newIndex7_fu_224_p1();
    void thread_notlhs_fu_266_p2();
    void thread_notrhs_fu_272_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_189_p1();
    void thread_p_shl1_fu_181_p3();
    void thread_p_shl_cast_fu_177_p1();
    void thread_p_shl_fu_169_p3();
    void thread_tmp_102_fu_262_p1();
    void thread_tmp_103_fu_240_p1();
    void thread_tmp_13_fu_229_p1();
    void thread_tmp_15_fu_234_p1();
    void thread_tmp_41_fu_290_p3();
    void thread_tmp_43_fu_278_p2();
    void thread_tmp_46_fu_284_p2();
    void thread_tmp_fu_252_p4();
    void thread_tmp_s_fu_193_p2();
    void thread_w_index_cast_fu_220_p1();
    void thread_w_index_fu_215_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
