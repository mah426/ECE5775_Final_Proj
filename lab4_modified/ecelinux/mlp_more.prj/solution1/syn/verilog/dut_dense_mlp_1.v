// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_dense_mlp_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_q0
);

parameter    ap_ST_st1_fsm_0 = 20'b1;
parameter    ap_ST_st2_fsm_1 = 20'b10;
parameter    ap_ST_st3_fsm_2 = 20'b100;
parameter    ap_ST_st4_fsm_3 = 20'b1000;
parameter    ap_ST_st5_fsm_4 = 20'b10000;
parameter    ap_ST_st6_fsm_5 = 20'b100000;
parameter    ap_ST_st7_fsm_6 = 20'b1000000;
parameter    ap_ST_st8_fsm_7 = 20'b10000000;
parameter    ap_ST_st9_fsm_8 = 20'b100000000;
parameter    ap_ST_st10_fsm_9 = 20'b1000000000;
parameter    ap_ST_st11_fsm_10 = 20'b10000000000;
parameter    ap_ST_st12_fsm_11 = 20'b100000000000;
parameter    ap_ST_st13_fsm_12 = 20'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 20'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 20'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 20'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 20'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 20'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 20'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 20'b10000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv7_54 = 7'b1010100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1F = 9'b11111;
parameter    ap_const_lv5_2 = 5'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] input_r_address0;
output   input_r_ce0;
input  [127:0] input_r_q0;
output  [7:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [127:0] output_r_d0;
input  [127:0] output_r_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_37;
wire   [13:0] fc2_weight_address0;
reg    fc2_weight_ce0;
wire   [31:0] fc2_weight_q0;
wire   [6:0] fc2_bias_address0;
reg    fc2_bias_ce0;
wire   [31:0] fc2_bias_q0;
wire   [6:0] n_1_fu_163_p2;
reg   [6:0] n_1_reg_313;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_77;
wire   [14:0] tmp_s_fu_193_p2;
reg   [14:0] tmp_s_reg_318;
wire   [0:0] exitcond2_fu_157_p2;
wire   [6:0] m_2_fu_209_p2;
reg   [6:0] m_2_reg_326;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_92;
wire   [0:0] exitcond_fu_203_p2;
reg   [7:0] output_addr_reg_346;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_114;
wire   [31:0] grp_fu_147_p2;
reg   [31:0] tmp_14_reg_361;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_124;
wire   [31:0] grp_fu_142_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_133;
reg   [31:0] fc2_bias_load_reg_371;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_141;
reg   [31:0] biased_reg_376;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_149;
wire   [31:0] tmp_41_fu_290_p3;
reg   [31:0] tmp_41_reg_382;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_158;
reg   [6:0] n_reg_107;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_171;
reg   [31:0] sum_reg_119;
reg   [6:0] m_reg_131;
wire   [63:0] newIndex7_fu_224_p1;
wire   [63:0] tmp_13_fu_229_p1;
wire   [63:0] tmp_15_fu_234_p1;
reg   [31:0] grp_fu_142_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_190;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_197;
wire   [31:0] grp_fu_147_p0;
wire   [13:0] p_shl_fu_169_p3;
wire   [9:0] p_shl1_fu_181_p3;
wire   [14:0] p_shl_cast_fu_177_p1;
wire   [14:0] p_shl1_cast_fu_189_p1;
wire   [14:0] m_cast5_fu_199_p1;
wire   [14:0] w_index_fu_215_p2;
wire  signed [31:0] w_index_cast_fu_220_p1;
wire   [31:0] tmp_103_fu_240_p1;
wire   [31:0] biased_to_int_fu_249_p1;
wire   [7:0] tmp_fu_252_p4;
wire   [22:0] tmp_102_fu_262_p1;
wire   [0:0] notrhs_fu_272_p2;
wire   [0:0] notlhs_fu_266_p2;
wire   [0:0] tmp_43_fu_278_p2;
wire   [0:0] tmp_44_fu_152_p2;
wire   [0:0] tmp_46_fu_284_p2;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'b1;
end

dut_dense_mlp_1_fc2_weight #(
    .DataWidth( 32 ),
    .AddressRange( 10080 ),
    .AddressWidth( 14 ))
fc2_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc2_weight_address0),
    .ce0(fc2_weight_ce0),
    .q0(fc2_weight_q0)
);

dut_dense_mlp_1_fc2_bias #(
    .DataWidth( 32 ),
    .AddressRange( 84 ),
    .AddressWidth( 7 ))
fc2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc2_bias_address0),
    .ce0(fc2_bias_ce0),
    .q0(fc2_bias_q0)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_reg_119),
    .din1(grp_fu_142_p1),
    .ce(1'b1),
    .dout(grp_fu_142_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_147_p0),
    .din1(fc2_weight_q0),
    .ce(1'b1),
    .dout(grp_fu_147_p2)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U93(
    .din0(biased_reg_376),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_2),
    .dout(tmp_44_fu_152_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        m_reg_131 <= m_2_reg_326;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_157_p2 == 1'b0))) begin
        m_reg_131 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        n_reg_107 <= n_1_reg_313;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n_reg_107 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        sum_reg_119 <= grp_fu_142_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_157_p2 == 1'b0))) begin
        sum_reg_119 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        biased_reg_376 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        fc2_bias_load_reg_371 <= fc2_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        m_2_reg_326 <= m_2_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        n_1_reg_313 <= n_1_fu_163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond_fu_203_p2))) begin
        output_addr_reg_346[6 : 0] <= tmp_15_fu_234_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_14_reg_361 <= grp_fu_147_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        tmp_41_reg_382 <= tmp_41_fu_290_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_157_p2 == 1'b0))) begin
        tmp_s_reg_318[14 : 3] <= tmp_s_fu_193_p2[14 : 3];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_157_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_157_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_133) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_141) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_197) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_149) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_158) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_37) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_171) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_77) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_92) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_114) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_124) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_190) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        fc2_bias_ce0 = 1'b1;
    end else begin
        fc2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        fc2_weight_ce0 = 1'b1;
    end else begin
        fc2_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_142_p1 = fc2_bias_load_reg_371;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_142_p1 = tmp_14_reg_361;
    end else begin
        grp_fu_142_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond2_fu_157_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond_fu_203_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_114 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_124 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_133 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_141 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_149 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_158 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_171 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_190 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_197 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_37 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_77 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_92 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign biased_to_int_fu_249_p1 = biased_reg_376;

assign exitcond2_fu_157_p2 = ((n_reg_107 == ap_const_lv7_54) ? 1'b1 : 1'b0);

assign exitcond_fu_203_p2 = ((m_reg_131 == ap_const_lv7_78) ? 1'b1 : 1'b0);

assign fc2_bias_address0 = tmp_15_fu_234_p1;

assign fc2_weight_address0 = tmp_13_fu_229_p1;

assign grp_fu_147_p0 = tmp_103_fu_240_p1;

assign input_r_address0 = newIndex7_fu_224_p1;

assign m_2_fu_209_p2 = (m_reg_131 + ap_const_lv7_1);

assign m_cast5_fu_199_p1 = m_reg_131;

assign n_1_fu_163_p2 = (n_reg_107 + ap_const_lv7_1);

assign newIndex7_fu_224_p1 = m_reg_131;

assign notlhs_fu_266_p2 = ((tmp_fu_252_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_272_p2 = ((tmp_102_fu_262_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign output_r_address0 = output_addr_reg_346;

assign output_r_d0 = {{output_r_q0[32'd127 : 32'd32]}, {tmp_41_reg_382}};

assign p_shl1_cast_fu_189_p1 = p_shl1_fu_181_p3;

assign p_shl1_fu_181_p3 = {{n_reg_107}, {ap_const_lv3_0}};

assign p_shl_cast_fu_177_p1 = p_shl_fu_169_p3;

assign p_shl_fu_169_p3 = {{n_reg_107}, {ap_const_lv7_0}};

assign tmp_102_fu_262_p1 = biased_to_int_fu_249_p1[22:0];

assign tmp_103_fu_240_p1 = input_r_q0[31:0];

assign tmp_13_fu_229_p1 = $unsigned(w_index_cast_fu_220_p1);

assign tmp_15_fu_234_p1 = n_reg_107;

assign tmp_41_fu_290_p3 = ((tmp_46_fu_284_p2[0:0] === 1'b1) ? biased_to_int_fu_249_p1 : ap_const_lv32_0);

assign tmp_43_fu_278_p2 = (notrhs_fu_272_p2 | notlhs_fu_266_p2);

assign tmp_46_fu_284_p2 = (tmp_43_fu_278_p2 & tmp_44_fu_152_p2);

assign tmp_fu_252_p4 = {{biased_to_int_fu_249_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_s_fu_193_p2 = (p_shl_cast_fu_177_p1 - p_shl1_cast_fu_189_p1);

assign w_index_cast_fu_220_p1 = $signed(w_index_fu_215_p2);

assign w_index_fu_215_p2 = (tmp_s_reg_318 + m_cast5_fu_199_p1);

always @ (posedge ap_clk) begin
    tmp_s_reg_318[2:0] <= 3'b000;
    output_addr_reg_346[7] <= 1'b0;
end

endmodule //dut_dense_mlp_1
