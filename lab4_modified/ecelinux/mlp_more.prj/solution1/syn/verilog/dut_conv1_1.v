// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_conv1_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_0_address0,
        output_0_ce0,
        output_0_we0,
        output_0_d0,
        output_0_q0,
        output_1_address0,
        output_1_ce0,
        output_1_we0,
        output_1_d0,
        output_1_q0,
        output_2_address0,
        output_2_ce0,
        output_2_we0,
        output_2_d0,
        output_2_q0,
        output_3_address0,
        output_3_ce0,
        output_3_we0,
        output_3_d0,
        output_3_q0,
        output_4_address0,
        output_4_ce0,
        output_4_we0,
        output_4_d0,
        output_4_q0,
        output_5_address0,
        output_5_ce0,
        output_5_we0,
        output_5_d0,
        output_5_q0,
        output_6_address0,
        output_6_ce0,
        output_6_we0,
        output_6_d0,
        output_6_q0,
        output_7_address0,
        output_7_ce0,
        output_7_we0,
        output_7_d0,
        output_7_q0
);

parameter    ap_ST_st1_fsm_0 = 65'b1;
parameter    ap_ST_st2_fsm_1 = 65'b10;
parameter    ap_ST_st3_fsm_2 = 65'b100;
parameter    ap_ST_st4_fsm_3 = 65'b1000;
parameter    ap_ST_st5_fsm_4 = 65'b10000;
parameter    ap_ST_st6_fsm_5 = 65'b100000;
parameter    ap_ST_st7_fsm_6 = 65'b1000000;
parameter    ap_ST_st8_fsm_7 = 65'b10000000;
parameter    ap_ST_st9_fsm_8 = 65'b100000000;
parameter    ap_ST_st10_fsm_9 = 65'b1000000000;
parameter    ap_ST_st11_fsm_10 = 65'b10000000000;
parameter    ap_ST_st12_fsm_11 = 65'b100000000000;
parameter    ap_ST_st13_fsm_12 = 65'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 65'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 65'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 65'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 65'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 65'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 65'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 65'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 65'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 65'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 65'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 65'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 65'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 65'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 65'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 65'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 65'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 65'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 65'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 65'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 65'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 65'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 65'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 65'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 65'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 65'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 65'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 65'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 65'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 65'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 65'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 65'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 65'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 65'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 65'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 65'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 65'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 65'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 65'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 65'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 65'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 65'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 65'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 65'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 65'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 65'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 65'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 65'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 65'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 65'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 65'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 65'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 65'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_2 = 11'b10;
parameter    ap_const_lv11_3 = 11'b11;
parameter    ap_const_lv11_4 = 11'b100;
parameter    ap_const_lv11_5 = 11'b101;
parameter    ap_const_lv11_6 = 11'b110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv11_19 = 11'b11001;
parameter    ap_const_lv14_498 = 14'b10010011000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv12_498 = 12'b10010011000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv7_1F = 7'b11111;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv128_lc_1 = 128'b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv11_93 = 11'b10010011;
parameter    ap_const_lv9_1F = 9'b11111;
parameter    ap_const_lv26_1BDE = 26'b1101111011110;
parameter    ap_const_lv30_6F75 = 30'b110111101110101;
parameter    ap_const_lv24_DEF = 24'b110111101111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] input_r_address0;
output   input_r_ce0;
input  [127:0] input_r_q0;
output  [7:0] output_0_address0;
output   output_0_ce0;
output   output_0_we0;
output  [127:0] output_0_d0;
input  [127:0] output_0_q0;
output  [7:0] output_1_address0;
output   output_1_ce0;
output   output_1_we0;
output  [127:0] output_1_d0;
input  [127:0] output_1_q0;
output  [7:0] output_2_address0;
output   output_2_ce0;
output   output_2_we0;
output  [127:0] output_2_d0;
input  [127:0] output_2_q0;
output  [7:0] output_3_address0;
output   output_3_ce0;
output   output_3_we0;
output  [127:0] output_3_d0;
input  [127:0] output_3_q0;
output  [7:0] output_4_address0;
output   output_4_ce0;
output   output_4_we0;
output  [127:0] output_4_d0;
input  [127:0] output_4_q0;
output  [7:0] output_5_address0;
output   output_5_ce0;
output   output_5_we0;
output  [127:0] output_5_d0;
input  [127:0] output_5_q0;
output  [7:0] output_6_address0;
output   output_6_ce0;
output   output_6_we0;
output  [127:0] output_6_d0;
input  [127:0] output_6_q0;
output  [7:0] output_7_address0;
output   output_7_ce0;
output   output_7_we0;
output  [127:0] output_7_d0;
input  [127:0] output_7_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg[7:0] output_0_address0;
reg output_0_ce0;
reg output_0_we0;
reg[7:0] output_1_address0;
reg output_1_ce0;
reg output_1_we0;
reg[7:0] output_2_address0;
reg output_2_ce0;
reg output_2_we0;
reg[7:0] output_3_address0;
reg output_3_ce0;
reg output_3_we0;
reg[7:0] output_4_address0;
reg output_4_ce0;
reg output_4_we0;
reg[7:0] output_5_address0;
reg output_5_ce0;
reg output_5_we0;
reg[7:0] output_6_address0;
reg output_6_ce0;
reg output_6_we0;
reg[7:0] output_7_address0;
reg output_7_ce0;
reg output_7_we0;

(* fsm_encoding = "none" *) reg   [64:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_82;
wire   [8:0] conv1_weight_address0;
reg    conv1_weight_ce0;
wire   [31:0] conv1_weight_q0;
wire   [2:0] n_2_fu_395_p2;
reg   [2:0] n_2_reg_1043;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_171;
wire   [8:0] tmp_17_fu_429_p2;
reg   [8:0] tmp_17_reg_1048;
wire   [0:0] exitcond3_fu_389_p2;
wire   [5:0] tmp_18_fu_435_p2;
reg   [5:0] tmp_18_reg_1053;
wire   [4:0] x_2_fu_451_p2;
reg   [4:0] x_2_reg_1061;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_188;
wire   [13:0] tmp3_fu_482_p2;
reg   [13:0] tmp3_reg_1066;
wire   [0:0] exitcond9_fu_445_p2;
wire   [4:0] y_2_fu_498_p2;
reg   [4:0] y_2_reg_1074;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_202;
wire   [13:0] o_index_fu_504_p2;
reg   [13:0] o_index_reg_1079;
wire   [0:0] exitcond2_fu_492_p2;
wire   [1:0] m_3_fu_519_p2;
reg   [1:0] m_3_reg_1088;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_216;
wire   [10:0] tmp_23_fu_534_p2;
reg   [10:0] tmp_23_reg_1093;
wire   [0:0] exitcond8_fu_513_p2;
reg   [3:0] tmp_20_reg_1098;
reg   [2:0] tmp_107_reg_1103;
wire   [11:0] c_cast1_fu_570_p1;
reg   [11:0] c_cast1_reg_1108;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_236;
wire   [2:0] c_2_fu_580_p2;
reg   [2:0] c_2_reg_1116;
wire   [10:0] tmp8_fu_586_p2;
reg   [10:0] tmp8_reg_1121;
wire   [0:0] exitcond1_fu_574_p2;
wire   [2:0] r_2_fu_601_p2;
reg   [2:0] r_2_reg_1129;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_252;
wire   [11:0] i_index_fu_623_p2;
reg   [11:0] i_index_reg_1134;
wire   [0:0] exitcond_fu_595_p2;
wire   [10:0] w_index_fu_646_p2;
reg   [10:0] w_index_reg_1140;
reg   [1:0] tmp_21_reg_1145;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_268;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_277;
wire   [31:0] tmp_145_fu_788_p1;
reg   [31:0] tmp_145_reg_1155;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_286;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_297;
wire   [31:0] grp_fu_380_p2;
reg   [31:0] tmp_29_reg_1175;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_307;
wire   [31:0] grp_fu_375_p2;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_316;
wire   [10:0] grp_fu_540_p2;
reg   [10:0] tmp_51_reg_1185;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_325;
wire   [10:0] tmp_105_fu_801_p1;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_334;
reg   [4:0] tmp_106_reg_1195;
reg   [7:0] output_0_addr_reg_1200;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_345;
reg   [7:0] output_1_addr_reg_1205;
reg   [7:0] output_2_addr_reg_1210;
reg   [7:0] output_3_addr_reg_1215;
reg   [7:0] output_4_addr_reg_1220;
reg   [7:0] output_5_addr_reg_1225;
reg   [7:0] output_6_addr_reg_1230;
reg   [7:0] output_7_addr_reg_1235;
wire   [0:0] tmp_108_fu_848_p2;
reg   [0:0] tmp_108_reg_1240;
wire   [7:0] tmp_110_fu_854_p1;
reg   [7:0] tmp_110_reg_1248;
reg   [2:0] n_reg_270;
reg   [4:0] x_reg_281;
reg   [4:0] y_reg_293;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_385;
reg   [31:0] sum_reg_305;
reg   [1:0] m_reg_317;
reg   [31:0] sum_1_reg_329;
reg   [2:0] c_reg_341;
reg   [31:0] sum_2_reg_352;
reg   [2:0] r_reg_364;
wire   [63:0] tmp_59_fu_669_p1;
wire   [63:0] tmp_28_fu_792_p1;
wire   [63:0] newIndex8_fu_823_p1;
wire  signed [10:0] arrayNo_fu_858_p1;
wire   [127:0] tmp_128_fu_1004_p2;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_460;
wire   [31:0] grp_fu_380_p0;
wire   [7:0] p_shl2_fu_401_p3;
wire   [4:0] p_shl3_fu_413_p3;
wire   [8:0] p_shl2_cast_fu_409_p1;
wire   [8:0] p_shl3_cast_fu_425_p1;
wire   [5:0] p_shl3_cast1_fu_421_p1;
wire   [5:0] n_cast_fu_385_p1;
wire   [8:0] x_cast_fu_441_p1;
wire   [8:0] tmp_fu_457_p2;
wire   [10:0] p_shl5_fu_470_p3;
wire   [13:0] p_shl4_fu_462_p3;
wire  signed [13:0] p_shl5_cast_fu_478_p1;
wire   [13:0] y_cast_fu_488_p1;
wire   [5:0] m_cast_fu_509_p1;
wire   [5:0] tmp_22_fu_525_p2;
wire  signed [5:0] tmp_23_fu_534_p0;
wire   [11:0] grp_fu_540_p1;
wire   [29:0] mul5_fu_1025_p2;
wire   [10:0] c_cast_fu_566_p1;
wire   [4:0] r_cast_fu_591_p1;
wire   [4:0] tmp6_fu_607_p2;
wire   [11:0] tmp7_fu_613_p4;
wire   [4:0] p_shl_fu_628_p3;
wire   [4:0] tmp9_fu_636_p2;
wire   [10:0] tmp9_cast_fu_642_p1;
wire   [11:0] grp_fu_651_p0;
wire   [25:0] mul_fu_1018_p2;
wire   [11:0] grp_fu_651_p2;
wire   [6:0] tmp_60_fu_677_p3;
wire   [6:0] tmp_61_fu_684_p2;
wire   [7:0] tmp_130_fu_696_p1;
wire   [7:0] tmp_131_fu_700_p1;
wire   [0:0] tmp_129_fu_690_p2;
wire   [7:0] tmp_133_fu_714_p2;
wire   [7:0] tmp_135_fu_726_p2;
reg   [127:0] tmp_132_fu_704_p4;
wire   [7:0] tmp_134_fu_720_p2;
wire   [7:0] tmp_136_fu_732_p3;
wire   [7:0] tmp_138_fu_748_p3;
wire   [7:0] tmp_139_fu_756_p2;
wire   [127:0] tmp_137_fu_740_p3;
wire   [127:0] tmp_140_fu_762_p1;
wire   [127:0] tmp_141_fu_766_p1;
wire   [127:0] tmp_142_fu_770_p2;
wire   [127:0] tmp_143_fu_776_p2;
wire   [127:0] tmp_144_fu_782_p2;
wire  signed [31:0] w_index_cast_fu_674_p1;
wire   [23:0] mul2_fu_1033_p2;
wire   [8:0] grp_fu_817_p1;
wire   [10:0] grp_fu_817_p2;
wire   [8:0] tmp_54_fu_835_p3;
wire   [8:0] tmp_55_fu_842_p2;
wire   [13:0] tmp_53_fu_869_p9;
wire   [31:0] tmp_52_fu_865_p1;
wire   [7:0] tmp_109_fu_891_p3;
wire   [7:0] tmp_112_fu_902_p2;
wire   [7:0] tmp_113_fu_908_p3;
wire   [7:0] tmp_115_fu_920_p3;
wire   [7:0] tmp_114_fu_914_p3;
wire   [7:0] tmp_116_fu_927_p2;
wire   [127:0] tmp_111_fu_898_p1;
wire   [127:0] tmp_117_fu_933_p1;
wire   [127:0] tmp_120_fu_945_p2;
reg   [127:0] tmp_121_fu_951_p4;
wire   [127:0] tmp_118_fu_937_p1;
wire   [127:0] tmp_119_fu_941_p1;
wire   [127:0] tmp_123_fu_968_p2;
wire   [127:0] tmp_124_fu_974_p2;
wire   [127:0] p_demorgan_fu_980_p2;
wire   [127:0] tmp_53_fu_869_p10;
wire   [127:0] tmp_125_fu_986_p2;
wire   [127:0] tmp_122_fu_961_p3;
wire   [127:0] tmp_126_fu_992_p2;
wire   [127:0] tmp_127_fu_998_p2;
wire   [13:0] mul_fu_1018_p0;
wire   [11:0] mul_fu_1018_p1;
wire   [13:0] mul5_fu_1025_p0;
wire   [15:0] mul5_fu_1025_p1;
wire   [10:0] mul2_fu_1033_p0;
wire   [12:0] mul2_fu_1033_p1;
reg    grp_fu_540_ap_start;
wire    grp_fu_540_ap_done;
reg    grp_fu_651_ap_start;
wire    grp_fu_651_ap_done;
reg    grp_fu_817_ap_start;
wire    grp_fu_817_ap_done;
reg   [64:0] ap_NS_fsm;
wire   [23:0] mul2_fu_1033_p00;
wire   [29:0] mul5_fu_1025_p00;
wire   [25:0] mul_fu_1018_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 65'b1;
end

dut_conv1_1_conv1_weight #(
    .DataWidth( 32 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
conv1_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_weight_address0),
    .ce0(conv1_weight_ce0),
    .q0(conv1_weight_q0)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_2_reg_352),
    .din1(tmp_29_reg_1175),
    .ce(1'b1),
    .dout(grp_fu_375_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_380_p0),
    .din1(conv1_weight_q0),
    .ce(1'b1),
    .dout(grp_fu_380_p2)
);

dut_urem_14ns_12ns_11_18_seq #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 11 ))
dut_urem_14ns_12ns_11_18_seq_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_540_ap_start),
    .done(grp_fu_540_ap_done),
    .din0(o_index_reg_1079),
    .din1(grp_fu_540_p1),
    .ce(1'b1),
    .dout(grp_fu_540_p2)
);

dut_urem_12ns_12ns_12_16_seq #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
dut_urem_12ns_12ns_12_16_seq_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_651_ap_start),
    .done(grp_fu_651_ap_done),
    .din0(grp_fu_651_p0),
    .din1(ap_const_lv12_498),
    .ce(1'b1),
    .dout(grp_fu_651_p2)
);

dut_urem_11ns_9ns_11_15_seq #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
dut_urem_11ns_9ns_11_15_seq_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_817_ap_start),
    .done(grp_fu_817_ap_done),
    .din0(tmp_105_fu_801_p1),
    .din1(grp_fu_817_p1),
    .ce(1'b1),
    .dout(grp_fu_817_p2)
);

dut_mux_8to1_sel14_128_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 128 ),
    .din2_WIDTH( 128 ),
    .din3_WIDTH( 128 ),
    .din4_WIDTH( 128 ),
    .din5_WIDTH( 128 ),
    .din6_WIDTH( 128 ),
    .din7_WIDTH( 128 ),
    .din8_WIDTH( 128 ),
    .din9_WIDTH( 14 ),
    .dout_WIDTH( 128 ))
dut_mux_8to1_sel14_128_1_U6(
    .din1(output_0_q0),
    .din2(output_1_q0),
    .din3(output_2_q0),
    .din4(output_3_q0),
    .din5(output_4_q0),
    .din6(output_5_q0),
    .din7(output_6_q0),
    .din8(output_7_q0),
    .din9(tmp_53_fu_869_p9),
    .dout(tmp_53_fu_869_p10)
);

dut_mul_mul_14ns_12ns_26_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
dut_mul_mul_14ns_12ns_26_1_U7(
    .din0(mul_fu_1018_p0),
    .din1(mul_fu_1018_p1),
    .dout(mul_fu_1018_p2)
);

dut_mul_mul_14ns_16ns_30_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
dut_mul_mul_14ns_16ns_30_1_U8(
    .din0(mul5_fu_1025_p0),
    .din1(mul5_fu_1025_p1),
    .dout(mul5_fu_1025_p2)
);

dut_mul_mul_11ns_13ns_24_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 24 ))
dut_mul_mul_11ns_13ns_24_1_U9(
    .din0(mul2_fu_1033_p0),
    .din1(mul2_fu_1033_p1),
    .dout(mul2_fu_1033_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond_fu_595_p2))) begin
        c_reg_341 <= c_2_reg_1116;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond8_fu_513_p2))) begin
        c_reg_341 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond1_fu_574_p2))) begin
        m_reg_317 <= m_3_reg_1088;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_492_p2))) begin
        m_reg_317 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond9_fu_445_p2))) begin
        n_reg_270 <= n_2_reg_1043;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n_reg_270 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        r_reg_364 <= r_2_reg_1129;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond1_fu_574_p2))) begin
        r_reg_364 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond_fu_595_p2))) begin
        sum_1_reg_329 <= sum_2_reg_352;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond8_fu_513_p2))) begin
        sum_1_reg_329 <= sum_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        sum_2_reg_352 <= grp_fu_375_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond1_fu_574_p2))) begin
        sum_2_reg_352 <= sum_1_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond1_fu_574_p2))) begin
        sum_reg_305 <= sum_1_reg_329;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_492_p2))) begin
        sum_reg_305 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_492_p2))) begin
        x_reg_281 <= x_2_reg_1061;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_389_p2 == 1'b0))) begin
        x_reg_281 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        y_reg_293 <= y_2_reg_1074;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_445_p2))) begin
        y_reg_293 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        c_2_reg_1116 <= c_2_fu_580_p2;
        c_cast1_reg_1108[2 : 0] <= c_cast1_fu_570_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond_fu_595_p2))) begin
        i_index_reg_1134 <= i_index_fu_623_p2;
        w_index_reg_1140 <= w_index_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        m_3_reg_1088 <= m_3_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        n_2_reg_1043 <= n_2_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_492_p2))) begin
        o_index_reg_1079 <= o_index_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_0_addr_reg_1200 <= newIndex8_fu_823_p1;
        output_1_addr_reg_1205 <= newIndex8_fu_823_p1;
        output_2_addr_reg_1210 <= newIndex8_fu_823_p1;
        output_3_addr_reg_1215 <= newIndex8_fu_823_p1;
        output_4_addr_reg_1220 <= newIndex8_fu_823_p1;
        output_5_addr_reg_1225 <= newIndex8_fu_823_p1;
        output_6_addr_reg_1230 <= newIndex8_fu_823_p1;
        output_7_addr_reg_1235 <= newIndex8_fu_823_p1;
        tmp_108_reg_1240 <= tmp_108_fu_848_p2;
        tmp_110_reg_1248[7 : 5] <= tmp_110_fu_854_p1[7 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        r_2_reg_1129 <= r_2_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_445_p2))) begin
        tmp3_reg_1066[13 : 2] <= tmp3_fu_482_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond1_fu_574_p2))) begin
        tmp8_reg_1121 <= tmp8_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        tmp_106_reg_1195 <= {{mul2_fu_1033_p2[ap_const_lv32_17 : ap_const_lv32_13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond8_fu_513_p2))) begin
        tmp_107_reg_1103 <= {{mul5_fu_1025_p2[ap_const_lv32_1B : ap_const_lv32_19]}};
        tmp_20_reg_1098 <= {{mul5_fu_1025_p2[ap_const_lv32_1C : ap_const_lv32_19]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        tmp_145_reg_1155 <= tmp_145_fu_788_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_389_p2 == 1'b0))) begin
        tmp_17_reg_1048[8 : 2] <= tmp_17_fu_429_p2[8 : 2];
        tmp_18_reg_1053 <= tmp_18_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tmp_21_reg_1145 <= {{mul_fu_1018_p2[ap_const_lv32_18 : ap_const_lv32_17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond8_fu_513_p2))) begin
        tmp_23_reg_1093 <= tmp_23_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        tmp_29_reg_1175 <= grp_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        tmp_51_reg_1185 <= grp_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        x_2_reg_1061 <= x_2_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        y_2_reg_1074 <= y_2_fu_498_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_389_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_389_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_277) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_286) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_297) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_307) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_460) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_171) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_316) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_188) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_325) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_202) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_334) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_216) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_345) begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_385) begin
        ap_sig_cseq_ST_st65_fsm_64 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_236) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_252) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_268) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        conv1_weight_ce0 = 1'b1;
    end else begin
        conv1_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond8_fu_513_p2))) begin
        grp_fu_540_ap_start = 1'b1;
    end else begin
        grp_fu_540_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond_fu_595_p2))) begin
        grp_fu_651_ap_start = 1'b1;
    end else begin
        grp_fu_651_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        grp_fu_817_ap_start = 1'b1;
    end else begin
        grp_fu_817_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_0_address0 = output_0_addr_reg_1200;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_0_address0 = newIndex8_fu_823_p1;
    end else begin
        output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & (arrayNo_fu_858_p1 == ap_const_lv11_0))) begin
        output_0_we0 = 1'b1;
    end else begin
        output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_1_address0 = output_1_addr_reg_1205;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_1_address0 = newIndex8_fu_823_p1;
    end else begin
        output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & (arrayNo_fu_858_p1 == ap_const_lv11_1))) begin
        output_1_we0 = 1'b1;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_2_address0 = output_2_addr_reg_1210;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_2_address0 = newIndex8_fu_823_p1;
    end else begin
        output_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_2_ce0 = 1'b1;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & (arrayNo_fu_858_p1 == ap_const_lv11_2))) begin
        output_2_we0 = 1'b1;
    end else begin
        output_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_3_address0 = output_3_addr_reg_1215;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_3_address0 = newIndex8_fu_823_p1;
    end else begin
        output_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_3_ce0 = 1'b1;
    end else begin
        output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & (arrayNo_fu_858_p1 == ap_const_lv11_3))) begin
        output_3_we0 = 1'b1;
    end else begin
        output_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_4_address0 = output_4_addr_reg_1220;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_4_address0 = newIndex8_fu_823_p1;
    end else begin
        output_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_4_ce0 = 1'b1;
    end else begin
        output_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & (arrayNo_fu_858_p1 == ap_const_lv11_4))) begin
        output_4_we0 = 1'b1;
    end else begin
        output_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_5_address0 = output_5_addr_reg_1225;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_5_address0 = newIndex8_fu_823_p1;
    end else begin
        output_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_5_ce0 = 1'b1;
    end else begin
        output_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & (arrayNo_fu_858_p1 == ap_const_lv11_5))) begin
        output_5_we0 = 1'b1;
    end else begin
        output_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_6_address0 = output_6_addr_reg_1230;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_6_address0 = newIndex8_fu_823_p1;
    end else begin
        output_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_6_ce0 = 1'b1;
    end else begin
        output_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & (arrayNo_fu_858_p1 == ap_const_lv11_6))) begin
        output_6_we0 = 1'b1;
    end else begin
        output_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        output_7_address0 = output_7_addr_reg_1235;
    end else if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        output_7_address0 = newIndex8_fu_823_p1;
    end else begin
        output_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st64_fsm_63) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        output_7_ce0 = 1'b1;
    end else begin
        output_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st65_fsm_64) & ~(arrayNo_fu_858_p1 == ap_const_lv11_0) & ~(arrayNo_fu_858_p1 == ap_const_lv11_1) & ~(arrayNo_fu_858_p1 == ap_const_lv11_2) & ~(arrayNo_fu_858_p1 == ap_const_lv11_3) & ~(arrayNo_fu_858_p1 == ap_const_lv11_4) & ~(arrayNo_fu_858_p1 == ap_const_lv11_5) & ~(arrayNo_fu_858_p1 == ap_const_lv11_6))) begin
        output_7_we0 = 1'b1;
    end else begin
        output_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond3_fu_389_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond9_fu_445_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond2_fu_492_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if ((1'b0 == exitcond8_fu_513_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == exitcond1_fu_574_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == exitcond_fu_595_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_171 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_188 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_202 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_216 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_236 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_252 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_268 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_277 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_286 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_297 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_307 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_316 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_325 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_334 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_345 = (1'b1 == ap_CS_fsm[ap_const_lv32_3F]);
end

always @ (*) begin
    ap_sig_385 = (1'b1 == ap_CS_fsm[ap_const_lv32_40]);
end

always @ (*) begin
    ap_sig_460 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_82 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign arrayNo_fu_858_p1 = $signed(tmp_106_reg_1195);

assign c_2_fu_580_p2 = (c_reg_341 + ap_const_lv3_1);

assign c_cast1_fu_570_p1 = c_reg_341;

assign c_cast_fu_566_p1 = c_reg_341;

assign conv1_weight_address0 = tmp_28_fu_792_p1;

assign exitcond1_fu_574_p2 = ((c_reg_341 == ap_const_lv3_5) ? 1'b1 : 1'b0);

assign exitcond2_fu_492_p2 = ((y_reg_293 == ap_const_lv5_1C) ? 1'b1 : 1'b0);

assign exitcond3_fu_389_p2 = ((n_reg_270 == ap_const_lv3_6) ? 1'b1 : 1'b0);

assign exitcond8_fu_513_p2 = ((m_reg_317 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond9_fu_445_p2 = ((x_reg_281 == ap_const_lv5_1C) ? 1'b1 : 1'b0);

assign exitcond_fu_595_p2 = ((r_reg_364 == ap_const_lv3_5) ? 1'b1 : 1'b0);

assign grp_fu_380_p0 = tmp_145_reg_1155;

assign grp_fu_540_p1 = ap_const_lv14_498;

assign grp_fu_651_p0 = (tmp7_fu_613_p4 + c_cast1_reg_1108);

assign grp_fu_817_p1 = ap_const_lv11_93;

assign i_index_fu_623_p2 = (tmp7_fu_613_p4 + c_cast1_reg_1108);

assign input_r_address0 = tmp_59_fu_669_p1;

assign m_3_fu_519_p2 = (m_reg_317 + ap_const_lv2_1);

assign m_cast_fu_509_p1 = m_reg_317;

assign mul2_fu_1033_p0 = mul2_fu_1033_p00;

assign mul2_fu_1033_p00 = tmp_105_fu_801_p1;

assign mul2_fu_1033_p1 = ap_const_lv24_DEF;

assign mul5_fu_1025_p0 = mul5_fu_1025_p00;

assign mul5_fu_1025_p00 = o_index_reg_1079;

assign mul5_fu_1025_p1 = ap_const_lv30_6F75;

assign mul_fu_1018_p0 = ap_const_lv26_1BDE;

assign mul_fu_1018_p1 = mul_fu_1018_p10;

assign mul_fu_1018_p10 = i_index_reg_1134;

assign n_2_fu_395_p2 = (n_reg_270 + ap_const_lv3_1);

assign n_cast_fu_385_p1 = n_reg_270;

assign newIndex8_fu_823_p1 = grp_fu_817_p2;

assign o_index_fu_504_p2 = (y_cast_fu_488_p1 + tmp3_reg_1066);

assign output_0_d0 = tmp_128_fu_1004_p2;

assign output_1_d0 = tmp_128_fu_1004_p2;

assign output_2_d0 = tmp_128_fu_1004_p2;

assign output_3_d0 = tmp_128_fu_1004_p2;

assign output_4_d0 = tmp_128_fu_1004_p2;

assign output_5_d0 = tmp_128_fu_1004_p2;

assign output_6_d0 = tmp_128_fu_1004_p2;

assign output_7_d0 = tmp_128_fu_1004_p2;

assign p_demorgan_fu_980_p2 = (tmp_123_fu_968_p2 & tmp_124_fu_974_p2);

assign p_shl2_cast_fu_409_p1 = p_shl2_fu_401_p3;

assign p_shl2_fu_401_p3 = {{n_reg_270}, {ap_const_lv5_0}};

assign p_shl3_cast1_fu_421_p1 = p_shl3_fu_413_p3;

assign p_shl3_cast_fu_425_p1 = p_shl3_fu_413_p3;

assign p_shl3_fu_413_p3 = {{n_reg_270}, {ap_const_lv2_0}};

assign p_shl4_fu_462_p3 = {{tmp_fu_457_p2}, {ap_const_lv5_0}};

assign p_shl5_cast_fu_478_p1 = $signed(p_shl5_fu_470_p3);

assign p_shl5_fu_470_p3 = {{tmp_fu_457_p2}, {ap_const_lv2_0}};

assign p_shl_fu_628_p3 = {{r_reg_364}, {ap_const_lv2_0}};

assign r_2_fu_601_p2 = (r_reg_364 + ap_const_lv3_1);

assign r_cast_fu_591_p1 = r_reg_364;

assign tmp3_fu_482_p2 = ($signed(p_shl4_fu_462_p3) - $signed(p_shl5_cast_fu_478_p1));

assign tmp6_fu_607_p2 = (x_reg_281 + r_cast_fu_591_p1);

assign tmp7_fu_613_p4 = {{{m_reg_317}, {tmp6_fu_607_p2}}, {y_reg_293}};

assign tmp8_fu_586_p2 = (tmp_23_reg_1093 + c_cast_fu_566_p1);

assign tmp9_cast_fu_642_p1 = tmp9_fu_636_p2;

assign tmp9_fu_636_p2 = (p_shl_fu_628_p3 + r_cast_fu_591_p1);

assign tmp_105_fu_801_p1 = tmp_51_reg_1185[10:0];

assign tmp_108_fu_848_p2 = ((tmp_54_fu_835_p3 > tmp_55_fu_842_p2) ? 1'b1 : 1'b0);

assign tmp_109_fu_891_p3 = {{tmp_107_reg_1103}, {ap_const_lv5_0}};

assign tmp_110_fu_854_p1 = tmp_55_fu_842_p2[7:0];

assign tmp_111_fu_898_p1 = tmp_52_fu_865_p1;

assign tmp_112_fu_902_p2 = (ap_const_lv8_7F - tmp_109_fu_891_p3);

assign tmp_113_fu_908_p3 = ((tmp_108_reg_1240[0:0] === 1'b1) ? tmp_109_fu_891_p3 : tmp_110_reg_1248);

assign tmp_114_fu_914_p3 = ((tmp_108_reg_1240[0:0] === 1'b1) ? tmp_110_reg_1248 : tmp_109_fu_891_p3);

assign tmp_115_fu_920_p3 = ((tmp_108_reg_1240[0:0] === 1'b1) ? tmp_112_fu_902_p2 : tmp_109_fu_891_p3);

assign tmp_116_fu_927_p2 = (ap_const_lv8_7F - tmp_113_fu_908_p3);

assign tmp_117_fu_933_p1 = tmp_115_fu_920_p3;

assign tmp_118_fu_937_p1 = tmp_114_fu_914_p3;

assign tmp_119_fu_941_p1 = tmp_116_fu_927_p2;

assign tmp_120_fu_945_p2 = tmp_111_fu_898_p1 << tmp_117_fu_933_p1;

integer ap_tvar_int_0;

always @ (tmp_120_fu_945_p2) begin
    for (ap_tvar_int_0 = 128 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > ap_const_lv32_7F - ap_const_lv32_0) begin
            tmp_121_fu_951_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_121_fu_951_p4[ap_tvar_int_0] = tmp_120_fu_945_p2[ap_const_lv32_7F - ap_tvar_int_0];
        end
    end
end

assign tmp_122_fu_961_p3 = ((tmp_108_reg_1240[0:0] === 1'b1) ? tmp_121_fu_951_p4 : tmp_120_fu_945_p2);

assign tmp_123_fu_968_p2 = ap_const_lv128_lc_1 << tmp_118_fu_937_p1;

assign tmp_124_fu_974_p2 = ap_const_lv128_lc_1 >> tmp_119_fu_941_p1;

assign tmp_125_fu_986_p2 = (p_demorgan_fu_980_p2 ^ ap_const_lv128_lc_1);

assign tmp_126_fu_992_p2 = (tmp_53_fu_869_p10 & tmp_125_fu_986_p2);

assign tmp_127_fu_998_p2 = (tmp_122_fu_961_p3 & p_demorgan_fu_980_p2);

assign tmp_128_fu_1004_p2 = (tmp_126_fu_992_p2 | tmp_127_fu_998_p2);

assign tmp_129_fu_690_p2 = ((tmp_60_fu_677_p3 > tmp_61_fu_684_p2) ? 1'b1 : 1'b0);

assign tmp_130_fu_696_p1 = tmp_60_fu_677_p3;

assign tmp_131_fu_700_p1 = tmp_61_fu_684_p2;

integer ap_tvar_int_1;

always @ (input_r_q0) begin
    for (ap_tvar_int_1 = 128 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > ap_const_lv32_7F - ap_const_lv32_0) begin
            tmp_132_fu_704_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_132_fu_704_p4[ap_tvar_int_1] = input_r_q0[ap_const_lv32_7F - ap_tvar_int_1];
        end
    end
end

assign tmp_133_fu_714_p2 = (tmp_130_fu_696_p1 - tmp_131_fu_700_p1);

assign tmp_134_fu_720_p2 = (tmp_130_fu_696_p1 ^ ap_const_lv8_7F);

assign tmp_135_fu_726_p2 = (tmp_131_fu_700_p1 - tmp_130_fu_696_p1);

assign tmp_136_fu_732_p3 = ((tmp_129_fu_690_p2[0:0] === 1'b1) ? tmp_133_fu_714_p2 : tmp_135_fu_726_p2);

assign tmp_137_fu_740_p3 = ((tmp_129_fu_690_p2[0:0] === 1'b1) ? tmp_132_fu_704_p4 : input_r_q0);

assign tmp_138_fu_748_p3 = ((tmp_129_fu_690_p2[0:0] === 1'b1) ? tmp_134_fu_720_p2 : tmp_130_fu_696_p1);

assign tmp_139_fu_756_p2 = (ap_const_lv8_7F - tmp_136_fu_732_p3);

assign tmp_140_fu_762_p1 = tmp_138_fu_748_p3;

assign tmp_141_fu_766_p1 = tmp_139_fu_756_p2;

assign tmp_142_fu_770_p2 = tmp_137_fu_740_p3 >> tmp_140_fu_762_p1;

assign tmp_143_fu_776_p2 = ap_const_lv128_lc_1 >> tmp_141_fu_766_p1;

assign tmp_144_fu_782_p2 = (tmp_142_fu_770_p2 & tmp_143_fu_776_p2);

assign tmp_145_fu_788_p1 = tmp_144_fu_782_p2[31:0];

assign tmp_17_fu_429_p2 = (p_shl2_cast_fu_409_p1 - p_shl3_cast_fu_425_p1);

assign tmp_18_fu_435_p2 = (p_shl3_cast1_fu_421_p1 - n_cast_fu_385_p1);

assign tmp_22_fu_525_p2 = (m_cast_fu_509_p1 + tmp_18_reg_1053);

assign tmp_23_fu_534_p0 = tmp_22_fu_525_p2;

assign tmp_23_fu_534_p2 = ($signed(tmp_23_fu_534_p0) * $signed('h19));

assign tmp_28_fu_792_p1 = $unsigned(w_index_cast_fu_674_p1);

assign tmp_52_fu_865_p1 = sum_reg_305;

assign tmp_53_fu_869_p9 = $unsigned(arrayNo_fu_858_p1);

assign tmp_54_fu_835_p3 = {{tmp_20_reg_1098}, {ap_const_lv5_0}};

assign tmp_55_fu_842_p2 = (tmp_54_fu_835_p3 | ap_const_lv9_1F);

assign tmp_59_fu_669_p1 = grp_fu_651_p2;

assign tmp_60_fu_677_p3 = {{tmp_21_reg_1145}, {ap_const_lv5_0}};

assign tmp_61_fu_684_p2 = (tmp_60_fu_677_p3 | ap_const_lv7_1F);

assign tmp_fu_457_p2 = (x_cast_fu_441_p1 + tmp_17_reg_1048);

assign w_index_cast_fu_674_p1 = $signed(w_index_reg_1140);

assign w_index_fu_646_p2 = (tmp9_cast_fu_642_p1 + tmp8_reg_1121);

assign x_2_fu_451_p2 = (x_reg_281 + ap_const_lv5_1);

assign x_cast_fu_441_p1 = x_reg_281;

assign y_2_fu_498_p2 = (y_reg_293 + ap_const_lv5_1);

assign y_cast_fu_488_p1 = y_reg_293;

always @ (posedge ap_clk) begin
    tmp_17_reg_1048[1:0] <= 2'b00;
    tmp3_reg_1066[1:0] <= 2'b00;
    c_cast1_reg_1108[11:3] <= 9'b000000000;
    tmp_110_reg_1248[4:0] <= 5'b11111;
end

endmodule //dut_conv1_1
