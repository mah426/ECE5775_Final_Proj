

================================================================
== Vivado HLS Report for 'dut_dense_mlp_2'
================================================================
* Date:           Fri Dec  9 22:57:36 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        mlp_more.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.16|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  529201|  529201|  529201|  529201|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+--------+--------+----------+-----------+-----------+------+----------+
        |                     |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+--------+--------+----------+-----------+-----------+------+----------+
        |- LOOP_DENSE_MLP_0   |  529200|  529200|      4410|          -|          -|   120|    no    |
        | + LOOP_DENSE_MLP_1  |    4400|    4400|        11|          -|          -|   400|    no    |
        +---------------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 21
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond)
	14  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	3  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_22 [1/1] 1.57ns
:0  br label %1


 <State 2>: 1.97ns
ST_2: n [1/1] 0.00ns
:0  %n = phi i7 [ 0, %0 ], [ %n_1, %branch8 ]

ST_2: phi_mul1 [1/1] 0.00ns
:1  %phi_mul1 = phi i16 [ 0, %0 ], [ %next_mul2, %branch8 ]

ST_2: next_mul2 [1/1] 1.96ns
:2  %next_mul2 = add i16 %phi_mul1, 400

ST_2: empty [1/1] 0.00ns
:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 120, i64 120, i64 120)

ST_2: exitcond1 [1/1] 1.97ns
:4  %exitcond1 = icmp eq i7 %n, -8

ST_2: n_1 [1/1] 1.72ns
:5  %n_1 = add i7 %n, 1

ST_2: stg_29 [1/1] 0.00ns
:6  br i1 %exitcond1, label %5, label %2

ST_2: stg_30 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str2) nounwind

ST_2: tmp_30 [1/1] 0.00ns
:1  %tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str2)

ST_2: stg_32 [1/1] 1.57ns
:2  br label %3

ST_2: stg_33 [1/1] 0.00ns
:0  ret void


 <State 3>: 5.24ns
ST_3: sum [1/1] 0.00ns
:0  %sum = phi float [ 0.000000e+00, %2 ], [ %sum_1, %4 ]

ST_3: m [1/1] 0.00ns
:1  %m = phi i9 [ 0, %2 ], [ %m_2, %4 ]

ST_3: phi_mul [1/1] 0.00ns
:2  %phi_mul = phi i19 [ 0, %2 ], [ %next_mul, %4 ]

ST_3: phi_urem [1/1] 0.00ns
:3  %phi_urem = phi i9 [ 0, %2 ], [ %idx_urem, %4 ]

ST_3: m_cast5 [1/1] 0.00ns
:4  %m_cast5 = zext i9 %m to i16

ST_3: empty_33 [1/1] 0.00ns
:5  %empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 400, i64 400, i64 400)

ST_3: exitcond [1/1] 2.03ns
:6  %exitcond = icmp eq i9 %m, -112

ST_3: m_2 [1/1] 1.84ns
:7  %m_2 = add i9 %m, 1

ST_3: stg_42 [1/1] 0.00ns
:8  br i1 %exitcond, label %branch8, label %4

ST_3: next_urem [1/1] 1.84ns
:0  %next_urem = add i9 1, %phi_urem

ST_3: tmp_99 [1/1] 2.03ns
:1  %tmp_99 = icmp ult i9 %next_urem, 147

ST_3: idx_urem [1/1] 1.37ns
:2  %idx_urem = select i1 %tmp_99, i9 %next_urem, i9 0

ST_3: w_index [1/1] 1.96ns
:4  %w_index = add i16 %m_cast5, %phi_mul1

ST_3: next_mul [1/1] 2.08ns
:5  %next_mul = add i19 892, %phi_mul

ST_3: tmp_100 [1/1] 0.00ns
:6  %tmp_100 = call i2 @_ssdm_op_PartSelect.i2.i19.i32.i32(i19 %phi_mul, i32 17, i32 18)

ST_3: newIndex4 [1/1] 0.00ns
:8  %newIndex4 = zext i9 %phi_urem to i64

ST_3: input_addr [1/1] 0.00ns
:9  %input_addr = getelementptr [147 x i128]* %input_r, i64 0, i64 %newIndex4

ST_3: input_load [2/2] 2.71ns
:10  %input_load = load i128* %input_addr, align 8

ST_3: input1_addr [1/1] 0.00ns
:11  %input1_addr = getelementptr [147 x i128]* %input1, i64 0, i64 %newIndex4

ST_3: input1_load [2/2] 2.71ns
:12  %input1_load = load i128* %input1_addr, align 8

ST_3: input2_addr [1/1] 0.00ns
:13  %input2_addr = getelementptr [147 x i128]* %input2, i64 0, i64 %newIndex4

ST_3: input2_load [2/2] 2.71ns
:14  %input2_load = load i128* %input2_addr, align 8

ST_3: input3_addr [1/1] 0.00ns
:15  %input3_addr = getelementptr [147 x i128]* %input3, i64 0, i64 %newIndex4

ST_3: input3_load [2/2] 2.71ns
:16  %input3_load = load i128* %input3_addr, align 8

ST_3: input4_addr [1/1] 0.00ns
:17  %input4_addr = getelementptr [147 x i128]* %input4, i64 0, i64 %newIndex4

ST_3: input4_load [2/2] 2.71ns
:18  %input4_load = load i128* %input4_addr, align 8

ST_3: input5_addr [1/1] 0.00ns
:19  %input5_addr = getelementptr [147 x i128]* %input5, i64 0, i64 %newIndex4

ST_3: input5_load [2/2] 2.71ns
:20  %input5_load = load i128* %input5_addr, align 8

ST_3: input6_addr [1/1] 0.00ns
:21  %input6_addr = getelementptr [147 x i128]* %input6, i64 0, i64 %newIndex4

ST_3: input6_load [2/2] 2.71ns
:22  %input6_load = load i128* %input6_addr, align 8

ST_3: input7_addr [1/1] 0.00ns
:23  %input7_addr = getelementptr [147 x i128]* %input7, i64 0, i64 %newIndex4

ST_3: input7_load [2/2] 2.71ns
:24  %input7_load = load i128* %input7_addr, align 8

ST_3: tmp_14 [1/1] 0.00ns
branch8:0  %tmp_14 = zext i7 %n to i64

ST_3: fc1_bias_addr [1/1] 0.00ns
branch8:1  %fc1_bias_addr = getelementptr [120 x float]* @fc1_bias, i64 0, i64 %tmp_14

ST_3: fc1_bias_load [2/2] 2.39ns
branch8:2  %fc1_bias_load = load float* %fc1_bias_addr, align 4

ST_3: output_addr [1/1] 0.00ns
branch8:12  %output_addr = getelementptr [147 x i128]* %output_r, i64 0, i64 %tmp_14


 <State 4>: 4.65ns
ST_4: arrayNo_cast [1/1] 0.00ns
:7  %arrayNo_cast = zext i2 %tmp_100 to i14

ST_4: input_load [1/2] 2.71ns
:10  %input_load = load i128* %input_addr, align 8

ST_4: input1_load [1/2] 2.71ns
:12  %input1_load = load i128* %input1_addr, align 8

ST_4: input2_load [1/2] 2.71ns
:14  %input2_load = load i128* %input2_addr, align 8

ST_4: input3_load [1/2] 2.71ns
:16  %input3_load = load i128* %input3_addr, align 8

ST_4: input4_load [1/2] 2.71ns
:18  %input4_load = load i128* %input4_addr, align 8

ST_4: input5_load [1/2] 2.71ns
:20  %input5_load = load i128* %input5_addr, align 8

ST_4: input6_load [1/2] 2.71ns
:22  %input6_load = load i128* %input6_addr, align 8

ST_4: input7_load [1/2] 2.71ns
:24  %input7_load = load i128* %input7_addr, align 8

ST_4: tmp_40 [1/1] 1.94ns
:25  %tmp_40 = call i128 @_ssdm_op_Mux.ap_auto.8i128.i14(i128 %input_load, i128 %input1_load, i128 %input2_load, i128 %input3_load, i128 %input4_load, i128 %input5_load, i128 %input6_load, i128 %input7_load, i14 %arrayNo_cast)

ST_4: tmp_101 [1/1] 0.00ns
:26  %tmp_101 = trunc i128 %tmp_40 to i32

ST_4: tmp_12 [1/1] 0.00ns
:28  %tmp_12 = zext i16 %w_index to i64

ST_4: fc1_weight_addr [1/1] 0.00ns
:29  %fc1_weight_addr = getelementptr [48000 x float]* @fc1_weight, i64 0, i64 %tmp_12

ST_4: fc1_weight_load [2/2] 2.39ns
:30  %fc1_weight_load = load float* %fc1_weight_addr, align 4


 <State 5>: 8.09ns
ST_5: tmp_37 [1/1] 0.00ns
:27  %tmp_37 = bitcast i32 %tmp_101 to float

ST_5: fc1_weight_load [1/2] 2.39ns
:30  %fc1_weight_load = load float* %fc1_weight_addr, align 4

ST_5: tmp_13 [4/4] 5.70ns
:31  %tmp_13 = fmul float %tmp_37, %fc1_weight_load


 <State 6>: 5.70ns
ST_6: tmp_13 [3/4] 5.70ns
:31  %tmp_13 = fmul float %tmp_37, %fc1_weight_load


 <State 7>: 5.70ns
ST_7: tmp_13 [2/4] 5.70ns
:31  %tmp_13 = fmul float %tmp_37, %fc1_weight_load


 <State 8>: 5.70ns
ST_8: tmp_13 [1/4] 5.70ns
:31  %tmp_13 = fmul float %tmp_37, %fc1_weight_load


 <State 9>: 7.26ns
ST_9: sum_1 [5/5] 7.26ns
:32  %sum_1 = fadd float %sum, %tmp_13


 <State 10>: 7.26ns
ST_10: sum_1 [4/5] 7.26ns
:32  %sum_1 = fadd float %sum, %tmp_13


 <State 11>: 7.26ns
ST_11: sum_1 [3/5] 7.26ns
:32  %sum_1 = fadd float %sum, %tmp_13


 <State 12>: 7.26ns
ST_12: sum_1 [2/5] 7.26ns
:32  %sum_1 = fadd float %sum, %tmp_13


 <State 13>: 7.26ns
ST_13: stg_94 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str3) nounwind

ST_13: sum_1 [1/5] 7.26ns
:32  %sum_1 = fadd float %sum, %tmp_13

ST_13: stg_96 [1/1] 0.00ns
:33  br label %3


 <State 14>: 2.39ns
ST_14: fc1_bias_load [1/2] 2.39ns
branch8:2  %fc1_bias_load = load float* %fc1_bias_addr, align 4


 <State 15>: 7.26ns
ST_15: biased [5/5] 7.26ns
branch8:3  %biased = fadd float %sum, %fc1_bias_load


 <State 16>: 7.26ns
ST_16: biased [4/5] 7.26ns
branch8:3  %biased = fadd float %sum, %fc1_bias_load


 <State 17>: 7.26ns
ST_17: biased [3/5] 7.26ns
branch8:3  %biased = fadd float %sum, %fc1_bias_load


 <State 18>: 7.26ns
ST_18: biased [2/5] 7.26ns
branch8:3  %biased = fadd float %sum, %fc1_bias_load


 <State 19>: 7.26ns
ST_19: biased [1/5] 7.26ns
branch8:3  %biased = fadd float %sum, %fc1_bias_load


 <State 20>: 8.16ns
ST_20: biased_to_int [1/1] 0.00ns
branch8:4  %biased_to_int = bitcast float %biased to i32

ST_20: tmp [1/1] 0.00ns
branch8:5  %tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %biased_to_int, i32 23, i32 30)

ST_20: tmp_98 [1/1] 0.00ns
branch8:6  %tmp_98 = trunc i32 %biased_to_int to i23

ST_20: notlhs [1/1] 2.00ns
branch8:7  %notlhs = icmp ne i8 %tmp, -1

ST_20: notrhs [1/1] 2.39ns
branch8:8  %notrhs = icmp eq i23 %tmp_98, 0

ST_20: tmp_s [1/1] 0.00ns (grouped into LUT with out node tmp_33)
branch8:9  %tmp_s = or i1 %notrhs, %notlhs

ST_20: tmp_38 [1/1] 6.79ns
branch8:10  %tmp_38 = fcmp ogt float %biased, 0.000000e+00

ST_20: tmp_39 [1/1] 0.00ns (grouped into LUT with out node tmp_33)
branch8:11  %tmp_39 = and i1 %tmp_s, %tmp_38

ST_20: tmp_33 [1/1] 1.37ns (out node of the LUT)
branch8:13  %tmp_33 = select i1 %tmp_39, i32 %biased_to_int, i32 0

ST_20: output_load [2/2] 2.71ns
branch8:14  %output_load = load i128* %output_addr, align 8


 <State 21>: 5.42ns
ST_21: output_load [1/2] 2.71ns
branch8:14  %output_load = load i128* %output_addr, align 8

ST_21: tmp_34 [1/1] 0.00ns
branch8:15  %tmp_34 = call i128 @_ssdm_op_PartSet.i128.i128.i32.i9.i9(i128 %output_load, i32 %tmp_33, i9 0, i9 31)

ST_21: stg_115 [1/1] 2.71ns
branch8:16  store i128 %tmp_34, i128* %output_addr, align 8

ST_21: empty_34 [1/1] 0.00ns
branch8:17  %empty_34 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str2, i32 %tmp_30)

ST_21: stg_117 [1/1] 0.00ns
branch8:18  br label %1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
