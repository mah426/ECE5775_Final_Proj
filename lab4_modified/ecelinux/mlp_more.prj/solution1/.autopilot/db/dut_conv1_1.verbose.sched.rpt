

================================================================
== Vivado HLS Report for 'dut_conv1_1'
================================================================
* Date:           Fri Dec  9 22:57:31 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        mlp_more.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.73|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  9507133|  9507133|  9507133|  9507133|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_N           |  9507132|  9507132|   1584522|          -|          -|     6|    no    |
        | + LOOP_X          |  1584520|  1584520|     56590|          -|          -|    28|    no    |
        |  ++ LOOP_Y        |    56588|    56588|      2021|          -|          -|    28|    no    |
        |   +++ LOOP_M      |     1986|     1986|       662|          -|          -|     3|    no    |
        |    ++++ LOOP_C    |      660|      660|       132|          -|          -|     5|    no    |
        |     +++++ LOOP_R  |      130|      130|        26|          -|          -|     5|    no    |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 65
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond3)
3 --> 
	4  / (!exitcond9)
	2  / (exitcond9)
4 --> 
	5  / (!exitcond2)
	3  / (exitcond2)
5 --> 
	33  / (exitcond8)
	6  / (!exitcond8)
6 --> 
	7  / (!exitcond1)
	5  / (exitcond1)
7 --> 
	8  / (!exitcond)
	6  / (exitcond)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	7  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_66 [1/1] 1.57ns
:0  br label %1


 <State 2>: 1.72ns
ST_2: n [1/1] 0.00ns
:0  %n = phi i3 [ 0, %0 ], [ %n_2, %18 ]

ST_2: n_cast [1/1] 0.00ns
:1  %n_cast = zext i3 %n to i6

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_2: exitcond3 [1/1] 1.62ns
:3  %exitcond3 = icmp eq i3 %n, -2

ST_2: n_2 [1/1] 0.80ns
:4  %n_2 = add i3 %n, 1

ST_2: stg_72 [1/1] 0.00ns
:5  br i1 %exitcond3, label %19, label %2

ST_2: stg_73 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str12) nounwind

ST_2: tmp_s [1/1] 0.00ns
:1  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str12)

ST_2: p_shl2 [1/1] 0.00ns
:2  %p_shl2 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %n, i5 0)

ST_2: p_shl2_cast [1/1] 0.00ns
:3  %p_shl2_cast = zext i8 %p_shl2 to i9

ST_2: p_shl3 [1/1] 0.00ns
:4  %p_shl3 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %n, i2 0)

ST_2: p_shl3_cast1 [1/1] 0.00ns
:5  %p_shl3_cast1 = zext i5 %p_shl3 to i6

ST_2: p_shl3_cast [1/1] 0.00ns
:6  %p_shl3_cast = zext i5 %p_shl3 to i9

ST_2: tmp_17 [1/1] 1.72ns
:7  %tmp_17 = sub i9 %p_shl2_cast, %p_shl3_cast

ST_2: tmp_18 [1/1] 1.72ns
:8  %tmp_18 = sub i6 %p_shl3_cast1, %n_cast

ST_2: stg_82 [1/1] 1.57ns
:9  br label %3

ST_2: stg_83 [1/1] 0.00ns
:0  ret void


 <State 3>: 3.80ns
ST_3: x [1/1] 0.00ns
:0  %x = phi i5 [ 0, %2 ], [ %x_2, %17 ]

ST_3: x_cast [1/1] 0.00ns
:1  %x_cast = zext i5 %x to i9

ST_3: empty_39 [1/1] 0.00ns
:2  %empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28)

ST_3: exitcond9 [1/1] 1.91ns
:3  %exitcond9 = icmp eq i5 %x, -4

ST_3: x_2 [1/1] 1.72ns
:4  %x_2 = add i5 %x, 1

ST_3: stg_89 [1/1] 0.00ns
:5  br i1 %exitcond9, label %18, label %4

ST_3: stg_90 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str13) nounwind

ST_3: tmp_49 [1/1] 0.00ns
:1  %tmp_49 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str13)

ST_3: tmp [1/1] 1.84ns
:2  %tmp = add i9 %x_cast, %tmp_17

ST_3: p_shl4 [1/1] 0.00ns
:3  %p_shl4 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp, i5 0)

ST_3: p_shl5 [1/1] 0.00ns
:4  %p_shl5 = call i11 @_ssdm_op_BitConcatenate.i11.i9.i2(i9 %tmp, i2 0)

ST_3: p_shl5_cast [1/1] 0.00ns
:5  %p_shl5_cast = sext i11 %p_shl5 to i14

ST_3: tmp3 [1/1] 1.96ns
:6  %tmp3 = sub i14 %p_shl4, %p_shl5_cast

ST_3: stg_97 [1/1] 1.57ns
:7  br label %5

ST_3: empty_48 [1/1] 0.00ns
:0  %empty_48 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str12, i32 %tmp_s)

ST_3: stg_99 [1/1] 0.00ns
:1  br label %1


 <State 4>: 1.96ns
ST_4: y [1/1] 0.00ns
:0  %y = phi i5 [ 0, %4 ], [ %y_2, %16 ]

ST_4: y_cast [1/1] 0.00ns
:1  %y_cast = zext i5 %y to i14

ST_4: exitcond2 [1/1] 1.91ns
:2  %exitcond2 = icmp eq i5 %y, -4

ST_4: empty_40 [1/1] 0.00ns
:3  %empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28)

ST_4: y_2 [1/1] 1.72ns
:4  %y_2 = add i5 %y, 1

ST_4: stg_105 [1/1] 0.00ns
:5  br i1 %exitcond2, label %17, label %6

ST_4: stg_106 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str14) nounwind

ST_4: tmp_50 [1/1] 0.00ns
:1  %tmp_50 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str14)

ST_4: o_index [1/1] 1.96ns
:2  %o_index = add i14 %y_cast, %tmp3

ST_4: stg_109 [1/1] 1.57ns
:3  br label %7

ST_4: empty_47 [1/1] 0.00ns
:0  %empty_47 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str13, i32 %tmp_49)

ST_4: stg_111 [1/1] 0.00ns
:1  br label %3


 <State 5>: 8.10ns
ST_5: sum [1/1] 0.00ns
:0  %sum = phi float [ 0.000000e+00, %6 ], [ %sum_1, %14 ]

ST_5: m [1/1] 0.00ns
:1  %m = phi i2 [ 0, %6 ], [ %m_3, %14 ]

ST_5: m_cast [1/1] 0.00ns
:2  %m_cast = zext i2 %m to i6

ST_5: empty_41 [1/1] 0.00ns
:3  %empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_5: exitcond8 [1/1] 1.36ns
:4  %exitcond8 = icmp eq i2 %m, -1

ST_5: m_3 [1/1] 0.80ns
:5  %m_3 = add i2 %m, 1

ST_5: stg_118 [1/1] 0.00ns
:6  br i1 %exitcond8, label %15, label %8

ST_5: stg_119 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str15) nounwind

ST_5: tmp_56 [1/1] 0.00ns
:1  %tmp_56 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str15)

ST_5: tmp_22 [1/1] 1.72ns
:2  %tmp_22 = add i6 %m_cast, %tmp_18

ST_5: tmp_22_cast_cast [1/1] 0.00ns
:3  %tmp_22_cast_cast = sext i6 %tmp_22 to i11

ST_5: tmp_23 [1/1] 6.38ns
:4  %tmp_23 = mul i11 %tmp_22_cast_cast, 25

ST_5: stg_124 [1/1] 1.57ns
:5  br label %9

ST_5: tmp_51 [18/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176

ST_5: zext4_cast [1/1] 0.00ns
:2  %zext4_cast = zext i14 %o_index to i30

ST_5: mul5 [1/1] 6.38ns
:3  %mul5 = mul i30 %zext4_cast, 28533

ST_5: tmp_20 [1/1] 0.00ns
:29  %tmp_20 = call i4 @_ssdm_op_PartSelect.i4.i30.i32.i32(i30 %mul5, i32 25, i32 28)

ST_5: tmp_107 [1/1] 0.00ns
:30  %tmp_107 = call i3 @_ssdm_op_PartSelect.i3.i30.i32.i32(i30 %mul5, i32 25, i32 27)


 <State 6>: 1.84ns
ST_6: sum_1 [1/1] 0.00ns
:0  %sum_1 = phi float [ %sum, %8 ], [ %sum_2, %13 ]

ST_6: c [1/1] 0.00ns
:1  %c = phi i3 [ 0, %8 ], [ %c_2, %13 ]

ST_6: c_cast [1/1] 0.00ns
:2  %c_cast = zext i3 %c to i11

ST_6: c_cast1 [1/1] 0.00ns
:3  %c_cast1 = zext i3 %c to i12

ST_6: exitcond1 [1/1] 1.62ns
:4  %exitcond1 = icmp eq i3 %c, -3

ST_6: empty_42 [1/1] 0.00ns
:5  %empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_6: c_2 [1/1] 0.80ns
:6  %c_2 = add i3 %c, 1

ST_6: stg_137 [1/1] 0.00ns
:7  br i1 %exitcond1, label %14, label %10

ST_6: stg_138 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str16) nounwind

ST_6: tmp_57 [1/1] 0.00ns
:1  %tmp_57 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str16)

ST_6: tmp8 [1/1] 1.84ns
:2  %tmp8 = add i11 %tmp_23, %c_cast

ST_6: stg_141 [1/1] 1.57ns
:3  br label %11

ST_6: empty_45 [1/1] 0.00ns
:0  %empty_45 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str15, i32 %tmp_56)

ST_6: stg_143 [1/1] 0.00ns
:1  br label %7


 <State 7>: 7.94ns
ST_7: sum_2 [1/1] 0.00ns
:0  %sum_2 = phi float [ %sum_1, %10 ], [ %sum_3, %12 ]

ST_7: r [1/1] 0.00ns
:1  %r = phi i3 [ 0, %10 ], [ %r_2, %12 ]

ST_7: r_cast [1/1] 0.00ns
:2  %r_cast = zext i3 %r to i5

ST_7: exitcond [1/1] 1.62ns
:3  %exitcond = icmp eq i3 %r, -3

ST_7: empty_43 [1/1] 0.00ns
:4  %empty_43 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_7: r_2 [1/1] 0.80ns
:5  %r_2 = add i3 %r, 1

ST_7: stg_150 [1/1] 0.00ns
:6  br i1 %exitcond, label %13, label %12

ST_7: tmp6 [1/1] 1.72ns
:1  %tmp6 = add i5 %x, %r_cast

ST_7: tmp7 [1/1] 0.00ns
:2  %tmp7 = call i12 @_ssdm_op_BitConcatenate.i12.i2.i5.i5(i2 %m, i5 %tmp6, i5 %y)

ST_7: i_index [1/1] 1.84ns
:3  %i_index = add i12 %tmp7, %c_cast1

ST_7: p_shl [1/1] 0.00ns
:4  %p_shl = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %r, i2 0)

ST_7: tmp9 [1/1] 1.72ns
:5  %tmp9 = add i5 %p_shl, %r_cast

ST_7: tmp9_cast [1/1] 0.00ns
:6  %tmp9_cast = zext i5 %tmp9 to i11

ST_7: w_index [1/1] 1.84ns
:7  %w_index = add i11 %tmp9_cast, %tmp8

ST_7: tmp_58 [16/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176

ST_7: empty_44 [1/1] 0.00ns
:0  %empty_44 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str16, i32 %tmp_57)

ST_7: stg_160 [1/1] 0.00ns
:1  br label %9


 <State 8>: 6.38ns
ST_8: tmp_58 [15/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176

ST_8: zext_cast [1/1] 0.00ns
:10  %zext_cast = zext i12 %i_index to i26

ST_8: mul [1/1] 6.38ns
:11  %mul = mul i26 7134, %zext_cast

ST_8: tmp_21 [1/1] 0.00ns
:15  %tmp_21 = call i2 @_ssdm_op_PartSelect.i2.i26.i32.i32(i26 %mul, i32 23, i32 24)


 <State 9>: 4.38ns
ST_9: tmp_58 [14/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 10>: 4.38ns
ST_10: tmp_58 [13/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 11>: 4.38ns
ST_11: tmp_58 [12/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 12>: 4.38ns
ST_12: tmp_58 [11/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 13>: 4.38ns
ST_13: tmp_58 [10/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 14>: 4.38ns
ST_14: tmp_58 [9/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 15>: 4.38ns
ST_15: tmp_58 [8/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 16>: 4.38ns
ST_16: tmp_58 [7/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 17>: 4.38ns
ST_17: tmp_58 [6/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 18>: 4.38ns
ST_18: tmp_58 [5/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 19>: 4.38ns
ST_19: tmp_58 [4/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 20>: 4.38ns
ST_20: tmp_58 [3/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 21>: 4.38ns
ST_21: tmp_58 [2/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176


 <State 22>: 7.09ns
ST_22: tmp_58 [1/16] 4.38ns
:9  %tmp_58 = urem i12 %i_index, 1176

ST_22: tmp_59 [1/1] 0.00ns
:12  %tmp_59 = zext i12 %tmp_58 to i64

ST_22: input_addr [1/1] 0.00ns
:13  %input_addr = getelementptr [1176 x i128]* %input_r, i64 0, i64 %tmp_59

ST_22: input_load [2/2] 2.71ns
:14  %input_load = load i128* %input_addr, align 8


 <State 23>: 7.73ns
ST_23: w_index_cast [1/1] 0.00ns
:8  %w_index_cast = sext i11 %w_index to i32

ST_23: input_load [1/2] 2.71ns
:14  %input_load = load i128* %input_addr, align 8

ST_23: tmp_60 [1/1] 0.00ns
:16  %tmp_60 = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 %tmp_21, i5 0)

ST_23: tmp_61 [1/1] 0.00ns
:17  %tmp_61 = or i7 %tmp_60, 31

ST_23: tmp_129 [1/1] 1.97ns
:18  %tmp_129 = icmp ugt i7 %tmp_60, %tmp_61

ST_23: tmp_130 [1/1] 0.00ns
:19  %tmp_130 = zext i7 %tmp_60 to i8

ST_23: tmp_131 [1/1] 0.00ns
:20  %tmp_131 = zext i7 %tmp_61 to i8

ST_23: tmp_132 [1/1] 0.00ns (grouped into LUT with out node tmp_142)
:21  %tmp_132 = call i128 @llvm.part.select.i128(i128 %input_load, i32 127, i32 0)

ST_23: tmp_133 [1/1] 1.72ns
:22  %tmp_133 = sub i8 %tmp_130, %tmp_131

ST_23: tmp_134 [1/1] 0.00ns (grouped into LUT with out node tmp_142)
:23  %tmp_134 = xor i8 %tmp_130, 127

ST_23: tmp_135 [1/1] 1.72ns
:24  %tmp_135 = sub i8 %tmp_131, %tmp_130

ST_23: tmp_136 [1/1] 0.00ns (grouped into LUT with out node tmp_139)
:25  %tmp_136 = select i1 %tmp_129, i8 %tmp_133, i8 %tmp_135

ST_23: tmp_137 [1/1] 0.00ns (grouped into LUT with out node tmp_142)
:26  %tmp_137 = select i1 %tmp_129, i128 %tmp_132, i128 %input_load

ST_23: tmp_138 [1/1] 0.00ns (grouped into LUT with out node tmp_142)
:27  %tmp_138 = select i1 %tmp_129, i8 %tmp_134, i8 %tmp_130

ST_23: tmp_139 [1/1] 1.72ns (out node of the LUT)
:28  %tmp_139 = sub i8 127, %tmp_136

ST_23: tmp_140 [1/1] 0.00ns (grouped into LUT with out node tmp_142)
:29  %tmp_140 = zext i8 %tmp_138 to i128

ST_23: tmp_141 [1/1] 0.00ns (grouped into LUT with out node tmp_144)
:30  %tmp_141 = zext i8 %tmp_139 to i128

ST_23: tmp_142 [1/1] 3.65ns (out node of the LUT)
:31  %tmp_142 = lshr i128 %tmp_137, %tmp_140

ST_23: tmp_143 [1/1] 0.00ns (grouped into LUT with out node tmp_144)
:32  %tmp_143 = lshr i128 -1, %tmp_141

ST_23: tmp_144 [1/1] 1.37ns (out node of the LUT)
:33  %tmp_144 = and i128 %tmp_142, %tmp_143

ST_23: tmp_145 [1/1] 0.00ns
:34  %tmp_145 = trunc i128 %tmp_144 to i32

ST_23: tmp_28 [1/1] 0.00ns
:36  %tmp_28 = zext i32 %w_index_cast to i64

ST_23: conv1_weight_addr [1/1] 0.00ns
:37  %conv1_weight_addr = getelementptr inbounds [450 x float]* @conv1_weight, i64 0, i64 %tmp_28

ST_23: conv1_weight_load [2/2] 2.39ns
:38  %conv1_weight_load = load float* %conv1_weight_addr, align 4


 <State 24>: 8.09ns
ST_24: tmp_62 [1/1] 0.00ns
:35  %tmp_62 = bitcast i32 %tmp_145 to float

ST_24: conv1_weight_load [1/2] 2.39ns
:38  %conv1_weight_load = load float* %conv1_weight_addr, align 4

ST_24: tmp_29 [4/4] 5.70ns
:39  %tmp_29 = fmul float %tmp_62, %conv1_weight_load


 <State 25>: 5.70ns
ST_25: tmp_29 [3/4] 5.70ns
:39  %tmp_29 = fmul float %tmp_62, %conv1_weight_load


 <State 26>: 5.70ns
ST_26: tmp_29 [2/4] 5.70ns
:39  %tmp_29 = fmul float %tmp_62, %conv1_weight_load


 <State 27>: 5.70ns
ST_27: tmp_29 [1/4] 5.70ns
:39  %tmp_29 = fmul float %tmp_62, %conv1_weight_load


 <State 28>: 7.26ns
ST_28: sum_3 [5/5] 7.26ns
:40  %sum_3 = fadd float %sum_2, %tmp_29


 <State 29>: 7.26ns
ST_29: sum_3 [4/5] 7.26ns
:40  %sum_3 = fadd float %sum_2, %tmp_29


 <State 30>: 7.26ns
ST_30: sum_3 [3/5] 7.26ns
:40  %sum_3 = fadd float %sum_2, %tmp_29


 <State 31>: 7.26ns
ST_31: sum_3 [2/5] 7.26ns
:40  %sum_3 = fadd float %sum_2, %tmp_29


 <State 32>: 7.26ns
ST_32: stg_216 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str17) nounwind

ST_32: sum_3 [1/5] 7.26ns
:40  %sum_3 = fadd float %sum_2, %tmp_29

ST_32: stg_218 [1/1] 0.00ns
:41  br label %11


 <State 33>: 4.52ns
ST_33: tmp_51 [17/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 34>: 4.52ns
ST_34: tmp_51 [16/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 35>: 4.52ns
ST_35: tmp_51 [15/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 36>: 4.52ns
ST_36: tmp_51 [14/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 37>: 4.52ns
ST_37: tmp_51 [13/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 38>: 4.52ns
ST_38: tmp_51 [12/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 39>: 4.52ns
ST_39: tmp_51 [11/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 40>: 4.52ns
ST_40: tmp_51 [10/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 41>: 4.52ns
ST_41: tmp_51 [9/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 42>: 4.52ns
ST_42: tmp_51 [8/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 43>: 4.52ns
ST_43: tmp_51 [7/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 44>: 4.52ns
ST_44: tmp_51 [6/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 45>: 4.52ns
ST_45: tmp_51 [5/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 46>: 4.52ns
ST_46: tmp_51 [4/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 47>: 4.52ns
ST_47: tmp_51 [3/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 48>: 4.52ns
ST_48: tmp_51 [2/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 49>: 4.52ns
ST_49: tmp_51 [1/18] 4.52ns
:0  %tmp_51 = urem i14 %o_index, 1176


 <State 50>: 6.38ns
ST_50: tmp_105 [1/1] 0.00ns
:1  %tmp_105 = trunc i14 %tmp_51 to i11

ST_50: zext1_cast [1/1] 0.00ns
:4  %zext1_cast = zext i11 %tmp_105 to i24

ST_50: mul2 [1/1] 6.38ns
:5  %mul2 = mul i24 %zext1_cast, 3567

ST_50: tmp_106 [1/1] 0.00ns
:6  %tmp_106 = call i5 @_ssdm_op_PartSelect.i5.i24.i32.i32(i24 %mul2, i32 19, i32 23)

ST_50: newIndex [15/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 51>: 4.31ns
ST_51: newIndex [14/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 52>: 4.31ns
ST_52: newIndex [13/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 53>: 4.31ns
ST_53: newIndex [12/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 54>: 4.31ns
ST_54: newIndex [11/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 55>: 4.31ns
ST_55: newIndex [10/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 56>: 4.31ns
ST_56: newIndex [9/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 57>: 4.31ns
ST_57: newIndex [8/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 58>: 4.31ns
ST_58: newIndex [7/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 59>: 4.31ns
ST_59: newIndex [6/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 60>: 4.31ns
ST_60: newIndex [5/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 61>: 4.31ns
ST_61: newIndex [4/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 62>: 4.31ns
ST_62: newIndex [3/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 63>: 4.31ns
ST_63: newIndex [2/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147


 <State 64>: 7.02ns
ST_64: newIndex [1/15] 4.31ns
:9  %newIndex = urem i11 %tmp_105, 147

ST_64: newIndex8 [1/1] 0.00ns
:10  %newIndex8 = zext i11 %newIndex to i64

ST_64: output_0_addr [1/1] 0.00ns
:11  %output_0_addr = getelementptr [147 x i128]* %output_0, i64 0, i64 %newIndex8

ST_64: output_1_addr [1/1] 0.00ns
:12  %output_1_addr = getelementptr [147 x i128]* %output_1, i64 0, i64 %newIndex8

ST_64: output_2_addr [1/1] 0.00ns
:13  %output_2_addr = getelementptr [147 x i128]* %output_2, i64 0, i64 %newIndex8

ST_64: output_3_addr [1/1] 0.00ns
:14  %output_3_addr = getelementptr [147 x i128]* %output_3, i64 0, i64 %newIndex8

ST_64: output_4_addr [1/1] 0.00ns
:15  %output_4_addr = getelementptr [147 x i128]* %output_4, i64 0, i64 %newIndex8

ST_64: output_5_addr [1/1] 0.00ns
:16  %output_5_addr = getelementptr [147 x i128]* %output_5, i64 0, i64 %newIndex8

ST_64: output_6_addr [1/1] 0.00ns
:17  %output_6_addr = getelementptr [147 x i128]* %output_6, i64 0, i64 %newIndex8

ST_64: output_7_addr [1/1] 0.00ns
:18  %output_7_addr = getelementptr [147 x i128]* %output_7, i64 0, i64 %newIndex8

ST_64: output_0_load [2/2] 2.71ns
:20  %output_0_load = load i128* %output_0_addr, align 8

ST_64: output_1_load [2/2] 2.71ns
:21  %output_1_load = load i128* %output_1_addr, align 8

ST_64: output_2_load [2/2] 2.71ns
:22  %output_2_load = load i128* %output_2_addr, align 8

ST_64: output_3_load [2/2] 2.71ns
:23  %output_3_load = load i128* %output_3_addr, align 8

ST_64: output_4_load [2/2] 2.71ns
:24  %output_4_load = load i128* %output_4_addr, align 8

ST_64: output_5_load [2/2] 2.71ns
:25  %output_5_load = load i128* %output_5_addr, align 8

ST_64: output_6_load [2/2] 2.71ns
:26  %output_6_load = load i128* %output_6_addr, align 8

ST_64: output_7_load [2/2] 2.71ns
:27  %output_7_load = load i128* %output_7_addr, align 8

ST_64: tmp_54 [1/1] 0.00ns
:31  %tmp_54 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %tmp_20, i5 0)

ST_64: tmp_55 [1/1] 0.00ns
:32  %tmp_55 = or i9 %tmp_54, 31

ST_64: tmp_108 [1/1] 2.03ns
:33  %tmp_108 = icmp ugt i9 %tmp_54, %tmp_55

ST_64: tmp_110 [1/1] 0.00ns
:35  %tmp_110 = trunc i9 %tmp_55 to i8


 <State 65>: 8.73ns
ST_65: arrayNo [1/1] 0.00ns
:7  %arrayNo = sext i5 %tmp_106 to i11

ST_65: arrayNo_cast [1/1] 0.00ns
:8  %arrayNo_cast = zext i11 %arrayNo to i14

ST_65: tmp_52 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:19  %tmp_52 = bitcast float %sum to i32

ST_65: output_0_load [1/2] 2.71ns
:20  %output_0_load = load i128* %output_0_addr, align 8

ST_65: output_1_load [1/2] 2.71ns
:21  %output_1_load = load i128* %output_1_addr, align 8

ST_65: output_2_load [1/2] 2.71ns
:22  %output_2_load = load i128* %output_2_addr, align 8

ST_65: output_3_load [1/2] 2.71ns
:23  %output_3_load = load i128* %output_3_addr, align 8

ST_65: output_4_load [1/2] 2.71ns
:24  %output_4_load = load i128* %output_4_addr, align 8

ST_65: output_5_load [1/2] 2.71ns
:25  %output_5_load = load i128* %output_5_addr, align 8

ST_65: output_6_load [1/2] 2.71ns
:26  %output_6_load = load i128* %output_6_addr, align 8

ST_65: output_7_load [1/2] 2.71ns
:27  %output_7_load = load i128* %output_7_addr, align 8

ST_65: tmp_53 [1/1] 1.94ns
:28  %tmp_53 = call i128 @_ssdm_op_Mux.ap_auto.8i128.i14(i128 %output_0_load, i128 %output_1_load, i128 %output_2_load, i128 %output_3_load, i128 %output_4_load, i128 %output_5_load, i128 %output_6_load, i128 %output_7_load, i14 %arrayNo_cast)

ST_65: tmp_109 [1/1] 0.00ns
:34  %tmp_109 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %tmp_107, i5 0)

ST_65: tmp_111 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:36  %tmp_111 = zext i32 %tmp_52 to i128

ST_65: tmp_112 [1/1] 1.72ns
:37  %tmp_112 = sub i8 127, %tmp_109

ST_65: tmp_113 [1/1] 0.00ns (grouped into LUT with out node tmp_116)
:38  %tmp_113 = select i1 %tmp_108, i8 %tmp_109, i8 %tmp_110

ST_65: tmp_114 [1/1] 0.00ns (grouped into LUT with out node p_demorgan)
:39  %tmp_114 = select i1 %tmp_108, i8 %tmp_110, i8 %tmp_109

ST_65: tmp_115 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:40  %tmp_115 = select i1 %tmp_108, i8 %tmp_112, i8 %tmp_109

ST_65: tmp_116 [1/1] 1.72ns (out node of the LUT)
:41  %tmp_116 = sub i8 127, %tmp_113

ST_65: tmp_117 [1/1] 0.00ns (grouped into LUT with out node tmp_120)
:42  %tmp_117 = zext i8 %tmp_115 to i128

ST_65: tmp_118 [1/1] 0.00ns (grouped into LUT with out node p_demorgan)
:43  %tmp_118 = zext i8 %tmp_114 to i128

ST_65: tmp_119 [1/1] 0.00ns (grouped into LUT with out node p_demorgan)
:44  %tmp_119 = zext i8 %tmp_116 to i128

ST_65: tmp_120 [1/1] 2.80ns (out node of the LUT)
:45  %tmp_120 = shl i128 %tmp_111, %tmp_117

ST_65: tmp_121 [1/1] 0.00ns (grouped into LUT with out node tmp_128)
:46  %tmp_121 = call i128 @llvm.part.select.i128(i128 %tmp_120, i32 127, i32 0)

ST_65: tmp_122 [1/1] 0.00ns (grouped into LUT with out node tmp_128)
:47  %tmp_122 = select i1 %tmp_108, i128 %tmp_121, i128 %tmp_120

ST_65: tmp_123 [1/1] 0.00ns (grouped into LUT with out node p_demorgan)
:48  %tmp_123 = shl i128 -1, %tmp_118

ST_65: tmp_124 [1/1] 0.00ns (grouped into LUT with out node p_demorgan)
:49  %tmp_124 = lshr i128 -1, %tmp_119

ST_65: p_demorgan [1/1] 1.37ns (out node of the LUT)
:50  %p_demorgan = and i128 %tmp_123, %tmp_124

ST_65: tmp_125 [1/1] 0.00ns (grouped into LUT with out node tmp_128)
:51  %tmp_125 = xor i128 %p_demorgan, -1

ST_65: tmp_126 [1/1] 0.00ns (grouped into LUT with out node tmp_128)
:52  %tmp_126 = and i128 %tmp_53, %tmp_125

ST_65: tmp_127 [1/1] 0.00ns (grouped into LUT with out node tmp_128)
:53  %tmp_127 = and i128 %tmp_122, %p_demorgan

ST_65: tmp_128 [1/1] 1.37ns (out node of the LUT)
:54  %tmp_128 = or i128 %tmp_126, %tmp_127

ST_65: stg_308 [1/1] 1.91ns
:55  switch i11 %arrayNo, label %branch7 [
    i11 0, label %branch0
    i11 1, label %branch1
    i11 2, label %branch2
    i11 3, label %branch3
    i11 4, label %branch4
    i11 5, label %branch5
    i11 6, label %branch6
  ]

ST_65: stg_309 [1/1] 2.71ns
branch6:0  store i128 %tmp_128, i128* %output_6_addr, align 8

ST_65: stg_310 [1/1] 0.00ns
branch6:1  br label %16

ST_65: stg_311 [1/1] 2.71ns
branch5:0  store i128 %tmp_128, i128* %output_5_addr, align 8

ST_65: stg_312 [1/1] 0.00ns
branch5:1  br label %16

ST_65: stg_313 [1/1] 2.71ns
branch4:0  store i128 %tmp_128, i128* %output_4_addr, align 8

ST_65: stg_314 [1/1] 0.00ns
branch4:1  br label %16

ST_65: stg_315 [1/1] 2.71ns
branch3:0  store i128 %tmp_128, i128* %output_3_addr, align 8

ST_65: stg_316 [1/1] 0.00ns
branch3:1  br label %16

ST_65: stg_317 [1/1] 2.71ns
branch2:0  store i128 %tmp_128, i128* %output_2_addr, align 8

ST_65: stg_318 [1/1] 0.00ns
branch2:1  br label %16

ST_65: stg_319 [1/1] 2.71ns
branch1:0  store i128 %tmp_128, i128* %output_1_addr, align 8

ST_65: stg_320 [1/1] 0.00ns
branch1:1  br label %16

ST_65: stg_321 [1/1] 2.71ns
branch0:0  store i128 %tmp_128, i128* %output_0_addr, align 8

ST_65: stg_322 [1/1] 0.00ns
branch0:1  br label %16

ST_65: stg_323 [1/1] 2.71ns
branch7:0  store i128 %tmp_128, i128* %output_7_addr, align 8

ST_65: stg_324 [1/1] 0.00ns
branch7:1  br label %16

ST_65: empty_46 [1/1] 0.00ns
:0  %empty_46 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str14, i32 %tmp_50)

ST_65: stg_326 [1/1] 0.00ns
:1  br label %5



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
