# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 100
set MemName dut_dense_mlp_fc3_weight
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 168
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "00111110000001001111001110110110" "00111110010100100010101011000000" "00111110001100101100010110110100" "00111101001110101110000111111100" "00111010101101110111010101011000" "10111110000001001101000011010110" "10111110000110011001100101010000" "00111110011001001100010101010011" "00111100010110110101100111100001" "00111101100100001011010100110101" "10111101100010000001111001010100" "10111100101001011000001100111110" "00111101000100101101010001010011" "10111101101111110100111111110111" "10111110010100100000001010100000" "00111101101100001010111011100100" "10111101000000111111011001100010" "10111110000101110000111011101101" "00111101001100101101111011001101" "10111101000100110100100110111111" "00111101101100110111011100011101" "00111101111010101111111110110111" "10111110000010110010011110100110" "00111110000000110110000001010101" "10111110000000111101000011100100" "00111101111110110010101001001100" "00111110010001110100011100110011" "10111100111100111110000011000001" "10111101110011000101110111010010" "00111110010101111100010000110010" "10111101101011100111010101011100" "10111110000110101100101110011101" "10111110010110111000110010000010" "10111110010000110000111011010100" "10111101100110010011111101101100" "10111101111101001101001001010011" "00111101011000001011100100010010" "10111101111111001110111011101001" "00111101011111010110100100101100" "00111101111101100101010001100110" "10111101110001101100110000010111" "00111110001000001111010110001010" "10111011100011110100011110000100" "10111101110000100000010000000111" "00111101101010111110110110001001" "10111101110100000101011110011111" "10111101011110111100000001110011" "10111110000011011101110010100100" "10111100001101011001101001011110" "10111101101010111011101010000110" "10111101101100101010101010110010" "10111101110010011111111101100011" "00111110000110000100000010011110" "10111101100110100101001111110011" "10111110010000010001110000011010" "00111101100000111100111011011011" "10111110000000001000111000110101" "00111101010110011011010100011011" "00111101100011011000010011011101" "10111110010010101100100101000110" "00111101101010101001010011110100" "00111101001001101001001111000011" "10111101101111011101111110001000" "00111110001001011110110001000110" "00111100110010101001101111100101" "00111100010010010110001010000011" "00111101011110100010011110010100" "00111101110000000010110000111110" "00111110000010010000001011001001" "00111110010000011011010001100011" "00111110001000000001010001110111" "10111100100110101011100001001100" "10111101111000110110101000010101" "10111101101001100111001010001011" "10111100101000101011101001001110" "00111101111010011100001101111101" "10111101110100011110011010100001" "00111110010101000101111010101011" "00111011000101100100110100010110" "00111101110101011001111010101110" "10111110001011011011010001101001" "00111110001000110000110100111100" "00111101100010111011001011010111" "00111101010111001000101000000111" "00111101000101101001100110010101" "10111101010001010001011000001011" "10111110001001111110110010101110" "10111110000001111010011111101001" "00111100001011100100111000110110" "00111100110011100001001011000010" "00111101101011101111010001001100" "10111101110101011100011101110101" "10111101100001010011111110011110" "00111101011110111110101011111011" "10111101100010110011111001001100" "00111101100010011100011000011000" "00111110000100010011011110101111" "00111110001110000000001010011010" "00111110011000111011110010010111" "00111100111000010100100000001010" "00111101111101010000101100010111" "00111110001011100001000111111100" "10111101011011111011000011010000" "10111101011011011001100101010010" "00111101101100100111001110010000" "10111011001010001101100110000100" "00111101111111110101101100011000" "10111101100001110011001110110001" "00111101111001100101111101000111" "10111110000000111100100010110011" "10111110010001111000010100010001" "10111101010110101010011000000001" "00111100101101001110000001010101" "10111101010111000000100101101010" "00111110010000110010100001100000" "00111101001011000110111010101010" "00111110010110001000111011100011" "00111110000000011011110100111110" "00111101110011011011000110111110" "00111100110001000101100100111000" "10111110000000000001001011010100" "00111101101011011000101001010110" "10111110000001111100110001001000" "10111110001110100100100010111010" "00111010001101101111010011110000" "10111110000011110100001110010010" "10111110000110110110110101111100" "10111101111001001011111000100111" "00111101000000010111010000010011" "00111110000110101011010000110111" "00111110000111110101101101100001" "00111110001011101011001010111000" "00111101001110111000100101110101" "00111101010011111011001111100001" "00111101101100111111110000001010" "10111101100111010110101000111110" "10111101100010000111110011000010" "00111100011011101000101101010011" "00111110000011101000001010001100" "10111110000110100000010010011011" "00111101101001101100111010111011" "10111101110100001011111110001011" "00111100101100010110001011110100" "00111101110111000100000101110111" "10111101110111010011110101110011" "10111101111101011001001100011111" "10111101110101000111111111011000" "10111110000100010001000111111000" "00111100011000101101111101011011" "00111101010000001001001001011111" "00111100110111001111000010010011" "00111100011011011101101100001100" "10111101111001000001111010000100" "10111110001000100101000011100011" "10111110010010100010010101010010" "10111101101100010001100011110101" "00111100000100001011101001100000" "00111101101000111100000001000101" "00111010010011000010011010001010" "00111011100110000011001101011001" "10111101100001001011010111100101" "10111110001111010110110110101111" "00111100011000001100001101001000" "00111101001111101010010000101000" "00111110010001000010111101100111" "00111100101110100101000010011101" "10111110000001011011001111111010" "00111100101110110100011010011101" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.39
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 101 \
    name input_0 \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename input_0 \
    op interface \
    ports { input_0_address0 { O 8 vector } input_0_ce0 { O 1 bit } input_0_q0 { I 128 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'input_0'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 102 \
    name output_0 \
    reset_level 1 \
    sync_rst true \
    dir IO \
    corename output_0 \
    op interface \
    ports { output_0_address0 { O 8 vector } output_0_ce0 { O 1 bit } output_0_we0 { O 1 bit } output_0_d0 { O 128 vector } output_0_q0 { I 128 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'output_0'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


