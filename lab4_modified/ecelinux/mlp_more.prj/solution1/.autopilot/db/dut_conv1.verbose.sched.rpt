

================================================================
== Vivado HLS Report for 'dut_conv1'
================================================================
* Date:           Fri Dec  9 22:57:34 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        mlp_more.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.73|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  9984353|  9984353|  9984353|  9984353|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_N           |  9984352|  9984352|    624022|          -|          -|    16|    no    |
        | + LOOP_X          |   624020|   624020|     62402|          -|          -|    10|    no    |
        |  ++ LOOP_Y        |    62400|    62400|      6240|          -|          -|    10|    no    |
        |   +++ LOOP_M      |     6222|     6222|      1037|          -|          -|     6|    no    |
        |    ++++ LOOP_C    |     1035|     1035|       207|          -|          -|     5|    no    |
        |     +++++ LOOP_R  |      205|      205|        41|          -|          -|     5|    no    |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 63
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond4)
3 --> 
	4  / (!exitcond5)
	2  / (exitcond5)
4 --> 
	5  / (!exitcond2)
	3  / (exitcond2)
5 --> 
	48  / (exitcond6)
	6  / (!exitcond6)
6 --> 
	7  / (!exitcond1)
	5  / (exitcond1)
7 --> 
	8  / (!exitcond)
	6  / (exitcond)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	7  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_64 [1/1] 1.57ns
:0  br label %1


 <State 2>: 1.91ns
ST_2: n [1/1] 0.00ns
:0  %n = phi i5 [ 0, %0 ], [ %n_2, %18 ]

ST_2: empty [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_2: exitcond4 [1/1] 1.91ns
:2  %exitcond4 = icmp eq i5 %n, -16

ST_2: n_2 [1/1] 1.72ns
:3  %n_2 = add i5 %n, 1

ST_2: stg_69 [1/1] 0.00ns
:4  br i1 %exitcond4, label %19, label %2

ST_2: stg_70 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str12) nounwind

ST_2: tmp_63 [1/1] 0.00ns
:1  %tmp_63 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str12)

ST_2: tmp_146 [1/1] 0.00ns
:2  %tmp_146 = trunc i5 %n to i4

ST_2: p_shl3 [1/1] 0.00ns
:3  %p_shl3 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_146, i3 0)

ST_2: p_shl3_cast [1/1] 0.00ns
:4  %p_shl3_cast = zext i7 %p_shl3 to i8

ST_2: tmp_147 [1/1] 0.00ns
:5  %tmp_147 = shl i5 %n, 1

ST_2: p_shl4_cast1 [1/1] 0.00ns
:6  %p_shl4_cast1 = zext i5 %tmp_147 to i6

ST_2: p_shl4_cast [1/1] 0.00ns
:7  %p_shl4_cast = zext i5 %tmp_147 to i8

ST_2: tmp_19 [1/1] 1.72ns
:8  %tmp_19 = sub i8 %p_shl3_cast, %p_shl4_cast

ST_2: stg_79 [1/1] 1.57ns
:9  br label %3

ST_2: stg_80 [1/1] 0.00ns
:0  ret void


 <State 3>: 3.44ns
ST_3: x [1/1] 0.00ns
:0  %x = phi i4 [ 0, %2 ], [ %x_2, %17 ]

ST_3: x_cast [1/1] 0.00ns
:1  %x_cast = zext i4 %x to i6

ST_3: empty_49 [1/1] 0.00ns
:2  %empty_49 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_3: exitcond5 [1/1] 1.88ns
:3  %exitcond5 = icmp eq i4 %x, -6

ST_3: x_2 [1/1] 0.80ns
:4  %x_2 = add i4 %x, 1

ST_3: stg_86 [1/1] 0.00ns
:5  br i1 %exitcond5, label %18, label %4

ST_3: stg_87 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str13) nounwind

ST_3: tmp_64 [1/1] 0.00ns
:1  %tmp_64 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str13)

ST_3: tmp1 [1/1] 1.72ns
:2  %tmp1 = add i6 %x_cast, %p_shl4_cast1

ST_3: tmp1_cast [1/1] 0.00ns
:3  %tmp1_cast = zext i6 %tmp1 to i8

ST_3: tmp [1/1] 1.72ns
:4  %tmp = add i8 %p_shl3_cast, %tmp1_cast

ST_3: p_shl5 [1/1] 0.00ns
:5  %p_shl5 = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %tmp, i3 0)

ST_3: p_shl6 [1/1] 0.00ns
:6  %p_shl6 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %tmp, i1 false)

ST_3: stg_94 [1/1] 1.57ns
:7  br label %5

ST_3: empty_58 [1/1] 0.00ns
:0  %empty_58 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str12, i32 %tmp_63)

ST_3: stg_96 [1/1] 0.00ns
:1  br label %1


 <State 4>: 3.68ns
ST_4: y [1/1] 0.00ns
:0  %y = phi i4 [ 0, %4 ], [ %y_2, %16 ]

ST_4: y_cast [1/1] 0.00ns
:1  %y_cast = zext i4 %y to i12

ST_4: y_cast1 [1/1] 0.00ns
:2  %y_cast1 = zext i4 %y to i9

ST_4: exitcond2 [1/1] 1.88ns
:3  %exitcond2 = icmp eq i4 %y, -6

ST_4: empty_50 [1/1] 0.00ns
:4  %empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)

ST_4: y_2 [1/1] 0.80ns
:5  %y_2 = add i4 %y, 1

ST_4: stg_103 [1/1] 0.00ns
:6  br i1 %exitcond2, label %17, label %6

ST_4: stg_104 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str14) nounwind

ST_4: tmp_65 [1/1] 0.00ns
:1  %tmp_65 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str14)

ST_4: tmp2 [1/1] 1.84ns
:2  %tmp2 = add i9 %p_shl6, %y_cast1

ST_4: tmp2_cast [1/1] 0.00ns
:3  %tmp2_cast = zext i9 %tmp2 to i11

ST_4: o_index [1/1] 1.84ns
:4  %o_index = add i11 %tmp2_cast, %p_shl5

ST_4: stg_109 [1/1] 1.57ns
:5  br label %7

ST_4: empty_57 [1/1] 0.00ns
:0  %empty_57 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str13, i32 %tmp_64)

ST_4: stg_111 [1/1] 0.00ns
:1  br label %3


 <State 5>: 8.10ns
ST_5: sum [1/1] 0.00ns
:0  %sum = phi float [ 0.000000e+00, %6 ], [ %sum_1, %14 ]

ST_5: m [1/1] 0.00ns
:1  %m = phi i3 [ 0, %6 ], [ %m_3, %14 ]

ST_5: m_cast1 [1/1] 0.00ns
:2  %m_cast1 = zext i3 %m to i8

ST_5: empty_51 [1/1] 0.00ns
:3  %empty_51 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_5: exitcond6 [1/1] 1.62ns
:4  %exitcond6 = icmp eq i3 %m, -2

ST_5: m_3 [1/1] 0.80ns
:5  %m_3 = add i3 %m, 1

ST_5: stg_118 [1/1] 0.00ns
:6  br i1 %exitcond6, label %15, label %8

ST_5: stg_119 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str15) nounwind

ST_5: tmp_68 [1/1] 0.00ns
:1  %tmp_68 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str15)

ST_5: p_shl7 [1/1] 0.00ns
:2  %p_shl7 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %m, i4 0)

ST_5: p_shl7_cast [1/1] 0.00ns
:3  %p_shl7_cast = zext i7 %p_shl7 to i8

ST_5: p_shl8 [1/1] 0.00ns
:4  %p_shl8 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %m, i1 false)

ST_5: p_shl8_cast [1/1] 0.00ns
:5  %p_shl8_cast = zext i4 %p_shl8 to i8

ST_5: tmp_22 [1/1] 1.72ns
:6  %tmp_22 = sub i8 %p_shl7_cast, %p_shl8_cast

ST_5: tmp_23 [1/1] 1.72ns
:7  %tmp_23 = add i8 %m_cast1, %tmp_19

ST_5: tmp_23_cast_cast [1/1] 0.00ns
:8  %tmp_23_cast_cast = sext i8 %tmp_23 to i13

ST_5: tmp_24 [1/1] 6.38ns
:9  %tmp_24 = mul i13 %tmp_23_cast_cast, 25

ST_5: stg_129 [1/1] 1.57ns
:10  br label %9

ST_5: tmp_27 [1/1] 2.11ns
:0  %tmp_27 = icmp ult i11 %o_index, -872

ST_5: tmp_28 [1/1] 1.84ns
:1  %tmp_28 = add i11 872, %o_index

ST_5: tmp_66 [1/1] 1.37ns
:2  %tmp_66 = select i1 %tmp_27, i11 %o_index, i11 %tmp_28

ST_5: newIndex4 [15/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 6>: 1.96ns
ST_6: sum_1 [1/1] 0.00ns
:0  %sum_1 = phi float [ %sum, %8 ], [ %sum_2, %13 ]

ST_6: c [1/1] 0.00ns
:1  %c = phi i3 [ 0, %8 ], [ %c_2, %13 ]

ST_6: c_cast [1/1] 0.00ns
:2  %c_cast = zext i3 %c to i13

ST_6: c_cast2 [1/1] 0.00ns
:3  %c_cast2 = zext i3 %c to i12

ST_6: exitcond1 [1/1] 1.62ns
:4  %exitcond1 = icmp eq i3 %c, -3

ST_6: empty_52 [1/1] 0.00ns
:5  %empty_52 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_6: c_2 [1/1] 0.80ns
:6  %c_2 = add i3 %c, 1

ST_6: stg_141 [1/1] 0.00ns
:7  br i1 %exitcond1, label %14, label %10

ST_6: stg_142 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str16) nounwind

ST_6: tmp_69 [1/1] 0.00ns
:1  %tmp_69 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str16)

ST_6: tmp8 [1/1] 1.96ns
:2  %tmp8 = add i13 %c_cast, %tmp_24

ST_6: stg_145 [1/1] 1.57ns
:3  br label %11

ST_6: empty_55 [1/1] 0.00ns
:0  %empty_55 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str15, i32 %tmp_68)

ST_6: stg_147 [1/1] 0.00ns
:1  br label %7


 <State 7>: 7.10ns
ST_7: sum_2 [1/1] 0.00ns
:0  %sum_2 = phi float [ %sum_1, %10 ], [ %sum_3, %12 ]

ST_7: r [1/1] 0.00ns
:1  %r = phi i3 [ 0, %10 ], [ %r_2, %12 ]

ST_7: r_cast1 [1/1] 0.00ns
:2  %r_cast1 = zext i3 %r to i5

ST_7: r_cast [1/1] 0.00ns
:3  %r_cast = zext i3 %r to i4

ST_7: exitcond [1/1] 1.62ns
:4  %exitcond = icmp eq i3 %r, -3

ST_7: empty_53 [1/1] 0.00ns
:5  %empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_7: r_2 [1/1] 0.80ns
:6  %r_2 = add i3 %r, 1

ST_7: stg_155 [1/1] 0.00ns
:7  br i1 %exitcond, label %13, label %12

ST_7: tmp6 [1/1] 0.80ns
:1  %tmp6 = add i4 %x, %r_cast

ST_7: tmp6_cast [1/1] 0.00ns
:2  %tmp6_cast = zext i4 %tmp6 to i8

ST_7: tmp4 [1/1] 1.72ns
:3  %tmp4 = add i8 %tmp6_cast, %tmp_22

ST_7: p_shl9 [1/1] 0.00ns
:4  %p_shl9 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp4, i4 0)

ST_7: p_shl1 [1/1] 0.00ns
:5  %p_shl1 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %tmp4, i1 false)

ST_7: p_shl1_cast [1/1] 0.00ns
:6  %p_shl1_cast = sext i9 %p_shl1 to i12

ST_7: tmp5 [1/1] 1.84ns
:7  %tmp5 = sub i12 %p_shl9, %p_shl1_cast

ST_7: tmp7 [1/1] 1.37ns
:8  %tmp7 = add i12 %y_cast, %tmp5

ST_7: i_index [1/1] 1.37ns
:9  %i_index = add i12 %tmp7, %c_cast2

ST_7: p_shl [1/1] 0.00ns
:10  %p_shl = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %r, i2 0)

ST_7: tmp9 [1/1] 1.72ns
:11  %tmp9 = add i5 %p_shl, %r_cast1

ST_7: tmp9_cast [1/1] 0.00ns
:12  %tmp9_cast = zext i5 %tmp9 to i13

ST_7: w_index [1/1] 1.96ns
:13  %w_index = add i13 %tmp9_cast, %tmp8

ST_7: empty_54 [1/1] 0.00ns
:0  %empty_54 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str16, i32 %tmp_69)

ST_7: stg_170 [1/1] 0.00ns
:1  br label %9


 <State 8>: 6.38ns
ST_8: tmp_70 [1/1] 0.00ns
:15  %tmp_70 = sext i12 %i_index to i14

ST_8: tmp_71 [16/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176

ST_8: zext1_cast [1/1] 0.00ns
:18  %zext1_cast = zext i14 %tmp_70 to i30

ST_8: mul2 [1/1] 6.38ns
:19  %mul2 = mul i30 %zext1_cast, 28533

ST_8: tmp_29 [1/1] 0.00ns
:44  %tmp_29 = call i4 @_ssdm_op_PartSelect.i4.i30.i32.i32(i30 %mul2, i32 25, i32 28)

ST_8: tmp_162 [1/1] 0.00ns
:45  %tmp_162 = call i3 @_ssdm_op_PartSelect.i3.i30.i32.i32(i30 %mul2, i32 25, i32 27)


 <State 9>: 4.38ns
ST_9: tmp_71 [15/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 10>: 4.38ns
ST_10: tmp_71 [14/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 11>: 4.38ns
ST_11: tmp_71 [13/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 12>: 4.38ns
ST_12: tmp_71 [12/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 13>: 4.38ns
ST_13: tmp_71 [11/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 14>: 4.38ns
ST_14: tmp_71 [10/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 15>: 4.38ns
ST_15: tmp_71 [9/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 16>: 4.38ns
ST_16: tmp_71 [8/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 17>: 4.38ns
ST_17: tmp_71 [7/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 18>: 4.38ns
ST_18: tmp_71 [6/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 19>: 4.38ns
ST_19: tmp_71 [5/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 20>: 4.38ns
ST_20: tmp_71 [4/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 21>: 4.38ns
ST_21: tmp_71 [3/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 22>: 4.38ns
ST_22: tmp_71 [2/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176


 <State 23>: 8.68ns
ST_23: tmp_71 [1/16] 4.38ns
:16  %tmp_71 = urem i12 %i_index, 1176

ST_23: tmp_160 [1/1] 0.00ns
:17  %tmp_160 = trunc i12 %tmp_71 to i11

ST_23: newIndex [15/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 24>: 6.38ns
ST_24: zext_cast [1/1] 0.00ns
:20  %zext_cast = zext i11 %tmp_160 to i24

ST_24: mul [1/1] 6.38ns
:21  %mul = mul i24 %zext_cast, 3567

ST_24: tmp_161 [1/1] 0.00ns
:22  %tmp_161 = call i5 @_ssdm_op_PartSelect.i5.i24.i32.i32(i24 %mul, i32 19, i32 23)

ST_24: newIndex [14/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 25>: 4.31ns
ST_25: newIndex [13/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 26>: 4.31ns
ST_26: newIndex [12/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 27>: 4.31ns
ST_27: newIndex [11/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 28>: 4.31ns
ST_28: newIndex [10/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 29>: 4.31ns
ST_29: newIndex [9/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 30>: 4.31ns
ST_30: newIndex [8/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 31>: 4.31ns
ST_31: newIndex [7/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 32>: 4.31ns
ST_32: newIndex [6/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 33>: 4.31ns
ST_33: newIndex [5/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 34>: 4.31ns
ST_34: newIndex [4/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 35>: 4.31ns
ST_35: newIndex [3/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 36>: 4.31ns
ST_36: newIndex [2/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147


 <State 37>: 7.02ns
ST_37: newIndex [1/15] 4.31ns
:25  %newIndex = urem i11 %tmp_160, 147

ST_37: newIndex6 [1/1] 0.00ns
:26  %newIndex6 = zext i11 %newIndex to i64

ST_37: input_0_addr [1/1] 0.00ns
:27  %input_0_addr = getelementptr [147 x i128]* %input_0, i64 0, i64 %newIndex6

ST_37: input_0_load [2/2] 2.71ns
:28  %input_0_load = load i128* %input_0_addr, align 8

ST_37: input_1_addr [1/1] 0.00ns
:29  %input_1_addr = getelementptr [147 x i128]* %input_1, i64 0, i64 %newIndex6

ST_37: input_1_load [2/2] 2.71ns
:30  %input_1_load = load i128* %input_1_addr, align 8

ST_37: input_2_addr [1/1] 0.00ns
:31  %input_2_addr = getelementptr [147 x i128]* %input_2, i64 0, i64 %newIndex6

ST_37: input_2_load [2/2] 2.71ns
:32  %input_2_load = load i128* %input_2_addr, align 8

ST_37: input_3_addr [1/1] 0.00ns
:33  %input_3_addr = getelementptr [147 x i128]* %input_3, i64 0, i64 %newIndex6

ST_37: input_3_load [2/2] 2.71ns
:34  %input_3_load = load i128* %input_3_addr, align 8

ST_37: input_4_addr [1/1] 0.00ns
:35  %input_4_addr = getelementptr [147 x i128]* %input_4, i64 0, i64 %newIndex6

ST_37: input_4_load [2/2] 2.71ns
:36  %input_4_load = load i128* %input_4_addr, align 8

ST_37: input_5_addr [1/1] 0.00ns
:37  %input_5_addr = getelementptr [147 x i128]* %input_5, i64 0, i64 %newIndex6

ST_37: input_5_load [2/2] 2.71ns
:38  %input_5_load = load i128* %input_5_addr, align 8

ST_37: input_6_addr [1/1] 0.00ns
:39  %input_6_addr = getelementptr [147 x i128]* %input_6, i64 0, i64 %newIndex6

ST_37: input_6_load [2/2] 2.71ns
:40  %input_6_load = load i128* %input_6_addr, align 8

ST_37: input_7_addr [1/1] 0.00ns
:41  %input_7_addr = getelementptr [147 x i128]* %input_7, i64 0, i64 %newIndex6

ST_37: input_7_load [2/2] 2.71ns
:42  %input_7_load = load i128* %input_7_addr, align 8


 <State 38>: 8.30ns
ST_38: w_index_cast [1/1] 0.00ns
:14  %w_index_cast = sext i13 %w_index to i32

ST_38: arrayNo [1/1] 0.00ns
:23  %arrayNo = sext i5 %tmp_161 to i11

ST_38: arrayNo_cast [1/1] 0.00ns
:24  %arrayNo_cast = zext i11 %arrayNo to i14

ST_38: input_0_load [1/2] 2.71ns
:28  %input_0_load = load i128* %input_0_addr, align 8

ST_38: input_1_load [1/2] 2.71ns
:30  %input_1_load = load i128* %input_1_addr, align 8

ST_38: input_2_load [1/2] 2.71ns
:32  %input_2_load = load i128* %input_2_addr, align 8

ST_38: input_3_load [1/2] 2.71ns
:34  %input_3_load = load i128* %input_3_addr, align 8

ST_38: input_4_load [1/2] 2.71ns
:36  %input_4_load = load i128* %input_4_addr, align 8

ST_38: input_5_load [1/2] 2.71ns
:38  %input_5_load = load i128* %input_5_addr, align 8

ST_38: input_6_load [1/2] 2.71ns
:40  %input_6_load = load i128* %input_6_addr, align 8

ST_38: input_7_load [1/2] 2.71ns
:42  %input_7_load = load i128* %input_7_addr, align 8

ST_38: tmp_61 [1/1] 1.94ns
:43  %tmp_61 = call i128 @_ssdm_op_Mux.ap_auto.8i128.i14(i128 %input_0_load, i128 %input_1_load, i128 %input_2_load, i128 %input_3_load, i128 %input_4_load, i128 %input_5_load, i128 %input_6_load, i128 %input_7_load, i14 %arrayNo_cast)

ST_38: tmp_72 [1/1] 0.00ns
:46  %tmp_72 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %tmp_29, i5 0)

ST_38: tmp_73 [1/1] 0.00ns
:47  %tmp_73 = or i9 %tmp_72, 31

ST_38: tmp_163 [1/1] 2.03ns
:48  %tmp_163 = icmp ugt i9 %tmp_72, %tmp_73

ST_38: tmp_164 [1/1] 0.00ns
:49  %tmp_164 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %tmp_162, i5 0)

ST_38: tmp_165 [1/1] 0.00ns
:50  %tmp_165 = trunc i9 %tmp_73 to i8

ST_38: tmp_166 [1/1] 0.00ns (grouped into LUT with out node tmp_176)
:51  %tmp_166 = call i128 @llvm.part.select.i128(i128 %tmp_61, i32 127, i32 0)

ST_38: tmp_167 [1/1] 1.72ns
:52  %tmp_167 = sub i8 %tmp_164, %tmp_165

ST_38: tmp_168 [1/1] 1.72ns
:53  %tmp_168 = sub i8 127, %tmp_164

ST_38: tmp_169 [1/1] 1.72ns
:54  %tmp_169 = sub i8 %tmp_165, %tmp_164

ST_38: tmp_170 [1/1] 0.00ns (grouped into LUT with out node tmp_173)
:55  %tmp_170 = select i1 %tmp_163, i8 %tmp_167, i8 %tmp_169

ST_38: tmp_171 [1/1] 0.00ns (grouped into LUT with out node tmp_176)
:56  %tmp_171 = select i1 %tmp_163, i128 %tmp_166, i128 %tmp_61

ST_38: tmp_172 [1/1] 0.00ns (grouped into LUT with out node tmp_176)
:57  %tmp_172 = select i1 %tmp_163, i8 %tmp_168, i8 %tmp_164

ST_38: tmp_173 [1/1] 1.72ns (out node of the LUT)
:58  %tmp_173 = sub i8 127, %tmp_170

ST_38: tmp_174 [1/1] 0.00ns (grouped into LUT with out node tmp_176)
:59  %tmp_174 = zext i8 %tmp_172 to i128

ST_38: tmp_176 [1/1] 3.65ns (out node of the LUT)
:61  %tmp_176 = lshr i128 %tmp_171, %tmp_174

ST_38: tmp_s [1/1] 0.00ns
:66  %tmp_s = zext i32 %w_index_cast to i64

ST_38: conv2_weight_addr [1/1] 0.00ns
:67  %conv2_weight_addr = getelementptr inbounds [2400 x float]* @conv2_weight, i64 0, i64 %tmp_s

ST_38: conv2_weight_load [2/2] 2.39ns
:68  %conv2_weight_load = load float* %conv2_weight_addr, align 4


 <State 39>: 8.09ns
ST_39: tmp_175 [1/1] 0.00ns (grouped into LUT with out node tmp_178)
:60  %tmp_175 = zext i8 %tmp_173 to i128

ST_39: tmp_177 [1/1] 0.00ns (grouped into LUT with out node tmp_178)
:62  %tmp_177 = lshr i128 -1, %tmp_175

ST_39: tmp_178 [1/1] 1.37ns (out node of the LUT)
:63  %tmp_178 = and i128 %tmp_176, %tmp_177

ST_39: tmp_179 [1/1] 0.00ns
:64  %tmp_179 = trunc i128 %tmp_178 to i32

ST_39: tmp_74 [1/1] 0.00ns
:65  %tmp_74 = bitcast i32 %tmp_179 to float

ST_39: conv2_weight_load [1/2] 2.39ns
:68  %conv2_weight_load = load float* %conv2_weight_addr, align 4

ST_39: tmp_30 [4/4] 5.70ns
:69  %tmp_30 = fmul float %tmp_74, %conv2_weight_load


 <State 40>: 5.70ns
ST_40: tmp_30 [3/4] 5.70ns
:69  %tmp_30 = fmul float %tmp_74, %conv2_weight_load


 <State 41>: 5.70ns
ST_41: tmp_30 [2/4] 5.70ns
:69  %tmp_30 = fmul float %tmp_74, %conv2_weight_load


 <State 42>: 5.70ns
ST_42: tmp_30 [1/4] 5.70ns
:69  %tmp_30 = fmul float %tmp_74, %conv2_weight_load


 <State 43>: 7.26ns
ST_43: sum_3 [5/5] 7.26ns
:70  %sum_3 = fadd float %sum_2, %tmp_30


 <State 44>: 7.26ns
ST_44: sum_3 [4/5] 7.26ns
:70  %sum_3 = fadd float %sum_2, %tmp_30


 <State 45>: 7.26ns
ST_45: sum_3 [3/5] 7.26ns
:70  %sum_3 = fadd float %sum_2, %tmp_30


 <State 46>: 7.26ns
ST_46: sum_3 [2/5] 7.26ns
:70  %sum_3 = fadd float %sum_2, %tmp_30


 <State 47>: 7.26ns
ST_47: stg_272 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str17) nounwind

ST_47: sum_3 [1/5] 7.26ns
:70  %sum_3 = fadd float %sum_2, %tmp_30

ST_47: stg_274 [1/1] 0.00ns
:71  br label %11


 <State 48>: 6.38ns
ST_48: zext4_cast [1/1] 0.00ns
:3  %zext4_cast = zext i11 %tmp_66 to i24

ST_48: mul5 [1/1] 6.38ns
:4  %mul5 = mul i24 3567, %zext4_cast

ST_48: tmp_148 [1/1] 0.00ns
:5  %tmp_148 = call i5 @_ssdm_op_PartSelect.i5.i24.i32.i32(i24 %mul5, i32 19, i32 23)

ST_48: newIndex4 [14/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 49>: 4.31ns
ST_49: newIndex4 [13/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 50>: 4.31ns
ST_50: newIndex4 [12/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 51>: 4.31ns
ST_51: newIndex4 [11/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 52>: 4.31ns
ST_52: newIndex4 [10/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 53>: 4.31ns
ST_53: newIndex4 [9/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 54>: 4.31ns
ST_54: newIndex4 [8/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 55>: 4.31ns
ST_55: newIndex4 [7/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 56>: 4.31ns
ST_56: newIndex4 [6/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 57>: 4.31ns
ST_57: newIndex4 [5/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 58>: 4.31ns
ST_58: newIndex4 [4/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 59>: 4.31ns
ST_59: newIndex4 [3/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 60>: 4.31ns
ST_60: newIndex4 [2/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147


 <State 61>: 7.02ns
ST_61: newIndex4 [1/15] 4.31ns
:8  %newIndex4 = urem i11 %tmp_66, 147

ST_61: newIndex5 [1/1] 0.00ns
:9  %newIndex5 = zext i11 %newIndex4 to i64

ST_61: output_0_addr [1/1] 0.00ns
:10  %output_0_addr = getelementptr [147 x i128]* %output_0, i64 0, i64 %newIndex5

ST_61: output_1_addr [1/1] 0.00ns
:11  %output_1_addr = getelementptr [147 x i128]* %output_1, i64 0, i64 %newIndex5

ST_61: output_2_addr [1/1] 0.00ns
:12  %output_2_addr = getelementptr [147 x i128]* %output_2, i64 0, i64 %newIndex5

ST_61: output_3_addr [1/1] 0.00ns
:13  %output_3_addr = getelementptr [147 x i128]* %output_3, i64 0, i64 %newIndex5

ST_61: output_4_addr [1/1] 0.00ns
:14  %output_4_addr = getelementptr [147 x i128]* %output_4, i64 0, i64 %newIndex5

ST_61: output_5_addr [1/1] 0.00ns
:15  %output_5_addr = getelementptr [147 x i128]* %output_5, i64 0, i64 %newIndex5

ST_61: output_6_addr [1/1] 0.00ns
:16  %output_6_addr = getelementptr [147 x i128]* %output_6, i64 0, i64 %newIndex5

ST_61: output_7_addr [1/1] 0.00ns
:17  %output_7_addr = getelementptr [147 x i128]* %output_7, i64 0, i64 %newIndex5

ST_61: output_0_load [2/2] 2.71ns
:19  %output_0_load = load i128* %output_0_addr, align 8

ST_61: output_1_load [2/2] 2.71ns
:20  %output_1_load = load i128* %output_1_addr, align 8

ST_61: output_2_load [2/2] 2.71ns
:21  %output_2_load = load i128* %output_2_addr, align 8

ST_61: output_3_load [2/2] 2.71ns
:22  %output_3_load = load i128* %output_3_addr, align 8

ST_61: output_4_load [2/2] 2.71ns
:23  %output_4_load = load i128* %output_4_addr, align 8

ST_61: output_5_load [2/2] 2.71ns
:24  %output_5_load = load i128* %output_5_addr, align 8

ST_61: output_6_load [2/2] 2.71ns
:25  %output_6_load = load i128* %output_6_addr, align 8

ST_61: output_7_load [2/2] 2.71ns
:26  %output_7_load = load i128* %output_7_addr, align 8


 <State 62>: 8.73ns
ST_62: arrayNo5 [1/1] 0.00ns
:6  %arrayNo5 = sext i5 %tmp_148 to i11

ST_62: arrayNo5_cast [1/1] 0.00ns
:7  %arrayNo5_cast = zext i11 %arrayNo5 to i14

ST_62: tmp_67 [1/1] 0.00ns
:18  %tmp_67 = bitcast float %sum to i32

ST_62: output_0_load [1/2] 2.71ns
:19  %output_0_load = load i128* %output_0_addr, align 8

ST_62: output_1_load [1/2] 2.71ns
:20  %output_1_load = load i128* %output_1_addr, align 8

ST_62: output_2_load [1/2] 2.71ns
:21  %output_2_load = load i128* %output_2_addr, align 8

ST_62: output_3_load [1/2] 2.71ns
:22  %output_3_load = load i128* %output_3_addr, align 8

ST_62: output_4_load [1/2] 2.71ns
:23  %output_4_load = load i128* %output_4_addr, align 8

ST_62: output_5_load [1/2] 2.71ns
:24  %output_5_load = load i128* %output_5_addr, align 8

ST_62: output_6_load [1/2] 2.71ns
:25  %output_6_load = load i128* %output_6_addr, align 8

ST_62: output_7_load [1/2] 2.71ns
:26  %output_7_load = load i128* %output_7_addr, align 8

ST_62: tmp_60 [1/1] 1.94ns
:27  %tmp_60 = call i128 @_ssdm_op_Mux.ap_auto.8i128.i14(i128 %output_0_load, i128 %output_1_load, i128 %output_2_load, i128 %output_3_load, i128 %output_4_load, i128 %output_5_load, i128 %output_6_load, i128 %output_7_load, i14 %arrayNo5_cast)

ST_62: tmp_149 [1/1] 0.00ns (grouped into LUT with out node tmp_158)
:28  %tmp_149 = zext i32 %tmp_67 to i128

ST_62: tmp_150 [1/1] 0.00ns (grouped into LUT with out node tmp_158)
:29  %tmp_150 = call i64 @_ssdm_op_BitConcatenate.i64.i32.i32(i32 %tmp_67, i32 0)

ST_62: sf [1/1] 0.00ns (grouped into LUT with out node tmp_158)
:30  %sf = zext i64 %tmp_150 to i128

ST_62: tmp_151 [1/1] 0.00ns (grouped into LUT with out node tmp_158)
:31  %tmp_151 = select i1 %tmp_27, i128 %tmp_149, i128 %sf

ST_62: tmp_152 [1/1] 0.00ns (grouped into LUT with out node tmp_158)
:32  %tmp_152 = select i1 %tmp_27, i128 -1, i128 -4294967296

ST_62: tmp_153 [1/1] 0.00ns (grouped into LUT with out node tmp_159)
:33  %tmp_153 = select i1 %tmp_27, i128 0, i128 4294967295

ST_62: tmp_154 [1/1] 0.00ns (grouped into LUT with out node tmp_159)
:34  %tmp_154 = select i1 %tmp_27, i128 -4294967296, i128 -18446744073709551616

ST_62: tmp_155 [1/1] 0.00ns (grouped into LUT with out node tmp_159)
:35  %tmp_155 = or i128 %tmp_154, %tmp_153

ST_62: p_not [1/1] 0.00ns (grouped into LUT with out node tmp_158)
:36  %p_not = select i1 %tmp_27, i128 4294967295, i128 18446744073709551615

ST_62: tmp_156 [1/1] 0.00ns (grouped into LUT with out node tmp_158)
:37  %tmp_156 = and i128 %tmp_152, %p_not

ST_62: tmp_157 [1/1] 0.00ns (grouped into LUT with out node tmp_159)
:38  %tmp_157 = and i128 %tmp_60, %tmp_155

ST_62: tmp_158 [1/1] 1.37ns (out node of the LUT)
:39  %tmp_158 = and i128 %tmp_151, %tmp_156

ST_62: tmp_159 [1/1] 1.37ns (out node of the LUT)
:40  %tmp_159 = or i128 %tmp_157, %tmp_158

ST_62: stg_334 [1/1] 1.91ns
:41  switch i11 %arrayNo5, label %branch7 [
    i11 0, label %branch0
    i11 1, label %branch1
    i11 2, label %branch2
    i11 3, label %branch3
    i11 4, label %branch4
    i11 5, label %branch5
    i11 6, label %branch6
  ]

ST_62: stg_335 [1/1] 2.71ns
branch6:0  store i128 %tmp_159, i128* %output_6_addr, align 8

ST_62: stg_336 [1/1] 0.00ns
branch6:1  br label %16

ST_62: stg_337 [1/1] 2.71ns
branch5:0  store i128 %tmp_159, i128* %output_5_addr, align 8

ST_62: stg_338 [1/1] 0.00ns
branch5:1  br label %16

ST_62: stg_339 [1/1] 2.71ns
branch4:0  store i128 %tmp_159, i128* %output_4_addr, align 8

ST_62: stg_340 [1/1] 0.00ns
branch4:1  br label %16

ST_62: stg_341 [1/1] 2.71ns
branch3:0  store i128 %tmp_159, i128* %output_3_addr, align 8

ST_62: stg_342 [1/1] 0.00ns
branch3:1  br label %16

ST_62: stg_343 [1/1] 2.71ns
branch2:0  store i128 %tmp_159, i128* %output_2_addr, align 8

ST_62: stg_344 [1/1] 0.00ns
branch2:1  br label %16

ST_62: stg_345 [1/1] 2.71ns
branch1:0  store i128 %tmp_159, i128* %output_1_addr, align 8

ST_62: stg_346 [1/1] 0.00ns
branch1:1  br label %16

ST_62: stg_347 [1/1] 2.71ns
branch0:0  store i128 %tmp_159, i128* %output_0_addr, align 8

ST_62: stg_348 [1/1] 0.00ns
branch0:1  br label %16

ST_62: stg_349 [1/1] 2.71ns
branch7:0  store i128 %tmp_159, i128* %output_7_addr, align 8

ST_62: stg_350 [1/1] 0.00ns
branch7:1  br label %16


 <State 63>: 0.00ns
ST_63: empty_56 [1/1] 0.00ns
:0  %empty_56 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str14, i32 %tmp_65)

ST_63: stg_352 [1/1] 0.00ns
:1  br label %5



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
