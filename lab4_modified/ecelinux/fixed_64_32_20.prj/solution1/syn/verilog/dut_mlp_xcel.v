// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_mlp_xcel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 64'b1;
parameter    ap_ST_st2_fsm_1 = 64'b10;
parameter    ap_ST_st3_fsm_2 = 64'b100;
parameter    ap_ST_st4_fsm_3 = 64'b1000;
parameter    ap_ST_st5_fsm_4 = 64'b10000;
parameter    ap_ST_st6_fsm_5 = 64'b100000;
parameter    ap_ST_st7_fsm_6 = 64'b1000000;
parameter    ap_ST_st8_fsm_7 = 64'b10000000;
parameter    ap_ST_st9_fsm_8 = 64'b100000000;
parameter    ap_ST_st10_fsm_9 = 64'b1000000000;
parameter    ap_ST_st11_fsm_10 = 64'b10000000000;
parameter    ap_ST_st12_fsm_11 = 64'b100000000000;
parameter    ap_ST_st13_fsm_12 = 64'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 64'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 64'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 64'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 64'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 64'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 64'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 64'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 64'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 64'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 64'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 64'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 64'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 64'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 64'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 64'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 64'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 64'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 64'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 64'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 64'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 64'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 64'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 64'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 64'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 64'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 64'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 64'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 64'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 64'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 64'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 64'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 64'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 64'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 64'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 64'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 64'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 64'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 64'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 64'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 64'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 64'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 64'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 64'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 64'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 64'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 64'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 64'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 64'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 64'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv6_6 = 6'b110;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv7_20 = 7'b100000;
parameter    ap_const_lv7_E = 7'b1110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv6_1C = 6'b11100;
parameter    ap_const_lv6_A = 6'b1010;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv16_190 = 16'b110010000;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv9_190 = 9'b110010000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv7_54 = 7'b1010100;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv8_54 = 8'b1010100;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_3E759240 = 32'b111110011101011001001001000000;
parameter    ap_const_lv32_BE833E74 = 32'b10111110100000110011111001110100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [63:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_81;
wire   [15:0] fc1_weight_address0;
reg    fc1_weight_ce0;
wire   [31:0] fc1_weight_q0;
wire   [6:0] fc1_bias_address0;
reg    fc1_bias_ce0;
wire   [31:0] fc1_bias_q0;
wire   [13:0] fc2_weight_address0;
reg    fc2_weight_ce0;
wire   [31:0] fc2_weight_q0;
wire   [6:0] fc2_bias_address0;
reg    fc2_bias_ce0;
wire   [31:0] fc2_bias_q0;
wire   [7:0] fc3_weight_address0;
reg    fc3_weight_ce0;
wire   [31:0] fc3_weight_q0;
wire   [31:0] mem_conv1_q0;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_135;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_142;
wire   [31:0] grp_fu_423_p2;
reg   [31:0] reg_442;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_152;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_159;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_167;
wire   [31:0] grp_fu_415_p2;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_177;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_184;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_192;
reg   [31:0] reg_454;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_201;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_208;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_216;
wire   [31:0] mem_conv2_q0;
reg   [31:0] reg_460;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_226;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_233;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_243;
wire    grp_dut_max_pool_fu_403_ap_done;
wire   [15:0] next_mul_fu_466_p2;
reg   [15:0] next_mul_reg_859;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_256;
wire   [6:0] n_fu_478_p2;
reg   [6:0] n_reg_867;
wire   [8:0] m_fu_494_p2;
reg   [8:0] m_reg_875;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_267;
wire   [0:0] exitcond3_fu_488_p2;
wire   [63:0] tmp_15_i_fu_516_p1;
reg   [63:0] tmp_15_i_reg_890;
reg   [31:0] fc1_bias_load_reg_905;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_290;
wire   [31:0] tmp_17_i_fu_563_p3;
reg   [31:0] tmp_17_i_reg_910;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_299;
wire   [6:0] n_1_fu_577_p2;
reg   [6:0] n_1_reg_918;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_308;
wire   [14:0] tmp_i4_fu_607_p2;
reg   [14:0] tmp_i4_reg_923;
wire   [0:0] exitcond2_fu_571_p2;
wire   [6:0] m_1_fu_623_p2;
reg   [6:0] m_1_reg_931;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_322;
wire   [0:0] exitcond5_fu_617_p2;
wire   [63:0] tmp_15_i1_fu_648_p1;
reg   [63:0] tmp_15_i1_reg_946;
reg   [31:0] fc2_bias_load_reg_961;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_344;
wire   [31:0] tmp_17_i1_fu_695_p3;
reg   [31:0] tmp_17_i1_reg_966;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_353;
wire   [7:0] next_mul2_fu_703_p2;
reg   [7:0] next_mul2_reg_971;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_362;
wire   [1:0] n_2_fu_715_p2;
reg   [1:0] n_2_reg_979;
wire   [0:0] exitcond4_fu_709_p2;
wire   [6:0] m_2_fu_731_p2;
reg   [6:0] m_2_reg_992;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_379;
wire   [0:0] exitcond_fu_725_p2;
wire   [31:0] bias_load_phi_i_fu_757_p3;
wire   [31:0] mem_conv2_q1;
reg   [31:0] mem_conv2_load_1_reg_1017;
reg   [12:0] mem_conv1_address0;
reg    mem_conv1_ce0;
reg    mem_conv1_we0;
reg   [31:0] mem_conv1_d0;
reg   [12:0] mem_conv2_address0;
reg    mem_conv2_ce0;
reg    mem_conv2_we0;
reg   [31:0] mem_conv2_d0;
reg   [12:0] mem_conv2_address1;
reg    mem_conv2_ce1;
reg    mem_conv2_we1;
wire    grp_dut_conv1_fu_379_ap_start;
wire    grp_dut_conv1_fu_379_ap_done;
wire    grp_dut_conv1_fu_379_ap_idle;
wire    grp_dut_conv1_fu_379_ap_ready;
wire   [12:0] grp_dut_conv1_fu_379_input_r_address0;
wire    grp_dut_conv1_fu_379_input_r_ce0;
reg   [31:0] grp_dut_conv1_fu_379_input_r_q0;
wire   [12:0] grp_dut_conv1_fu_379_output_r_address0;
wire    grp_dut_conv1_fu_379_output_r_ce0;
wire    grp_dut_conv1_fu_379_output_r_we0;
wire   [31:0] grp_dut_conv1_fu_379_output_r_d0;
reg   [3:0] grp_dut_conv1_fu_379_M;
reg   [5:0] grp_dut_conv1_fu_379_N;
reg   [6:0] grp_dut_conv1_fu_379_I;
reg   [0:0] grp_dut_conv1_fu_379_L;
wire    grp_dut_max_pool_fu_403_ap_start;
wire    grp_dut_max_pool_fu_403_ap_idle;
wire    grp_dut_max_pool_fu_403_ap_ready;
wire   [12:0] grp_dut_max_pool_fu_403_input_r_address0;
wire    grp_dut_max_pool_fu_403_input_r_ce0;
wire   [12:0] grp_dut_max_pool_fu_403_output_r_address0;
wire    grp_dut_max_pool_fu_403_output_r_ce0;
wire    grp_dut_max_pool_fu_403_output_r_we0;
wire   [31:0] grp_dut_max_pool_fu_403_output_r_d0;
reg   [5:0] grp_dut_max_pool_fu_403_M;
reg   [5:0] grp_dut_max_pool_fu_403_I;
reg   [6:0] n_i_reg_250;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_456;
reg   [15:0] phi_mul_reg_262;
reg   [31:0] sum_i_reg_274;
wire   [0:0] exitcond1_fu_472_p2;
reg   [8:0] m_i_reg_286;
reg   [6:0] n_i2_reg_297;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_476;
reg   [31:0] sum_i5_reg_309;
reg   [6:0] m_i6_reg_321;
reg   [1:0] n_i1_reg_332;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_491;
reg   [7:0] phi_mul1_reg_344;
wire   [31:0] sum_i1_phi_fu_360_p4;
reg   [31:0] sum_i1_reg_356;
reg   [6:0] m_i1_reg_368;
reg    ap_reg_grp_dut_conv1_fu_379_ap_start;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_514;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_522;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_529;
reg    ap_reg_grp_dut_max_pool_fu_403_ap_start;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_561;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_568;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_576;
wire   [63:0] tmp_12_i_fu_506_p1;
wire   [63:0] tmp_13_i_fu_511_p1;
wire   [63:0] tmp_12_i9_fu_638_p1;
wire   [63:0] tmp_13_i1_fu_643_p1;
wire   [63:0] tmp_12_i1_fu_743_p1;
wire   [63:0] tmp_13_i2_fu_748_p1;
wire   [63:0] tmp_15_i2_fu_766_p1;
reg   [31:0] grp_fu_415_p0;
reg   [31:0] grp_fu_415_p1;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_608;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_615;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_623;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_630;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_638;
reg   [31:0] grp_fu_423_p0;
reg   [31:0] grp_fu_423_p1;
reg   [31:0] grp_fu_432_p0;
reg   [31:0] grp_fu_432_p1;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_652;
wire   [15:0] m_i_cast_fu_484_p1;
wire   [15:0] w_index_fu_500_p2;
wire   [31:0] biased_to_int_fu_521_p1;
wire   [7:0] tmp_fu_525_p4;
wire   [22:0] tmp_12_fu_535_p1;
wire   [0:0] notrhs_fu_545_p2;
wire   [0:0] notlhs_fu_539_p2;
wire   [0:0] tmp_2_fu_551_p2;
wire   [0:0] grp_fu_432_p2;
wire   [0:0] tmp_4_fu_557_p2;
wire   [13:0] p_shl_i_fu_583_p3;
wire   [9:0] p_shl1_i_fu_595_p3;
wire   [14:0] p_shl_i_cast_fu_591_p1;
wire   [14:0] p_shl1_i_cast_fu_603_p1;
wire   [14:0] m_i6_cast5_fu_613_p1;
wire   [14:0] w_index_1_fu_629_p2;
wire  signed [31:0] w_index_1_cast_fu_634_p1;
wire   [31:0] biased_1_to_int_fu_653_p1;
wire   [7:0] tmp_13_fu_657_p4;
wire   [22:0] tmp_14_fu_667_p1;
wire   [0:0] notrhs3_fu_677_p2;
wire   [0:0] notlhs3_fu_671_p2;
wire   [0:0] tmp_15_fu_683_p2;
wire   [0:0] tmp_17_fu_689_p2;
wire   [7:0] m_i1_cast_fu_721_p1;
wire   [7:0] w_index_2_fu_737_p2;
wire   [0:0] tmp_18_fu_753_p1;
wire   [31:0] mem_conv2_load_to_int_fu_771_p1;
wire   [31:0] mem_conv2_load_1_to_int_fu_789_p1;
wire   [7:0] tmp_5_fu_775_p4;
wire   [22:0] tmp_1_fu_785_p1;
wire   [0:0] notrhs1_fu_812_p2;
wire   [0:0] notlhs1_fu_806_p2;
wire   [7:0] tmp_7_fu_792_p4;
wire   [22:0] tmp_6_fu_802_p1;
wire   [0:0] notrhs2_fu_830_p2;
wire   [0:0] notlhs2_fu_824_p2;
wire   [0:0] tmp_9_fu_818_p2;
wire   [0:0] tmp_s_fu_836_p2;
wire   [0:0] tmp_8_fu_842_p2;
reg   [4:0] grp_fu_432_opcode;
reg   [63:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 64'b1;
#0 ap_reg_grp_dut_conv1_fu_379_ap_start = 1'b0;
#0 ap_reg_grp_dut_max_pool_fu_403_ap_start = 1'b0;
end

dut_mlp_xcel_fc1_weight #(
    .DataWidth( 32 ),
    .AddressRange( 48000 ),
    .AddressWidth( 16 ))
fc1_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_weight_address0),
    .ce0(fc1_weight_ce0),
    .q0(fc1_weight_q0)
);

dut_mlp_xcel_fc1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
fc1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_bias_address0),
    .ce0(fc1_bias_ce0),
    .q0(fc1_bias_q0)
);

dut_mlp_xcel_fc2_weight #(
    .DataWidth( 32 ),
    .AddressRange( 10080 ),
    .AddressWidth( 14 ))
fc2_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc2_weight_address0),
    .ce0(fc2_weight_ce0),
    .q0(fc2_weight_q0)
);

dut_mlp_xcel_fc2_bias #(
    .DataWidth( 32 ),
    .AddressRange( 84 ),
    .AddressWidth( 7 ))
fc2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc2_bias_address0),
    .ce0(fc2_bias_ce0),
    .q0(fc2_bias_q0)
);

dut_mlp_xcel_fc3_weight #(
    .DataWidth( 32 ),
    .AddressRange( 168 ),
    .AddressWidth( 8 ))
fc3_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc3_weight_address0),
    .ce0(fc3_weight_ce0),
    .q0(fc3_weight_q0)
);

dut_mlp_xcel_mem_conv1 #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
mem_conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv1_address0),
    .ce0(mem_conv1_ce0),
    .we0(mem_conv1_we0),
    .d0(mem_conv1_d0),
    .q0(mem_conv1_q0)
);

dut_mlp_xcel_mem_conv2 #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
mem_conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_address0),
    .ce0(mem_conv2_ce0),
    .we0(mem_conv2_we0),
    .d0(mem_conv2_d0),
    .q0(mem_conv2_q0),
    .address1(mem_conv2_address1),
    .ce1(mem_conv2_ce1),
    .we1(mem_conv2_we1),
    .d1(reg_454),
    .q1(mem_conv2_q1)
);

dut_conv1 grp_dut_conv1_fu_379(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_conv1_fu_379_ap_start),
    .ap_done(grp_dut_conv1_fu_379_ap_done),
    .ap_idle(grp_dut_conv1_fu_379_ap_idle),
    .ap_ready(grp_dut_conv1_fu_379_ap_ready),
    .input_r_address0(grp_dut_conv1_fu_379_input_r_address0),
    .input_r_ce0(grp_dut_conv1_fu_379_input_r_ce0),
    .input_r_q0(grp_dut_conv1_fu_379_input_r_q0),
    .output_r_address0(grp_dut_conv1_fu_379_output_r_address0),
    .output_r_ce0(grp_dut_conv1_fu_379_output_r_ce0),
    .output_r_we0(grp_dut_conv1_fu_379_output_r_we0),
    .output_r_d0(grp_dut_conv1_fu_379_output_r_d0),
    .M(grp_dut_conv1_fu_379_M),
    .N(grp_dut_conv1_fu_379_N),
    .I(grp_dut_conv1_fu_379_I),
    .L(grp_dut_conv1_fu_379_L)
);

dut_max_pool grp_dut_max_pool_fu_403(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_max_pool_fu_403_ap_start),
    .ap_done(grp_dut_max_pool_fu_403_ap_done),
    .ap_idle(grp_dut_max_pool_fu_403_ap_idle),
    .ap_ready(grp_dut_max_pool_fu_403_ap_ready),
    .input_r_address0(grp_dut_max_pool_fu_403_input_r_address0),
    .input_r_ce0(grp_dut_max_pool_fu_403_input_r_ce0),
    .input_r_q0(mem_conv2_q0),
    .output_r_address0(grp_dut_max_pool_fu_403_output_r_address0),
    .output_r_ce0(grp_dut_max_pool_fu_403_output_r_ce0),
    .output_r_we0(grp_dut_max_pool_fu_403_output_r_we0),
    .output_r_d0(grp_dut_max_pool_fu_403_output_r_d0),
    .M(grp_dut_max_pool_fu_403_M),
    .I(grp_dut_max_pool_fu_403_I)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_415_p0),
    .din1(grp_fu_415_p1),
    .ce(1'b1),
    .dout(grp_fu_415_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_423_p0),
    .din1(grp_fu_423_p1),
    .ce(1'b1),
    .dout(grp_fu_423_p2)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U18(
    .din0(grp_fu_432_p0),
    .din1(grp_fu_432_p1),
    .opcode(grp_fu_432_opcode),
    .dout(grp_fu_432_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_conv1_fu_379_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
            ap_reg_grp_dut_conv1_fu_379_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_conv1_fu_379_ap_ready)) begin
            ap_reg_grp_dut_conv1_fu_379_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_max_pool_fu_403_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
            ap_reg_grp_dut_max_pool_fu_403_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_max_pool_fu_403_ap_ready)) begin
            ap_reg_grp_dut_max_pool_fu_403_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        m_i1_reg_368 <= m_2_reg_992;
    end else if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (1'b0 == exitcond4_fu_709_p2))) begin
        m_i1_reg_368 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        m_i6_reg_321 <= m_1_reg_931;
    end else if (((1'b1 == ap_sig_cseq_ST_st28_fsm_27) & (1'b0 == exitcond2_fu_571_p2))) begin
        m_i6_reg_321 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        m_i_reg_286 <= m_reg_875;
    end else if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond1_fu_472_p2))) begin
        m_i_reg_286 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st28_fsm_27) & ~(1'b0 == exitcond2_fu_571_p2))) begin
        n_i1_reg_332 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        n_i1_reg_332 <= n_2_reg_979;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond1_fu_472_p2))) begin
        n_i2_reg_297 <= ap_const_lv7_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        n_i2_reg_297 <= n_1_reg_918;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        n_i_reg_250 <= n_reg_867;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_dut_max_pool_fu_403_ap_done))) begin
        n_i_reg_250 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st28_fsm_27) & ~(1'b0 == exitcond2_fu_571_p2))) begin
        phi_mul1_reg_344 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        phi_mul1_reg_344 <= next_mul2_reg_971;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        phi_mul_reg_262 <= next_mul_reg_859;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == grp_dut_max_pool_fu_403_ap_done))) begin
        phi_mul_reg_262 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        sum_i1_reg_356 <= grp_fu_415_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (1'b0 == exitcond4_fu_709_p2))) begin
        sum_i1_reg_356 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        sum_i5_reg_309 <= grp_fu_415_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st28_fsm_27) & (1'b0 == exitcond2_fu_571_p2))) begin
        sum_i5_reg_309 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        sum_i_reg_274 <= grp_fu_415_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond1_fu_472_p2))) begin
        sum_i_reg_274 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        fc1_bias_load_reg_905 <= fc1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        fc2_bias_load_reg_961 <= fc2_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        m_1_reg_931 <= m_1_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        m_2_reg_992 <= m_2_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        m_reg_875 <= m_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st63_fsm_62)) begin
        mem_conv2_load_1_reg_1017 <= mem_conv2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        n_1_reg_918 <= n_1_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        n_2_reg_979 <= n_2_fu_715_p2;
        next_mul2_reg_971 <= next_mul2_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        n_reg_867 <= n_fu_478_p2;
        next_mul_reg_859 <= next_mul_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st52_fsm_51))) begin
        reg_442 <= grp_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st44_fsm_43) | (1'b1 == ap_sig_cseq_ST_st61_fsm_60))) begin
        reg_454 <= grp_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st63_fsm_62))) begin
        reg_460 <= mem_conv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st29_fsm_28) & ~(1'b0 == exitcond5_fu_617_p2))) begin
        tmp_15_i1_reg_946[6 : 0] <= tmp_15_i1_fu_648_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(exitcond3_fu_488_p2 == 1'b0))) begin
        tmp_15_i_reg_890[6 : 0] <= tmp_15_i_fu_516_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        tmp_17_i1_reg_966 <= tmp_17_i1_fu_695_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        tmp_17_i_reg_910 <= tmp_17_i_fu_563_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st28_fsm_27) & (1'b0 == exitcond2_fu_571_p2))) begin
        tmp_i4_reg_923[14 : 3] <= tmp_i4_fu_607_p2[14 : 3];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st64_fsm_63))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_267) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_135) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_152) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_608) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_177) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_81) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_290) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_615) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_201) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_299) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_456) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_308) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_322) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_522) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_226) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_623) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_184) begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_344) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_561) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_630) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_208) begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_353) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_476) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_362) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_379) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_142) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_576) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_167) begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_638) begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        ap_sig_cseq_ST_st57_fsm_56 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_514) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_216) begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_491) begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_233) begin
        ap_sig_cseq_ST_st63_fsm_62 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_652) begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_529) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_568) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_243) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_256) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        fc1_bias_ce0 = 1'b1;
    end else begin
        fc1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        fc1_weight_ce0 = 1'b1;
    end else begin
        fc1_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        fc2_bias_ce0 = 1'b1;
    end else begin
        fc2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        fc2_weight_ce0 = 1'b1;
    end else begin
        fc2_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        fc3_weight_ce0 = 1'b1;
    end else begin
        fc3_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_conv1_fu_379_I = ap_const_lv7_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_conv1_fu_379_I = ap_const_lv7_20;
    end else begin
        grp_dut_conv1_fu_379_I = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_conv1_fu_379_L = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_conv1_fu_379_L = 1'b0;
    end else begin
        grp_dut_conv1_fu_379_L = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_conv1_fu_379_M = ap_const_lv4_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_conv1_fu_379_M = ap_const_lv4_3;
    end else begin
        grp_dut_conv1_fu_379_M = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_conv1_fu_379_N = ap_const_lv6_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_conv1_fu_379_N = ap_const_lv6_6;
    end else begin
        grp_dut_conv1_fu_379_N = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_conv1_fu_379_input_r_q0 = mem_conv1_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_conv1_fu_379_input_r_q0 = input_r_q0;
    end else begin
        grp_dut_conv1_fu_379_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_dut_max_pool_fu_403_I = ap_const_lv6_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_max_pool_fu_403_I = ap_const_lv6_1C;
    end else begin
        grp_dut_max_pool_fu_403_I = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_dut_max_pool_fu_403_M = ap_const_lv6_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_max_pool_fu_403_M = ap_const_lv6_6;
    end else begin
        grp_dut_max_pool_fu_403_M = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        grp_fu_415_p0 = sum_i1_reg_356;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_415_p0 = sum_i1_phi_fu_360_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        grp_fu_415_p0 = sum_i5_reg_309;
    end else if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        grp_fu_415_p0 = sum_i_reg_274;
    end else begin
        grp_fu_415_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_415_p1 = bias_load_phi_i_fu_757_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        grp_fu_415_p1 = fc2_bias_load_reg_961;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        grp_fu_415_p1 = fc1_bias_load_reg_905;
    end else if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st53_fsm_52))) begin
        grp_fu_415_p1 = reg_442;
    end else begin
        grp_fu_415_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        grp_fu_423_p0 = mem_conv2_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        grp_fu_423_p0 = mem_conv1_q0;
    end else begin
        grp_fu_423_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_423_p1 = fc3_weight_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        grp_fu_423_p1 = fc2_weight_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_423_p1 = fc1_weight_q0;
    end else begin
        grp_fu_423_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        grp_fu_432_opcode = ap_const_lv5_4;
    end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44))) begin
        grp_fu_432_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_432_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        grp_fu_432_p0 = reg_460;
    end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44))) begin
        grp_fu_432_p0 = reg_454;
    end else begin
        grp_fu_432_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        grp_fu_432_p1 = mem_conv2_load_1_reg_1017;
    end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44))) begin
        grp_fu_432_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_432_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        mem_conv1_address0 = tmp_15_i1_reg_946;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        mem_conv1_address0 = tmp_12_i1_fu_743_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        mem_conv1_address0 = tmp_12_i_fu_506_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        mem_conv1_address0 = grp_dut_max_pool_fu_403_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv1_address0 = grp_dut_conv1_fu_379_input_r_address0;
    end else begin
        mem_conv1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45))) begin
        mem_conv1_ce0 = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        mem_conv1_ce0 = grp_dut_max_pool_fu_403_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv1_ce0 = grp_dut_conv1_fu_379_input_r_ce0;
    end else begin
        mem_conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        mem_conv1_d0 = tmp_17_i1_reg_966;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        mem_conv1_d0 = grp_dut_max_pool_fu_403_output_r_d0;
    end else begin
        mem_conv1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        mem_conv1_we0 = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        mem_conv1_we0 = grp_dut_max_pool_fu_403_output_r_we0;
    end else begin
        mem_conv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        mem_conv2_address0 = tmp_15_i_reg_890;
    end else if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        mem_conv2_address0 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        mem_conv2_address0 = tmp_12_i9_fu_638_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        mem_conv2_address0 = grp_dut_max_pool_fu_403_input_r_address0;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        mem_conv2_address0 = grp_dut_conv1_fu_379_output_r_address0;
    end else begin
        mem_conv2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        mem_conv2_address1 = tmp_15_i2_fu_766_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        mem_conv2_address1 = ap_const_lv64_1;
    end else begin
        mem_conv2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26))) begin
        mem_conv2_ce0 = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        mem_conv2_ce0 = grp_dut_max_pool_fu_403_input_r_ce0;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        mem_conv2_ce0 = grp_dut_conv1_fu_379_output_r_ce0;
    end else begin
        mem_conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st62_fsm_61))) begin
        mem_conv2_ce1 = 1'b1;
    end else begin
        mem_conv2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        mem_conv2_d0 = tmp_17_i_reg_910;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        mem_conv2_d0 = grp_dut_conv1_fu_379_output_r_d0;
    end else begin
        mem_conv2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        mem_conv2_we0 = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        mem_conv2_we0 = grp_dut_conv1_fu_379_output_r_we0;
    end else begin
        mem_conv2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        mem_conv2_we1 = 1'b1;
    end else begin
        mem_conv2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == grp_dut_conv1_fu_379_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == grp_dut_max_pool_fu_403_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == grp_dut_conv1_fu_379_ap_done)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            if (~(1'b0 == grp_dut_max_pool_fu_403_ap_done)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : begin
            if ((1'b0 == exitcond1_fu_472_p2)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end
        end
        ap_ST_st10_fsm_9 : begin
            if (~(exitcond3_fu_488_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st28_fsm_27 : begin
            if ((1'b0 == exitcond2_fu_571_p2)) begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end
        end
        ap_ST_st29_fsm_28 : begin
            if (~(1'b0 == exitcond5_fu_617_p2)) begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end else begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st47_fsm_46 : begin
            if ((1'b0 == exitcond4_fu_709_p2)) begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end else begin
                ap_NS_fsm = ap_ST_st63_fsm_62;
            end
        end
        ap_ST_st48_fsm_47 : begin
            if (~(1'b0 == exitcond_fu_725_p2)) begin
                ap_NS_fsm = ap_ST_st58_fsm_57;
            end else begin
                ap_NS_fsm = ap_ST_st49_fsm_48;
            end
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = (tmp_8_fu_842_p2 & grp_fu_432_p2);

always @ (*) begin
    ap_sig_135 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_142 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_152 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_167 = (1'b1 == ap_CS_fsm[ap_const_lv32_33]);
end

always @ (*) begin
    ap_sig_177 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_184 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_192 = (1'b1 == ap_CS_fsm[ap_const_lv32_38]);
end

always @ (*) begin
    ap_sig_201 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_208 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_216 = (1'b1 == ap_CS_fsm[ap_const_lv32_3C]);
end

always @ (*) begin
    ap_sig_226 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_233 = (1'b1 == ap_CS_fsm[ap_const_lv32_3E]);
end

always @ (*) begin
    ap_sig_243 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_256 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_267 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_290 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_299 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_308 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_322 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_344 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_353 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_362 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_379 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_456 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_476 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_491 = (1'b1 == ap_CS_fsm[ap_const_lv32_3D]);
end

always @ (*) begin
    ap_sig_514 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_522 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_529 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_561 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_568 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_576 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_608 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_615 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_623 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_630 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_638 = (1'b1 == ap_CS_fsm[ap_const_lv32_34]);
end

always @ (*) begin
    ap_sig_652 = (1'b1 == ap_CS_fsm[ap_const_lv32_3F]);
end

always @ (*) begin
    ap_sig_81 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign bias_load_phi_i_fu_757_p3 = ((tmp_18_fu_753_p1[0:0] === 1'b1) ? ap_const_lv32_3E759240 : ap_const_lv32_BE833E74);

assign biased_1_to_int_fu_653_p1 = reg_454;

assign biased_to_int_fu_521_p1 = reg_454;

assign exitcond1_fu_472_p2 = ((n_i_reg_250 == ap_const_lv7_78) ? 1'b1 : 1'b0);

assign exitcond2_fu_571_p2 = ((n_i2_reg_297 == ap_const_lv7_54) ? 1'b1 : 1'b0);

assign exitcond3_fu_488_p2 = ((m_i_reg_286 == ap_const_lv9_190) ? 1'b1 : 1'b0);

assign exitcond4_fu_709_p2 = ((n_i1_reg_332 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond5_fu_617_p2 = ((m_i6_reg_321 == ap_const_lv7_78) ? 1'b1 : 1'b0);

assign exitcond_fu_725_p2 = ((m_i1_reg_368 == ap_const_lv7_54) ? 1'b1 : 1'b0);

assign fc1_bias_address0 = tmp_15_i_fu_516_p1;

assign fc1_weight_address0 = tmp_13_i_fu_511_p1;

assign fc2_bias_address0 = tmp_15_i1_fu_648_p1;

assign fc2_weight_address0 = tmp_13_i1_fu_643_p1;

assign fc3_weight_address0 = tmp_13_i2_fu_748_p1;

assign grp_dut_conv1_fu_379_ap_start = ap_reg_grp_dut_conv1_fu_379_ap_start;

assign grp_dut_max_pool_fu_403_ap_start = ap_reg_grp_dut_max_pool_fu_403_ap_start;

assign input_r_address0 = grp_dut_conv1_fu_379_input_r_address0;

assign input_r_ce0 = grp_dut_conv1_fu_379_input_r_ce0;

assign m_1_fu_623_p2 = (m_i6_reg_321 + ap_const_lv7_1);

assign m_2_fu_731_p2 = (m_i1_reg_368 + ap_const_lv7_1);

assign m_fu_494_p2 = (m_i_reg_286 + ap_const_lv9_1);

assign m_i1_cast_fu_721_p1 = m_i1_reg_368;

assign m_i6_cast5_fu_613_p1 = m_i6_reg_321;

assign m_i_cast_fu_484_p1 = m_i_reg_286;

assign mem_conv2_load_1_to_int_fu_789_p1 = mem_conv2_load_1_reg_1017;

assign mem_conv2_load_to_int_fu_771_p1 = reg_460;

assign n_1_fu_577_p2 = (n_i2_reg_297 + ap_const_lv7_1);

assign n_2_fu_715_p2 = (n_i1_reg_332 + ap_const_lv2_1);

assign n_fu_478_p2 = (n_i_reg_250 + ap_const_lv7_1);

assign next_mul2_fu_703_p2 = (phi_mul1_reg_344 + ap_const_lv8_54);

assign next_mul_fu_466_p2 = (phi_mul_reg_262 + ap_const_lv16_190);

assign notlhs1_fu_806_p2 = ((tmp_5_fu_775_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_824_p2 = ((tmp_7_fu_792_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_671_p2 = ((tmp_13_fu_657_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_539_p2 = ((tmp_fu_525_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_812_p2 = ((tmp_1_fu_785_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_830_p2 = ((tmp_6_fu_802_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_677_p2 = ((tmp_14_fu_667_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_545_p2 = ((tmp_12_fu_535_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_shl1_i_cast_fu_603_p1 = p_shl1_i_fu_595_p3;

assign p_shl1_i_fu_595_p3 = {{n_i2_reg_297}, {ap_const_lv3_0}};

assign p_shl_i_cast_fu_591_p1 = p_shl_i_fu_583_p3;

assign p_shl_i_fu_583_p3 = {{n_i2_reg_297}, {ap_const_lv7_0}};

assign sum_i1_phi_fu_360_p4 = sum_i1_reg_356;

assign tmp_12_fu_535_p1 = biased_to_int_fu_521_p1[22:0];

assign tmp_12_i1_fu_743_p1 = m_i1_reg_368;

assign tmp_12_i9_fu_638_p1 = m_i6_reg_321;

assign tmp_12_i_fu_506_p1 = m_i_reg_286;

assign tmp_13_fu_657_p4 = {{biased_1_to_int_fu_653_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_13_i1_fu_643_p1 = $unsigned(w_index_1_cast_fu_634_p1);

assign tmp_13_i2_fu_748_p1 = w_index_2_fu_737_p2;

assign tmp_13_i_fu_511_p1 = w_index_fu_500_p2;

assign tmp_14_fu_667_p1 = biased_1_to_int_fu_653_p1[22:0];

assign tmp_15_fu_683_p2 = (notrhs3_fu_677_p2 | notlhs3_fu_671_p2);

assign tmp_15_i1_fu_648_p1 = n_i2_reg_297;

assign tmp_15_i2_fu_766_p1 = n_i1_reg_332;

assign tmp_15_i_fu_516_p1 = n_i_reg_250;

assign tmp_17_fu_689_p2 = (tmp_15_fu_683_p2 & grp_fu_432_p2);

assign tmp_17_i1_fu_695_p3 = ((tmp_17_fu_689_p2[0:0] === 1'b1) ? reg_454 : ap_const_lv32_0);

assign tmp_17_i_fu_563_p3 = ((tmp_4_fu_557_p2[0:0] === 1'b1) ? reg_454 : ap_const_lv32_0);

assign tmp_18_fu_753_p1 = n_i1_reg_332[0:0];

assign tmp_1_fu_785_p1 = mem_conv2_load_to_int_fu_771_p1[22:0];

assign tmp_2_fu_551_p2 = (notrhs_fu_545_p2 | notlhs_fu_539_p2);

assign tmp_4_fu_557_p2 = (tmp_2_fu_551_p2 & grp_fu_432_p2);

assign tmp_5_fu_775_p4 = {{mem_conv2_load_to_int_fu_771_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_6_fu_802_p1 = mem_conv2_load_1_to_int_fu_789_p1[22:0];

assign tmp_7_fu_792_p4 = {{mem_conv2_load_1_to_int_fu_789_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_8_fu_842_p2 = (tmp_9_fu_818_p2 & tmp_s_fu_836_p2);

assign tmp_9_fu_818_p2 = (notrhs1_fu_812_p2 | notlhs1_fu_806_p2);

assign tmp_fu_525_p4 = {{biased_to_int_fu_521_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_i4_fu_607_p2 = (p_shl_i_cast_fu_591_p1 - p_shl1_i_cast_fu_603_p1);

assign tmp_s_fu_836_p2 = (notrhs2_fu_830_p2 | notlhs2_fu_824_p2);

assign w_index_1_cast_fu_634_p1 = $signed(w_index_1_fu_629_p2);

assign w_index_1_fu_629_p2 = (m_i6_cast5_fu_613_p1 + tmp_i4_reg_923);

assign w_index_2_fu_737_p2 = (m_i1_cast_fu_721_p1 + phi_mul1_reg_344);

assign w_index_fu_500_p2 = (m_i_cast_fu_484_p1 + phi_mul_reg_262);

always @ (posedge ap_clk) begin
    tmp_15_i_reg_890[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_i4_reg_923[2:0] <= 3'b000;
    tmp_15_i1_reg_946[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //dut_mlp_xcel
