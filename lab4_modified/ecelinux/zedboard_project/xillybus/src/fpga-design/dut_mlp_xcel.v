// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_mlp_xcel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 67'b1;
parameter    ap_ST_st2_fsm_1 = 67'b10;
parameter    ap_ST_st3_fsm_2 = 67'b100;
parameter    ap_ST_st4_fsm_3 = 67'b1000;
parameter    ap_ST_st5_fsm_4 = 67'b10000;
parameter    ap_ST_st6_fsm_5 = 67'b100000;
parameter    ap_ST_st7_fsm_6 = 67'b1000000;
parameter    ap_ST_st8_fsm_7 = 67'b10000000;
parameter    ap_ST_st9_fsm_8 = 67'b100000000;
parameter    ap_ST_st10_fsm_9 = 67'b1000000000;
parameter    ap_ST_st11_fsm_10 = 67'b10000000000;
parameter    ap_ST_st12_fsm_11 = 67'b100000000000;
parameter    ap_ST_st13_fsm_12 = 67'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 67'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 67'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 67'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 67'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 67'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 67'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 67'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 67'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 67'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 67'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 67'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 67'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 67'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 67'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 67'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 67'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 67'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 67'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 67'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 67'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 67'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 67'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 67'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 67'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 67'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 67'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 67'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 67'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 67'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 67'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 67'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 67'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 67'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 67'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 67'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 67'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 67'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 67'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 67'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 67'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 67'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 67'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 67'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 67'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 67'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 67'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 67'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 67'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 67'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 67'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 67'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 67'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 67'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 67'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv6_1C = 6'b11100;
parameter    ap_const_lv6_A = 6'b1010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv13_1260 = 13'b1001001100000;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv16_190 = 16'b110010000;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv9_190 = 9'b110010000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv7_54 = 7'b1010100;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv8_54 = 8'b1010100;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_3E759240 = 32'b111110011101011001001001000000;
parameter    ap_const_lv32_BE833E74 = 32'b10111110100000110011111001110100;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [66:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_84;
wire   [15:0] fc1_weight_address0;
reg    fc1_weight_ce0;
wire   [31:0] fc1_weight_q0;
wire   [6:0] fc1_bias_address0;
reg    fc1_bias_ce0;
wire   [31:0] fc1_bias_q0;
wire   [13:0] fc2_weight_address0;
reg    fc2_weight_ce0;
wire   [31:0] fc2_weight_q0;
wire   [6:0] fc2_bias_address0;
reg    fc2_bias_ce0;
wire   [31:0] fc2_bias_q0;
wire   [7:0] fc3_weight_address0;
reg    fc3_weight_ce0;
wire   [31:0] fc3_weight_q0;
wire   [31:0] mem_conv1_q0;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_138;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_145;
wire   [31:0] grp_fu_444_p2;
reg   [31:0] reg_463;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_155;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_162;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_170;
wire   [31:0] grp_fu_436_p2;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_180;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_187;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_195;
reg   [31:0] reg_475;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_204;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_211;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_219;
wire   [31:0] mem_conv2_q0;
reg   [31:0] reg_481;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_229;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_236;
wire   [12:0] i_1_fu_493_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_246;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_255;
wire    grp_dut_reshape_fu_430_ap_done;
wire   [15:0] next_mul_fu_505_p2;
reg   [15:0] next_mul_reg_914;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_268;
wire   [6:0] n_fu_517_p2;
reg   [6:0] n_reg_922;
wire   [8:0] m_fu_533_p2;
reg   [8:0] m_reg_930;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_279;
wire   [0:0] exitcond3_fu_527_p2;
wire   [63:0] tmp_15_i_fu_555_p1;
reg   [63:0] tmp_15_i_reg_945;
reg   [31:0] fc1_bias_load_reg_960;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_302;
wire   [31:0] biased_1_fu_602_p3;
reg   [31:0] biased_1_reg_965;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_311;
wire   [6:0] n_1_fu_616_p2;
reg   [6:0] n_1_reg_973;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_320;
wire   [14:0] tmp_i3_fu_646_p2;
reg   [14:0] tmp_i3_reg_978;
wire   [0:0] exitcond2_fu_610_p2;
wire   [6:0] m_1_fu_662_p2;
reg   [6:0] m_1_reg_986;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_334;
wire   [0:0] exitcond5_fu_656_p2;
wire   [63:0] tmp_16_i1_fu_687_p1;
reg   [63:0] tmp_16_i1_reg_1001;
reg   [31:0] fc2_bias_load_reg_1016;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_356;
wire   [31:0] biased_3_fu_734_p3;
reg   [31:0] biased_3_reg_1021;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_365;
wire   [7:0] next_mul2_fu_742_p2;
reg   [7:0] next_mul2_reg_1026;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_374;
wire   [1:0] n_2_fu_754_p2;
reg   [1:0] n_2_reg_1034;
wire   [0:0] exitcond4_fu_748_p2;
wire   [6:0] m_2_fu_770_p2;
reg   [6:0] m_2_reg_1047;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_391;
wire   [0:0] exitcond6_fu_764_p2;
wire   [31:0] bias_load_phi_i_fu_796_p3;
wire   [31:0] mem_conv2_q1;
reg   [31:0] mem_conv2_load_1_reg_1072;
reg   [12:0] mem_conv1_address0;
reg    mem_conv1_ce0;
reg    mem_conv1_we0;
reg   [31:0] mem_conv1_d0;
reg   [12:0] mem_conv2_address0;
reg    mem_conv2_ce0;
reg    mem_conv2_we0;
reg   [31:0] mem_conv2_d0;
reg   [12:0] mem_conv2_address1;
reg    mem_conv2_ce1;
reg    mem_conv2_we1;
wire    grp_dut_conv1_fu_404_ap_start;
wire    grp_dut_conv1_fu_404_ap_done;
wire    grp_dut_conv1_fu_404_ap_idle;
wire    grp_dut_conv1_fu_404_ap_ready;
wire   [12:0] grp_dut_conv1_fu_404_input_r_address0;
wire    grp_dut_conv1_fu_404_input_r_ce0;
wire   [12:0] grp_dut_conv1_fu_404_output_r_address0;
wire    grp_dut_conv1_fu_404_output_r_ce0;
wire    grp_dut_conv1_fu_404_output_r_we0;
wire   [31:0] grp_dut_conv1_fu_404_output_r_d0;
wire    grp_dut_conv1_1_fu_412_ap_start;
wire    grp_dut_conv1_1_fu_412_ap_done;
wire    grp_dut_conv1_1_fu_412_ap_idle;
wire    grp_dut_conv1_1_fu_412_ap_ready;
wire   [11:0] grp_dut_conv1_1_fu_412_input_r_address0;
wire    grp_dut_conv1_1_fu_412_input_r_ce0;
wire   [12:0] grp_dut_conv1_1_fu_412_output_r_address0;
wire    grp_dut_conv1_1_fu_412_output_r_ce0;
wire    grp_dut_conv1_1_fu_412_output_r_we0;
wire   [31:0] grp_dut_conv1_1_fu_412_output_r_d0;
wire    grp_dut_max_pool_fu_421_ap_start;
wire    grp_dut_max_pool_fu_421_ap_done;
wire    grp_dut_max_pool_fu_421_ap_idle;
wire    grp_dut_max_pool_fu_421_ap_ready;
wire   [12:0] grp_dut_max_pool_fu_421_input_r_address0;
wire    grp_dut_max_pool_fu_421_input_r_ce0;
wire   [12:0] grp_dut_max_pool_fu_421_output_r_address0;
wire    grp_dut_max_pool_fu_421_output_r_ce0;
wire    grp_dut_max_pool_fu_421_output_r_we0;
wire   [31:0] grp_dut_max_pool_fu_421_output_r_d0;
reg   [5:0] grp_dut_max_pool_fu_421_I;
wire    grp_dut_reshape_fu_430_ap_start;
wire    grp_dut_reshape_fu_430_ap_idle;
wire    grp_dut_reshape_fu_430_ap_ready;
wire   [12:0] grp_dut_reshape_fu_430_input_r_address0;
wire    grp_dut_reshape_fu_430_input_r_ce0;
wire   [12:0] grp_dut_reshape_fu_430_output_r_address0;
wire    grp_dut_reshape_fu_430_output_r_ce0;
wire    grp_dut_reshape_fu_430_output_r_we0;
wire   [31:0] grp_dut_reshape_fu_430_output_r_d0;
reg   [12:0] i_reg_264;
wire   [0:0] exitcond_fu_487_p2;
reg   [6:0] n_i_reg_275;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_498;
reg   [15:0] phi_mul_reg_287;
reg   [31:0] sum_i_reg_299;
wire   [0:0] exitcond1_fu_511_p2;
reg   [8:0] m_i_reg_311;
reg   [6:0] n_i1_reg_322;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_518;
reg   [31:0] sum_i4_reg_334;
reg   [6:0] m_i5_reg_346;
reg   [1:0] n_i2_reg_357;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_533;
reg   [7:0] phi_mul1_reg_369;
wire   [31:0] sum_i1_phi_fu_385_p4;
reg   [31:0] sum_i1_reg_381;
reg   [6:0] m_i1_reg_393;
reg    ap_reg_grp_dut_conv1_fu_404_ap_start;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_553;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_560;
reg    ap_reg_grp_dut_conv1_1_fu_412_ap_start;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_579;
reg    ap_reg_grp_dut_max_pool_fu_421_ap_start;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_596;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_603;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_611;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_618;
reg    ap_reg_grp_dut_reshape_fu_430_ap_start;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_630;
wire   [63:0] tmp_s_fu_499_p1;
wire   [63:0] tmp_12_i_fu_545_p1;
wire   [63:0] tmp_13_i_fu_550_p1;
wire   [63:0] tmp_13_i8_fu_677_p1;
wire   [63:0] tmp_14_i1_fu_682_p1;
wire   [63:0] tmp_13_i1_fu_782_p1;
wire   [63:0] tmp_14_i2_fu_787_p1;
wire   [63:0] tmp_16_i2_fu_805_p1;
reg   [31:0] grp_fu_436_p0;
reg   [31:0] grp_fu_436_p1;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_664;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_671;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_679;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_686;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_694;
reg   [31:0] grp_fu_444_p0;
reg   [31:0] grp_fu_444_p1;
reg   [31:0] grp_fu_453_p0;
reg   [31:0] grp_fu_453_p1;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_708;
wire   [15:0] m_i_cast_fu_523_p1;
wire   [15:0] w_index_fu_539_p2;
wire   [31:0] biased_to_int_fu_560_p1;
wire   [7:0] tmp_fu_564_p4;
wire   [22:0] tmp_13_fu_574_p1;
wire   [0:0] notrhs_fu_584_p2;
wire   [0:0] notlhs_fu_578_p2;
wire   [0:0] tmp_2_fu_590_p2;
wire   [0:0] grp_fu_453_p2;
wire   [0:0] tmp_4_fu_596_p2;
wire   [13:0] p_shl_i_fu_622_p3;
wire   [9:0] p_shl1_i_fu_634_p3;
wire   [14:0] p_shl_i_cast_fu_630_p1;
wire   [14:0] p_shl1_i_cast_fu_642_p1;
wire   [14:0] m_i5_cast5_fu_652_p1;
wire   [14:0] w_index_1_fu_668_p2;
wire  signed [31:0] w_index_1_cast_fu_673_p1;
wire   [31:0] biased_2_to_int_fu_692_p1;
wire   [7:0] tmp_14_fu_696_p4;
wire   [22:0] tmp_15_fu_706_p1;
wire   [0:0] notrhs3_fu_716_p2;
wire   [0:0] notlhs3_fu_710_p2;
wire   [0:0] tmp_16_fu_722_p2;
wire   [0:0] tmp_18_fu_728_p2;
wire   [7:0] m_i1_cast_fu_760_p1;
wire   [7:0] w_index_2_fu_776_p2;
wire   [0:0] tmp_19_fu_792_p1;
wire   [31:0] mem_conv2_load_to_int_fu_810_p1;
wire   [31:0] mem_conv2_load_1_to_int_fu_828_p1;
wire   [7:0] tmp_5_fu_814_p4;
wire   [22:0] tmp_1_fu_824_p1;
wire   [0:0] notrhs1_fu_851_p2;
wire   [0:0] notlhs1_fu_845_p2;
wire   [7:0] tmp_7_fu_831_p4;
wire   [22:0] tmp_6_fu_841_p1;
wire   [0:0] notrhs2_fu_869_p2;
wire   [0:0] notlhs2_fu_863_p2;
wire   [0:0] tmp_9_fu_857_p2;
wire   [0:0] tmp_8_fu_875_p2;
wire   [0:0] tmp_10_fu_881_p2;
wire   [0:0] tmp_12_fu_887_p2;
reg   [4:0] grp_fu_453_opcode;
reg   [66:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 67'b1;
#0 ap_reg_grp_dut_conv1_fu_404_ap_start = 1'b0;
#0 ap_reg_grp_dut_conv1_1_fu_412_ap_start = 1'b0;
#0 ap_reg_grp_dut_max_pool_fu_421_ap_start = 1'b0;
#0 ap_reg_grp_dut_reshape_fu_430_ap_start = 1'b0;
end

dut_mlp_xcel_fc1_weight #(
    .DataWidth( 32 ),
    .AddressRange( 48000 ),
    .AddressWidth( 16 ))
fc1_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_weight_address0),
    .ce0(fc1_weight_ce0),
    .q0(fc1_weight_q0)
);

dut_mlp_xcel_fc1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
fc1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_bias_address0),
    .ce0(fc1_bias_ce0),
    .q0(fc1_bias_q0)
);

dut_mlp_xcel_fc2_weight #(
    .DataWidth( 32 ),
    .AddressRange( 10080 ),
    .AddressWidth( 14 ))
fc2_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc2_weight_address0),
    .ce0(fc2_weight_ce0),
    .q0(fc2_weight_q0)
);

dut_mlp_xcel_fc2_bias #(
    .DataWidth( 32 ),
    .AddressRange( 84 ),
    .AddressWidth( 7 ))
fc2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc2_bias_address0),
    .ce0(fc2_bias_ce0),
    .q0(fc2_bias_q0)
);

dut_mlp_xcel_fc3_weight #(
    .DataWidth( 32 ),
    .AddressRange( 168 ),
    .AddressWidth( 8 ))
fc3_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc3_weight_address0),
    .ce0(fc3_weight_ce0),
    .q0(fc3_weight_q0)
);

dut_mlp_xcel_mem_conv1 #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
mem_conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv1_address0),
    .ce0(mem_conv1_ce0),
    .we0(mem_conv1_we0),
    .d0(mem_conv1_d0),
    .q0(mem_conv1_q0)
);

dut_mlp_xcel_mem_conv2 #(
    .DataWidth( 32 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
mem_conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_address0),
    .ce0(mem_conv2_ce0),
    .we0(mem_conv2_we0),
    .d0(mem_conv2_d0),
    .q0(mem_conv2_q0),
    .address1(mem_conv2_address1),
    .ce1(mem_conv2_ce1),
    .we1(mem_conv2_we1),
    .d1(reg_475),
    .q1(mem_conv2_q1)
);

dut_conv1 grp_dut_conv1_fu_404(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_conv1_fu_404_ap_start),
    .ap_done(grp_dut_conv1_fu_404_ap_done),
    .ap_idle(grp_dut_conv1_fu_404_ap_idle),
    .ap_ready(grp_dut_conv1_fu_404_ap_ready),
    .input_r_address0(grp_dut_conv1_fu_404_input_r_address0),
    .input_r_ce0(grp_dut_conv1_fu_404_input_r_ce0),
    .input_r_q0(mem_conv2_q0),
    .output_r_address0(grp_dut_conv1_fu_404_output_r_address0),
    .output_r_ce0(grp_dut_conv1_fu_404_output_r_ce0),
    .output_r_we0(grp_dut_conv1_fu_404_output_r_we0),
    .output_r_d0(grp_dut_conv1_fu_404_output_r_d0)
);

dut_conv1_1 grp_dut_conv1_1_fu_412(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_conv1_1_fu_412_ap_start),
    .ap_done(grp_dut_conv1_1_fu_412_ap_done),
    .ap_idle(grp_dut_conv1_1_fu_412_ap_idle),
    .ap_ready(grp_dut_conv1_1_fu_412_ap_ready),
    .input_r_address0(grp_dut_conv1_1_fu_412_input_r_address0),
    .input_r_ce0(grp_dut_conv1_1_fu_412_input_r_ce0),
    .input_r_q0(input_r_q0),
    .output_r_address0(grp_dut_conv1_1_fu_412_output_r_address0),
    .output_r_ce0(grp_dut_conv1_1_fu_412_output_r_ce0),
    .output_r_we0(grp_dut_conv1_1_fu_412_output_r_we0),
    .output_r_d0(grp_dut_conv1_1_fu_412_output_r_d0)
);

dut_max_pool grp_dut_max_pool_fu_421(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_max_pool_fu_421_ap_start),
    .ap_done(grp_dut_max_pool_fu_421_ap_done),
    .ap_idle(grp_dut_max_pool_fu_421_ap_idle),
    .ap_ready(grp_dut_max_pool_fu_421_ap_ready),
    .input_r_address0(grp_dut_max_pool_fu_421_input_r_address0),
    .input_r_ce0(grp_dut_max_pool_fu_421_input_r_ce0),
    .input_r_q0(mem_conv1_q0),
    .output_r_address0(grp_dut_max_pool_fu_421_output_r_address0),
    .output_r_ce0(grp_dut_max_pool_fu_421_output_r_ce0),
    .output_r_we0(grp_dut_max_pool_fu_421_output_r_we0),
    .output_r_d0(grp_dut_max_pool_fu_421_output_r_d0),
    .I(grp_dut_max_pool_fu_421_I)
);

dut_reshape grp_dut_reshape_fu_430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_reshape_fu_430_ap_start),
    .ap_done(grp_dut_reshape_fu_430_ap_done),
    .ap_idle(grp_dut_reshape_fu_430_ap_idle),
    .ap_ready(grp_dut_reshape_fu_430_ap_ready),
    .input_r_address0(grp_dut_reshape_fu_430_input_r_address0),
    .input_r_ce0(grp_dut_reshape_fu_430_input_r_ce0),
    .input_r_q0(mem_conv2_q0),
    .output_r_address0(grp_dut_reshape_fu_430_output_r_address0),
    .output_r_ce0(grp_dut_reshape_fu_430_output_r_ce0),
    .output_r_we0(grp_dut_reshape_fu_430_output_r_we0),
    .output_r_d0(grp_dut_reshape_fu_430_output_r_d0)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_436_p0),
    .din1(grp_fu_436_p1),
    .ce(1'b1),
    .dout(grp_fu_436_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_444_p0),
    .din1(grp_fu_444_p1),
    .ce(1'b1),
    .dout(grp_fu_444_p2)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U19(
    .din0(grp_fu_453_p0),
    .din1(grp_fu_453_p1),
    .opcode(grp_fu_453_opcode),
    .dout(grp_fu_453_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_conv1_1_fu_412_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond_fu_487_p2))) begin
            ap_reg_grp_dut_conv1_1_fu_412_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_conv1_1_fu_412_ap_ready)) begin
            ap_reg_grp_dut_conv1_1_fu_412_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_conv1_fu_404_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            ap_reg_grp_dut_conv1_fu_404_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_conv1_fu_404_ap_ready)) begin
            ap_reg_grp_dut_conv1_fu_404_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_max_pool_fu_421_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
            ap_reg_grp_dut_max_pool_fu_421_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_max_pool_fu_421_ap_ready)) begin
            ap_reg_grp_dut_max_pool_fu_421_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_reshape_fu_430_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            ap_reg_grp_dut_reshape_fu_430_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_reshape_fu_430_ap_ready)) begin
            ap_reg_grp_dut_reshape_fu_430_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_fu_487_p2))) begin
        i_reg_264 <= i_1_fu_493_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_264 <= ap_const_lv13_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        m_i1_reg_393 <= m_2_reg_1047;
    end else if (((1'b1 == ap_sig_cseq_ST_st50_fsm_49) & (1'b0 == exitcond4_fu_748_p2))) begin
        m_i1_reg_393 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        m_i5_reg_346 <= m_1_reg_986;
    end else if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & (1'b0 == exitcond2_fu_610_p2))) begin
        m_i5_reg_346 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        m_i_reg_311 <= m_reg_930;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond1_fu_511_p2))) begin
        m_i_reg_311 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == exitcond1_fu_511_p2))) begin
        n_i1_reg_322 <= ap_const_lv7_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        n_i1_reg_322 <= n_1_reg_973;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(1'b0 == exitcond2_fu_610_p2))) begin
        n_i2_reg_357 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        n_i2_reg_357 <= n_2_reg_1034;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        n_i_reg_275 <= n_reg_922;
    end else if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == grp_dut_reshape_fu_430_ap_done))) begin
        n_i_reg_275 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(1'b0 == exitcond2_fu_610_p2))) begin
        phi_mul1_reg_369 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        phi_mul1_reg_369 <= next_mul2_reg_1026;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        phi_mul_reg_287 <= next_mul_reg_914;
    end else if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == grp_dut_reshape_fu_430_ap_done))) begin
        phi_mul_reg_287 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        sum_i1_reg_381 <= grp_fu_436_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st50_fsm_49) & (1'b0 == exitcond4_fu_748_p2))) begin
        sum_i1_reg_381 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        sum_i4_reg_334 <= grp_fu_436_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & (1'b0 == exitcond2_fu_610_p2))) begin
        sum_i4_reg_334 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        sum_i_reg_299 <= grp_fu_436_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond1_fu_511_p2))) begin
        sum_i_reg_299 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        biased_1_reg_965 <= biased_1_fu_602_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        biased_3_reg_1021 <= biased_3_fu_734_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        fc1_bias_load_reg_960 <= fc1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        fc2_bias_load_reg_1016 <= fc2_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        m_1_reg_986 <= m_1_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        m_2_reg_1047 <= m_2_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        m_reg_930 <= m_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        mem_conv2_load_1_reg_1072 <= mem_conv2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        n_1_reg_973 <= n_1_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        n_2_reg_1034 <= n_2_fu_754_p2;
        next_mul2_reg_1026 <= next_mul2_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        n_reg_922 <= n_fu_517_p2;
        next_mul_reg_914 <= next_mul_fu_505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        reg_463 <= grp_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st64_fsm_63))) begin
        reg_475 <= grp_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st66_fsm_65))) begin
        reg_481 <= mem_conv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(exitcond3_fu_527_p2 == 1'b0))) begin
        tmp_15_i_reg_945[6 : 0] <= tmp_15_i_fu_555_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & ~(1'b0 == exitcond5_fu_656_p2))) begin
        tmp_16_i1_reg_1001[6 : 0] <= tmp_16_i1_fu_687_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & (1'b0 == exitcond2_fu_610_p2))) begin
        tmp_i3_reg_978[14 : 3] <= tmp_i3_fu_646_p2[14 : 3];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st67_fsm_66))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st67_fsm_66)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_630) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_255) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_268) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_279) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_138) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_155) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_664) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_84) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_180) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_302) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_671) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_204) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_311) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_246) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_498) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_320) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_334) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_229) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_162) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_679) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_579) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_187) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_356) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_686) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_211) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_365) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_518) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_596) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_374) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_391) begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_145) begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_170) begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_694) begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_611) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_195) begin
        ap_sig_cseq_ST_st60_fsm_59 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_219) begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_533) begin
        ap_sig_cseq_ST_st65_fsm_64 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_236) begin
        ap_sig_cseq_ST_st66_fsm_65 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_708) begin
        ap_sig_cseq_ST_st67_fsm_66 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_553) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_560) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_603) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_618) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        fc1_bias_ce0 = 1'b1;
    end else begin
        fc1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        fc1_weight_ce0 = 1'b1;
    end else begin
        fc1_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        fc2_bias_ce0 = 1'b1;
    end else begin
        fc2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        fc2_weight_ce0 = 1'b1;
    end else begin
        fc2_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        fc3_weight_ce0 = 1'b1;
    end else begin
        fc3_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_dut_max_pool_fu_421_I = ap_const_lv6_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_dut_max_pool_fu_421_I = ap_const_lv6_1C;
    end else begin
        grp_dut_max_pool_fu_421_I = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        grp_fu_436_p0 = sum_i1_reg_381;
    end else if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_fu_436_p0 = sum_i1_phi_fu_385_p4;
    end else if (((1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42))) begin
        grp_fu_436_p0 = sum_i4_reg_334;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23))) begin
        grp_fu_436_p0 = sum_i_reg_299;
    end else begin
        grp_fu_436_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_fu_436_p1 = bias_load_phi_i_fu_796_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_436_p1 = fc2_bias_load_reg_1016;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_436_p1 = fc1_bias_load_reg_960;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st56_fsm_55))) begin
        grp_fu_436_p1 = reg_463;
    end else begin
        grp_fu_436_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_444_p0 = mem_conv2_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st52_fsm_51))) begin
        grp_fu_444_p0 = mem_conv1_q0;
    end else begin
        grp_fu_444_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_444_p1 = fc3_weight_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_444_p1 = fc2_weight_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_444_p1 = fc1_weight_q0;
    end else begin
        grp_fu_444_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st67_fsm_66)) begin
        grp_fu_453_opcode = ap_const_lv5_4;
    end else if (((1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47))) begin
        grp_fu_453_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_453_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st67_fsm_66)) begin
        grp_fu_453_p0 = reg_481;
    end else if (((1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47))) begin
        grp_fu_453_p0 = reg_475;
    end else begin
        grp_fu_453_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st67_fsm_66)) begin
        grp_fu_453_p1 = mem_conv2_load_1_reg_1072;
    end else if (((1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47))) begin
        grp_fu_453_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_453_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        mem_conv1_address0 = tmp_16_i1_reg_1001;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_fu_487_p2))) begin
        mem_conv1_address0 = tmp_s_fu_499_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        mem_conv1_address0 = tmp_13_i1_fu_782_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        mem_conv1_address0 = tmp_12_i_fu_545_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        mem_conv1_address0 = grp_dut_reshape_fu_430_output_r_address0;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        mem_conv1_address0 = grp_dut_max_pool_fu_421_input_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        mem_conv1_address0 = grp_dut_conv1_1_fu_412_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        mem_conv1_address0 = grp_dut_conv1_fu_404_output_r_address0;
    end else begin
        mem_conv1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st51_fsm_50) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_fu_487_p2)) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        mem_conv1_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        mem_conv1_ce0 = grp_dut_reshape_fu_430_output_r_ce0;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        mem_conv1_ce0 = grp_dut_max_pool_fu_421_input_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        mem_conv1_ce0 = grp_dut_conv1_1_fu_412_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        mem_conv1_ce0 = grp_dut_conv1_fu_404_output_r_ce0;
    end else begin
        mem_conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        mem_conv1_d0 = biased_3_reg_1021;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_fu_487_p2))) begin
        mem_conv1_d0 = ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        mem_conv1_d0 = grp_dut_reshape_fu_430_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        mem_conv1_d0 = grp_dut_conv1_1_fu_412_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        mem_conv1_d0 = grp_dut_conv1_fu_404_output_r_d0;
    end else begin
        mem_conv1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_fu_487_p2)) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        mem_conv1_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        mem_conv1_we0 = grp_dut_reshape_fu_430_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        mem_conv1_we0 = grp_dut_conv1_1_fu_412_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        mem_conv1_we0 = grp_dut_conv1_fu_404_output_r_we0;
    end else begin
        mem_conv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        mem_conv2_address0 = tmp_15_i_reg_945;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mem_conv2_address0 = tmp_s_fu_499_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        mem_conv2_address0 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        mem_conv2_address0 = tmp_13_i8_fu_677_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        mem_conv2_address0 = grp_dut_reshape_fu_430_input_r_address0;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        mem_conv2_address0 = grp_dut_max_pool_fu_421_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        mem_conv2_address0 = grp_dut_conv1_fu_404_input_r_address0;
    end else begin
        mem_conv2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        mem_conv2_address1 = tmp_16_i2_fu_805_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        mem_conv2_address1 = ap_const_lv64_1;
    end else begin
        mem_conv2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29))) begin
        mem_conv2_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        mem_conv2_ce0 = grp_dut_reshape_fu_430_input_r_ce0;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        mem_conv2_ce0 = grp_dut_max_pool_fu_421_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        mem_conv2_ce0 = grp_dut_conv1_fu_404_input_r_ce0;
    end else begin
        mem_conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st50_fsm_49) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64))) begin
        mem_conv2_ce1 = 1'b1;
    end else begin
        mem_conv2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        mem_conv2_d0 = biased_1_reg_965;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mem_conv2_d0 = ap_const_lv32_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        mem_conv2_d0 = grp_dut_max_pool_fu_421_output_r_d0;
    end else begin
        mem_conv2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond_fu_487_p2)) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29))) begin
        mem_conv2_we0 = 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        mem_conv2_we0 = grp_dut_max_pool_fu_421_output_r_we0;
    end else begin
        mem_conv2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        mem_conv2_we1 = 1'b1;
    end else begin
        mem_conv2_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond_fu_487_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == grp_dut_conv1_1_fu_412_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == grp_dut_max_pool_fu_421_ap_done)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == grp_dut_conv1_fu_404_ap_done)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            if (~(1'b0 == grp_dut_max_pool_fu_421_ap_done)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            if (~(1'b0 == grp_dut_reshape_fu_430_ap_done)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st12_fsm_11 : begin
            if ((1'b0 == exitcond1_fu_511_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end
        end
        ap_ST_st13_fsm_12 : begin
            if (~(exitcond3_fu_527_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st31_fsm_30 : begin
            if ((1'b0 == exitcond2_fu_610_p2)) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end
        end
        ap_ST_st32_fsm_31 : begin
            if (~(1'b0 == exitcond5_fu_656_p2)) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st50_fsm_49 : begin
            if ((1'b0 == exitcond4_fu_748_p2)) begin
                ap_NS_fsm = ap_ST_st51_fsm_50;
            end else begin
                ap_NS_fsm = ap_ST_st66_fsm_65;
            end
        end
        ap_ST_st51_fsm_50 : begin
            if (~(1'b0 == exitcond6_fu_764_p2)) begin
                ap_NS_fsm = ap_ST_st61_fsm_60;
            end else begin
                ap_NS_fsm = ap_ST_st52_fsm_51;
            end
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = ((tmp_12_fu_887_p2[0:0] === 1'b1) ? ap_const_lv32_3F800000 : ap_const_lv32_0);

always @ (*) begin
    ap_sig_138 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_145 = (1'b1 == ap_CS_fsm[ap_const_lv32_33]);
end

always @ (*) begin
    ap_sig_155 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_162 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_170 = (1'b1 == ap_CS_fsm[ap_const_lv32_36]);
end

always @ (*) begin
    ap_sig_180 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_187 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_195 = (1'b1 == ap_CS_fsm[ap_const_lv32_3B]);
end

always @ (*) begin
    ap_sig_204 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_211 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_219 = (1'b1 == ap_CS_fsm[ap_const_lv32_3F]);
end

always @ (*) begin
    ap_sig_229 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_236 = (1'b1 == ap_CS_fsm[ap_const_lv32_41]);
end

always @ (*) begin
    ap_sig_246 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_255 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_268 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_279 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_302 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_311 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_320 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_334 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_356 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_365 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_374 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_391 = (1'b1 == ap_CS_fsm[ap_const_lv32_32]);
end

always @ (*) begin
    ap_sig_498 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_518 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_533 = (1'b1 == ap_CS_fsm[ap_const_lv32_40]);
end

always @ (*) begin
    ap_sig_553 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_560 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_579 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_596 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_603 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_611 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_618 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_630 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_664 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_671 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_679 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_686 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_694 = (1'b1 == ap_CS_fsm[ap_const_lv32_37]);
end

always @ (*) begin
    ap_sig_708 = (1'b1 == ap_CS_fsm[ap_const_lv32_42]);
end

always @ (*) begin
    ap_sig_84 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign bias_load_phi_i_fu_796_p3 = ((tmp_19_fu_792_p1[0:0] === 1'b1) ? ap_const_lv32_3E759240 : ap_const_lv32_BE833E74);

assign biased_1_fu_602_p3 = ((tmp_4_fu_596_p2[0:0] === 1'b1) ? reg_475 : ap_const_lv32_0);

assign biased_2_to_int_fu_692_p1 = reg_475;

assign biased_3_fu_734_p3 = ((tmp_18_fu_728_p2[0:0] === 1'b1) ? reg_475 : ap_const_lv32_0);

assign biased_to_int_fu_560_p1 = reg_475;

assign exitcond1_fu_511_p2 = ((n_i_reg_275 == ap_const_lv7_78) ? 1'b1 : 1'b0);

assign exitcond2_fu_610_p2 = ((n_i1_reg_322 == ap_const_lv7_54) ? 1'b1 : 1'b0);

assign exitcond3_fu_527_p2 = ((m_i_reg_311 == ap_const_lv9_190) ? 1'b1 : 1'b0);

assign exitcond4_fu_748_p2 = ((n_i2_reg_357 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond5_fu_656_p2 = ((m_i5_reg_346 == ap_const_lv7_78) ? 1'b1 : 1'b0);

assign exitcond6_fu_764_p2 = ((m_i1_reg_393 == ap_const_lv7_54) ? 1'b1 : 1'b0);

assign exitcond_fu_487_p2 = ((i_reg_264 == ap_const_lv13_1260) ? 1'b1 : 1'b0);

assign fc1_bias_address0 = tmp_15_i_fu_555_p1;

assign fc1_weight_address0 = tmp_13_i_fu_550_p1;

assign fc2_bias_address0 = tmp_16_i1_fu_687_p1;

assign fc2_weight_address0 = tmp_14_i1_fu_682_p1;

assign fc3_weight_address0 = tmp_14_i2_fu_787_p1;

assign grp_dut_conv1_1_fu_412_ap_start = ap_reg_grp_dut_conv1_1_fu_412_ap_start;

assign grp_dut_conv1_fu_404_ap_start = ap_reg_grp_dut_conv1_fu_404_ap_start;

assign grp_dut_max_pool_fu_421_ap_start = ap_reg_grp_dut_max_pool_fu_421_ap_start;

assign grp_dut_reshape_fu_430_ap_start = ap_reg_grp_dut_reshape_fu_430_ap_start;

assign i_1_fu_493_p2 = (i_reg_264 + ap_const_lv13_1);

assign input_r_address0 = grp_dut_conv1_1_fu_412_input_r_address0;

assign input_r_ce0 = grp_dut_conv1_1_fu_412_input_r_ce0;

assign m_1_fu_662_p2 = (m_i5_reg_346 + ap_const_lv7_1);

assign m_2_fu_770_p2 = (m_i1_reg_393 + ap_const_lv7_1);

assign m_fu_533_p2 = (m_i_reg_311 + ap_const_lv9_1);

assign m_i1_cast_fu_760_p1 = m_i1_reg_393;

assign m_i5_cast5_fu_652_p1 = m_i5_reg_346;

assign m_i_cast_fu_523_p1 = m_i_reg_311;

assign mem_conv2_load_1_to_int_fu_828_p1 = mem_conv2_load_1_reg_1072;

assign mem_conv2_load_to_int_fu_810_p1 = reg_481;

assign n_1_fu_616_p2 = (n_i1_reg_322 + ap_const_lv7_1);

assign n_2_fu_754_p2 = (n_i2_reg_357 + ap_const_lv2_1);

assign n_fu_517_p2 = (n_i_reg_275 + ap_const_lv7_1);

assign next_mul2_fu_742_p2 = (phi_mul1_reg_369 + ap_const_lv8_54);

assign next_mul_fu_505_p2 = (phi_mul_reg_287 + ap_const_lv16_190);

assign notlhs1_fu_845_p2 = ((tmp_5_fu_814_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_863_p2 = ((tmp_7_fu_831_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_710_p2 = ((tmp_14_fu_696_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_578_p2 = ((tmp_fu_564_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_851_p2 = ((tmp_1_fu_824_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_869_p2 = ((tmp_6_fu_841_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_716_p2 = ((tmp_15_fu_706_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_584_p2 = ((tmp_13_fu_574_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_shl1_i_cast_fu_642_p1 = p_shl1_i_fu_634_p3;

assign p_shl1_i_fu_634_p3 = {{n_i1_reg_322}, {ap_const_lv3_0}};

assign p_shl_i_cast_fu_630_p1 = p_shl_i_fu_622_p3;

assign p_shl_i_fu_622_p3 = {{n_i1_reg_322}, {ap_const_lv7_0}};

assign sum_i1_phi_fu_385_p4 = sum_i1_reg_381;

assign tmp_10_fu_881_p2 = (tmp_9_fu_857_p2 & tmp_8_fu_875_p2);

assign tmp_12_fu_887_p2 = (tmp_10_fu_881_p2 & grp_fu_453_p2);

assign tmp_12_i_fu_545_p1 = m_i_reg_311;

assign tmp_13_fu_574_p1 = biased_to_int_fu_560_p1[22:0];

assign tmp_13_i1_fu_782_p1 = m_i1_reg_393;

assign tmp_13_i8_fu_677_p1 = m_i5_reg_346;

assign tmp_13_i_fu_550_p1 = w_index_fu_539_p2;

assign tmp_14_fu_696_p4 = {{biased_2_to_int_fu_692_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_14_i1_fu_682_p1 = $unsigned(w_index_1_cast_fu_673_p1);

assign tmp_14_i2_fu_787_p1 = w_index_2_fu_776_p2;

assign tmp_15_fu_706_p1 = biased_2_to_int_fu_692_p1[22:0];

assign tmp_15_i_fu_555_p1 = n_i_reg_275;

assign tmp_16_fu_722_p2 = (notrhs3_fu_716_p2 | notlhs3_fu_710_p2);

assign tmp_16_i1_fu_687_p1 = n_i1_reg_322;

assign tmp_16_i2_fu_805_p1 = n_i2_reg_357;

assign tmp_18_fu_728_p2 = (tmp_16_fu_722_p2 & grp_fu_453_p2);

assign tmp_19_fu_792_p1 = n_i2_reg_357[0:0];

assign tmp_1_fu_824_p1 = mem_conv2_load_to_int_fu_810_p1[22:0];

assign tmp_2_fu_590_p2 = (notrhs_fu_584_p2 | notlhs_fu_578_p2);

assign tmp_4_fu_596_p2 = (tmp_2_fu_590_p2 & grp_fu_453_p2);

assign tmp_5_fu_814_p4 = {{mem_conv2_load_to_int_fu_810_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_6_fu_841_p1 = mem_conv2_load_1_to_int_fu_828_p1[22:0];

assign tmp_7_fu_831_p4 = {{mem_conv2_load_1_to_int_fu_828_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_8_fu_875_p2 = (notrhs2_fu_869_p2 | notlhs2_fu_863_p2);

assign tmp_9_fu_857_p2 = (notrhs1_fu_851_p2 | notlhs1_fu_845_p2);

assign tmp_fu_564_p4 = {{biased_to_int_fu_560_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_i3_fu_646_p2 = (p_shl_i_cast_fu_630_p1 - p_shl1_i_cast_fu_642_p1);

assign tmp_s_fu_499_p1 = i_reg_264;

assign w_index_1_cast_fu_673_p1 = $signed(w_index_1_fu_668_p2);

assign w_index_1_fu_668_p2 = (m_i5_cast5_fu_652_p1 + tmp_i3_reg_978);

assign w_index_2_fu_776_p2 = (m_i1_cast_fu_760_p1 + phi_mul1_reg_369);

assign w_index_fu_539_p2 = (m_i_cast_fu_523_p1 + phi_mul_reg_287);

always @ (posedge ap_clk) begin
    tmp_15_i_reg_945[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_i3_reg_978[2:0] <= 3'b000;
    tmp_16_i1_reg_1001[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //dut_mlp_xcel
