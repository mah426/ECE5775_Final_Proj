// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_max_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        I
);

parameter    ap_ST_st1_fsm_0 = 13'b1;
parameter    ap_ST_st2_fsm_1 = 13'b10;
parameter    ap_ST_st3_fsm_2 = 13'b100;
parameter    ap_ST_st4_fsm_3 = 13'b1000;
parameter    ap_ST_st5_fsm_4 = 13'b10000;
parameter    ap_ST_st6_fsm_5 = 13'b100000;
parameter    ap_ST_st7_fsm_6 = 13'b1000000;
parameter    ap_ST_st8_fsm_7 = 13'b10000000;
parameter    ap_ST_st9_fsm_8 = 13'b100000000;
parameter    ap_ST_st10_fsm_9 = 13'b1000000000;
parameter    ap_ST_st11_fsm_10 = 13'b10000000000;
parameter    ap_ST_st12_fsm_11 = 13'b100000000000;
parameter    ap_ST_st13_fsm_12 = 13'b1000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_800000 = 32'b100000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv12_C00 = 12'b110000000000;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [12:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;
input  [5:0] I;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg[12:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[31:0] output_r_d0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_30;
wire   [3:0] O_fu_236_p4;
reg   [3:0] O_reg_539;
wire   [10:0] O_cast10_cast1_fu_246_p1;
reg   [10:0] O_cast10_cast1_reg_545;
wire   [6:0] O_cast10_cast_fu_250_p1;
reg   [6:0] O_cast10_cast_reg_550;
wire   [11:0] i_2_fu_260_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_67;
wire   [7:0] I_cast2_fu_271_p1;
reg   [7:0] I_cast2_reg_563;
wire   [0:0] exitcond3_fu_254_p2;
wire   [12:0] I_cast_fu_274_p1;
reg   [12:0] I_cast_reg_568;
wire   [7:0] next_mul_fu_277_p2;
reg   [7:0] next_mul_reg_573;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_85;
wire   [2:0] m_1_fu_292_p2;
reg   [2:0] m_1_reg_581;
wire   [6:0] tmp_2_fu_298_p2;
reg   [6:0] tmp_2_reg_586;
wire   [0:0] exitcond7_fu_286_p2;
wire   [10:0] x_cast6_fu_303_p1;
reg   [10:0] x_cast6_reg_591;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_101;
wire   [3:0] x_2_fu_312_p2;
reg   [3:0] x_2_reg_599;
wire   [12:0] tmp_5_cast_fu_326_p1;
reg   [12:0] tmp_5_cast_reg_604;
wire   [0:0] exitcond4_fu_307_p2;
wire   [3:0] y_2_fu_339_p2;
reg   [3:0] y_2_reg_612;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_117;
wire   [10:0] tmp4_fu_354_p2;
reg   [10:0] tmp4_reg_617;
wire   [0:0] exitcond2_fu_334_p2;
wire   [10:0] o_index_fu_359_p2;
reg   [10:0] o_index_reg_622;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_131;
wire   [7:0] tmp_6_cast_fu_371_p1;
reg   [7:0] tmp_6_cast_reg_627;
wire   [12:0] c_cast4_fu_375_p1;
reg   [12:0] c_cast4_reg_632;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_142;
wire   [1:0] c_2_fu_385_p2;
reg   [1:0] c_2_reg_640;
wire   [1:0] r_1_fu_405_p2;
reg   [1:0] r_1_reg_648;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_153;
wire   [7:0] tmp5_fu_417_p2;
reg   [7:0] tmp5_reg_653;
wire   [0:0] exitcond_fu_399_p2;
wire   [12:0] tmp6_fu_425_p2;
reg   [12:0] tmp6_reg_658;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_167;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_176;
reg   [31:0] input_load_reg_668;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_184;
wire   [0:0] tmp_26_fu_231_p2;
reg   [0:0] tmp_26_reg_675;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_193;
wire   [31:0] max_2_fu_526_p3;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_202;
reg   [11:0] i_reg_127;
reg   [2:0] m_reg_138;
reg   [7:0] phi_mul_reg_149;
reg   [3:0] x_reg_161;
reg   [3:0] y_reg_172;
wire   [0:0] exitcond1_fu_379_p2;
reg   [31:0] max_reg_184;
reg   [1:0] c_reg_197;
reg   [31:0] max_1_reg_208;
reg   [1:0] r_reg_220;
wire   [63:0] tmp_s_fu_266_p1;
wire   [63:0] tmp_7_fu_391_p1;
wire   [63:0] tmp_1_fu_439_p1;
wire   [3:0] tmp_2_fu_298_p0;
wire   [2:0] tmp_2_fu_298_p1;
wire   [4:0] tmp_5_fu_318_p3;
wire   [6:0] y_cast5_fu_330_p1;
wire   [6:0] tmp_fu_345_p2;
wire   [3:0] tmp4_fu_354_p0;
wire   [6:0] tmp4_fu_354_p1;
wire   [4:0] tmp_6_fu_363_p3;
wire   [7:0] r_cast3_fu_395_p1;
wire   [7:0] tmp1_fu_411_p2;
wire   [5:0] tmp6_fu_425_p0;
wire   [7:0] tmp6_fu_425_p1;
wire   [12:0] tmp2_fu_430_p2;
wire   [12:0] i_index_fu_434_p2;
wire   [31:0] input_load_to_int_fu_444_p1;
wire   [31:0] max_1_to_int_fu_461_p1;
wire   [7:0] tmp_19_fu_447_p4;
wire   [22:0] tmp_20_fu_457_p1;
wire   [0:0] notrhs_fu_485_p2;
wire   [0:0] notlhs_fu_479_p2;
wire   [7:0] tmp_21_fu_465_p4;
wire   [22:0] tmp_22_fu_475_p1;
wire   [0:0] notrhs4_fu_503_p2;
wire   [0:0] notlhs3_fu_497_p2;
wire   [0:0] tmp_23_fu_491_p2;
wire   [0:0] tmp_24_fu_509_p2;
wire   [0:0] tmp_25_fu_515_p2;
wire   [0:0] tmp_27_fu_521_p2;
reg   [12:0] ap_NS_fsm;
wire   [10:0] tmp4_fu_354_p10;
wire   [12:0] tmp6_fu_425_p10;
wire   [6:0] tmp_2_fu_298_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'b1;
end

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U6(
    .din0(input_load_reg_668),
    .din1(max_1_reg_208),
    .opcode(ap_const_lv5_2),
    .dout(tmp_26_fu_231_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond_fu_399_p2))) begin
        c_reg_197 <= c_2_reg_640;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        c_reg_197 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_254_p2 == 1'b0))) begin
        i_reg_127 <= i_2_fu_260_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_127 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_254_p2 == 1'b0))) begin
        m_reg_138 <= ap_const_lv3_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_307_p2))) begin
        m_reg_138 <= m_1_reg_581;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        max_1_reg_208 <= max_2_fu_526_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond1_fu_379_p2))) begin
        max_1_reg_208 <= max_reg_184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond_fu_399_p2))) begin
        max_reg_184 <= max_1_reg_208;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        max_reg_184 <= ap_const_lv32_800000;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_254_p2 == 1'b0))) begin
        phi_mul_reg_149 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_307_p2))) begin
        phi_mul_reg_149 <= next_mul_reg_573;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        r_reg_220 <= r_1_reg_648;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond1_fu_379_p2))) begin
        r_reg_220 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond2_fu_334_p2))) begin
        x_reg_161 <= x_2_reg_599;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond7_fu_286_p2))) begin
        x_reg_161 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond1_fu_379_p2))) begin
        y_reg_172 <= y_2_reg_612;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond4_fu_307_p2))) begin
        y_reg_172 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_254_p2 == 1'b0))) begin
        I_cast2_reg_563[5 : 0] <= I_cast2_fu_271_p1[5 : 0];
        I_cast_reg_568[5 : 0] <= I_cast_fu_274_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        O_cast10_cast1_reg_545[3 : 0] <= O_cast10_cast1_fu_246_p1[3 : 0];
        O_cast10_cast_reg_550[3 : 0] <= O_cast10_cast_fu_250_p1[3 : 0];
        O_reg_539 <= {{I[ap_const_lv32_4 : ap_const_lv32_1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        c_2_reg_640 <= c_2_fu_385_p2;
        c_cast4_reg_632[1 : 0] <= c_cast4_fu_375_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        input_load_reg_668 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        m_1_reg_581 <= m_1_fu_292_p2;
        next_mul_reg_573 <= next_mul_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        o_index_reg_622 <= o_index_fu_359_p2;
        tmp_6_cast_reg_627[4 : 1] <= tmp_6_cast_fu_371_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        r_1_reg_648 <= r_1_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond2_fu_334_p2))) begin
        tmp4_reg_617 <= tmp4_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & (1'b0 == exitcond_fu_399_p2))) begin
        tmp5_reg_653 <= tmp5_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp6_reg_658 <= tmp6_fu_425_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_26_reg_675 <= tmp_26_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond7_fu_286_p2))) begin
        tmp_2_reg_586 <= tmp_2_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond4_fu_307_p2))) begin
        tmp_5_cast_reg_604[4 : 1] <= tmp_5_cast_fu_326_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        x_2_reg_599 <= x_2_fu_312_p2;
        x_cast6_reg_591[3 : 0] <= x_cast6_fu_303_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        y_2_reg_612 <= y_2_fu_339_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond7_fu_286_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond7_fu_286_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_176) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_184) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_193) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_202) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_30) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_67) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_85) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_101) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_117) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_131) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_142) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_153) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_167) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        output_r_address0 = tmp_7_fu_391_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_r_address0 = tmp_s_fu_266_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        output_r_d0 = max_reg_184;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_r_d0 = ap_const_lv32_0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_254_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond1_fu_379_p2)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond3_fu_254_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond7_fu_286_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond4_fu_307_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond2_fu_334_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == exitcond1_fu_379_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            if (~(1'b0 == exitcond_fu_399_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign I_cast2_fu_271_p1 = I;

assign I_cast_fu_274_p1 = I;

assign O_cast10_cast1_fu_246_p1 = O_fu_236_p4;

assign O_cast10_cast_fu_250_p1 = O_fu_236_p4;

assign O_fu_236_p4 = {{I[ap_const_lv32_4 : ap_const_lv32_1]}};

always @ (*) begin
    ap_sig_101 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_117 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_131 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_142 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_153 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_167 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_176 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_184 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_193 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_202 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_30 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_67 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_85 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign c_2_fu_385_p2 = (c_reg_197 + ap_const_lv2_1);

assign c_cast4_fu_375_p1 = c_reg_197;

assign exitcond1_fu_379_p2 = ((c_reg_197 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond2_fu_334_p2 = ((y_reg_172 == O_reg_539) ? 1'b1 : 1'b0);

assign exitcond3_fu_254_p2 = ((i_reg_127 == ap_const_lv12_C00) ? 1'b1 : 1'b0);

assign exitcond4_fu_307_p2 = ((x_reg_161 == O_reg_539) ? 1'b1 : 1'b0);

assign exitcond7_fu_286_p2 = ((m_reg_138 == ap_const_lv3_6) ? 1'b1 : 1'b0);

assign exitcond_fu_399_p2 = ((r_reg_220 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign i_2_fu_260_p2 = (i_reg_127 + ap_const_lv12_1);

assign i_index_fu_434_p2 = (c_cast4_reg_632 + tmp2_fu_430_p2);

assign input_load_to_int_fu_444_p1 = input_load_reg_668;

assign input_r_address0 = tmp_1_fu_439_p1;

assign m_1_fu_292_p2 = (m_reg_138 + ap_const_lv3_1);

assign max_1_to_int_fu_461_p1 = max_1_reg_208;

assign max_2_fu_526_p3 = ((tmp_27_fu_521_p2[0:0] === 1'b1) ? input_load_reg_668 : max_1_reg_208);

assign next_mul_fu_277_p2 = (phi_mul_reg_149 + I_cast2_reg_563);

assign notlhs3_fu_497_p2 = ((tmp_21_fu_465_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_479_p2 = ((tmp_19_fu_447_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs4_fu_503_p2 = ((tmp_22_fu_475_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_485_p2 = ((tmp_20_fu_457_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign o_index_fu_359_p2 = (x_cast6_reg_591 + tmp4_reg_617);

assign r_1_fu_405_p2 = (r_reg_220 + ap_const_lv2_1);

assign r_cast3_fu_395_p1 = r_reg_220;

assign tmp1_fu_411_p2 = (r_cast3_fu_395_p1 + phi_mul_reg_149);

assign tmp2_fu_430_p2 = (tmp6_reg_658 + tmp_5_cast_reg_604);

assign tmp4_fu_354_p0 = O_cast10_cast1_reg_545;

assign tmp4_fu_354_p1 = tmp4_fu_354_p10;

assign tmp4_fu_354_p10 = tmp_fu_345_p2;

assign tmp4_fu_354_p2 = (tmp4_fu_354_p0 * tmp4_fu_354_p1);

assign tmp5_fu_417_p2 = (tmp_6_cast_reg_627 + tmp1_fu_411_p2);

assign tmp6_fu_425_p0 = I_cast_reg_568;

assign tmp6_fu_425_p1 = tmp6_fu_425_p10;

assign tmp6_fu_425_p10 = tmp5_reg_653;

assign tmp6_fu_425_p2 = (tmp6_fu_425_p0 * tmp6_fu_425_p1);

assign tmp_19_fu_447_p4 = {{input_load_to_int_fu_444_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_1_fu_439_p1 = i_index_fu_434_p2;

assign tmp_20_fu_457_p1 = input_load_to_int_fu_444_p1[22:0];

assign tmp_21_fu_465_p4 = {{max_1_to_int_fu_461_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_22_fu_475_p1 = max_1_to_int_fu_461_p1[22:0];

assign tmp_23_fu_491_p2 = (notrhs_fu_485_p2 | notlhs_fu_479_p2);

assign tmp_24_fu_509_p2 = (notrhs4_fu_503_p2 | notlhs3_fu_497_p2);

assign tmp_25_fu_515_p2 = (tmp_23_fu_491_p2 & tmp_24_fu_509_p2);

assign tmp_27_fu_521_p2 = (tmp_25_fu_515_p2 & tmp_26_reg_675);

assign tmp_2_fu_298_p0 = O_cast10_cast_reg_550;

assign tmp_2_fu_298_p1 = tmp_2_fu_298_p10;

assign tmp_2_fu_298_p10 = m_reg_138;

assign tmp_2_fu_298_p2 = (tmp_2_fu_298_p0 * tmp_2_fu_298_p1);

assign tmp_5_cast_fu_326_p1 = tmp_5_fu_318_p3;

assign tmp_5_fu_318_p3 = {{x_reg_161}, {1'b0}};

assign tmp_6_cast_fu_371_p1 = tmp_6_fu_363_p3;

assign tmp_6_fu_363_p3 = {{y_reg_172}, {1'b0}};

assign tmp_7_fu_391_p1 = o_index_reg_622;

assign tmp_fu_345_p2 = (tmp_2_reg_586 + y_cast5_fu_330_p1);

assign tmp_s_fu_266_p1 = i_reg_127;

assign x_2_fu_312_p2 = (x_reg_161 + ap_const_lv4_1);

assign x_cast6_fu_303_p1 = x_reg_161;

assign y_2_fu_339_p2 = (y_reg_172 + ap_const_lv4_1);

assign y_cast5_fu_330_p1 = y_reg_172;

always @ (posedge ap_clk) begin
    O_cast10_cast1_reg_545[10:4] <= 7'b0000000;
    O_cast10_cast_reg_550[6:4] <= 3'b000;
    I_cast2_reg_563[7:6] <= 2'b00;
    I_cast_reg_568[12:6] <= 7'b0000000;
    x_cast6_reg_591[10:4] <= 7'b0000000;
    tmp_5_cast_reg_604[0] <= 1'b0;
    tmp_5_cast_reg_604[12:5] <= 8'b00000000;
    tmp_6_cast_reg_627[0] <= 1'b0;
    tmp_6_cast_reg_627[7:5] <= 3'b000;
    c_cast4_reg_632[12:2] <= 11'b00000000000;
end

endmodule //dut_max_pool
