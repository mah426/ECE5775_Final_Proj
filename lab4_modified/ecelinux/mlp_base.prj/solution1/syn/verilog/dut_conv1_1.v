// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_conv1_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_st1_fsm_0 = 20'b1;
parameter    ap_ST_st2_fsm_1 = 20'b10;
parameter    ap_ST_st3_fsm_2 = 20'b100;
parameter    ap_ST_st4_fsm_3 = 20'b1000;
parameter    ap_ST_st5_fsm_4 = 20'b10000;
parameter    ap_ST_st6_fsm_5 = 20'b100000;
parameter    ap_ST_st7_fsm_6 = 20'b1000000;
parameter    ap_ST_st8_fsm_7 = 20'b10000000;
parameter    ap_ST_st9_fsm_8 = 20'b100000000;
parameter    ap_ST_st10_fsm_9 = 20'b1000000000;
parameter    ap_ST_st11_fsm_10 = 20'b10000000000;
parameter    ap_ST_st12_fsm_11 = 20'b100000000000;
parameter    ap_ST_st13_fsm_12 = 20'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 20'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 20'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 20'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 20'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 20'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 20'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 20'b10000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv11_19 = 11'b11001;
parameter    ap_const_lv3_5 = 3'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [12:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_37;
wire   [8:0] conv1_weight_address0;
reg    conv1_weight_ce0;
wire   [31:0] conv1_weight_q0;
wire   [2:0] n_2_fu_235_p2;
reg   [2:0] n_2_reg_490;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_69;
wire   [8:0] tmp_12_fu_269_p2;
reg   [8:0] tmp_12_reg_495;
wire   [0:0] exitcond7_fu_229_p2;
wire   [5:0] tmp_13_fu_275_p2;
reg   [5:0] tmp_13_reg_500;
wire   [4:0] x_3_fu_291_p2;
reg   [4:0] x_3_reg_508;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_86;
wire   [13:0] tmp3_fu_322_p2;
reg   [13:0] tmp3_reg_513;
wire   [0:0] exitcond9_fu_285_p2;
wire   [4:0] y_3_fu_338_p2;
reg   [4:0] y_3_reg_521;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_100;
wire  signed [31:0] o_index_cast_fu_349_p1;
reg  signed [31:0] o_index_cast_reg_526;
wire   [0:0] exitcond2_fu_332_p2;
wire   [1:0] m_3_fu_363_p2;
reg   [1:0] m_3_reg_534;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_114;
wire   [10:0] tmp_19_fu_378_p2;
reg   [10:0] tmp_19_reg_539;
wire   [0:0] exitcond8_fu_357_p2;
wire   [11:0] c_cast1_fu_392_p1;
reg   [11:0] c_cast1_reg_544;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_128;
wire   [2:0] c_3_fu_402_p2;
reg   [2:0] c_3_reg_552;
wire   [10:0] tmp8_fu_408_p2;
reg   [10:0] tmp8_reg_557;
wire   [0:0] exitcond1_fu_396_p2;
wire   [2:0] r_2_fu_423_p2;
reg   [2:0] r_2_reg_565;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_144;
wire   [0:0] exitcond_fu_417_p2;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_159;
wire   [31:0] grp_fu_219_p2;
reg   [31:0] tmp_23_reg_590;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_169;
wire   [31:0] grp_fu_212_p2;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_178;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_186;
reg   [2:0] n_reg_106;
reg   [4:0] x_reg_117;
reg   [4:0] y_reg_129;
reg   [31:0] sum_reg_141;
reg   [1:0] m_reg_154;
reg   [31:0] filter_sum_reg_166;
reg   [2:0] c_reg_178;
reg   [31:0] filter_sum_1_reg_189;
reg   [2:0] r_reg_201;
wire   [63:0] tmp_16_fu_384_p1;
wire   [63:0] tmp_21_fu_477_p1;
wire   [63:0] tmp_22_fu_482_p1;
reg   [31:0] grp_fu_212_p0;
reg   [31:0] grp_fu_212_p1;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_232;
wire   [7:0] p_shl2_fu_241_p3;
wire   [4:0] p_shl3_fu_253_p3;
wire   [8:0] p_shl2_cast_fu_249_p1;
wire   [8:0] p_shl3_cast_fu_265_p1;
wire   [5:0] p_shl3_cast1_fu_261_p1;
wire   [5:0] n_cast_fu_225_p1;
wire   [8:0] x_cast_fu_281_p1;
wire   [8:0] tmp_fu_297_p2;
wire   [10:0] p_shl5_fu_310_p3;
wire   [13:0] p_shl4_fu_302_p3;
wire  signed [13:0] p_shl5_cast_fu_318_p1;
wire   [13:0] y_cast_fu_328_p1;
wire   [13:0] o_index_fu_344_p2;
wire   [5:0] m_cast_fu_353_p1;
wire   [5:0] tmp_18_fu_369_p2;
wire  signed [5:0] tmp_19_fu_378_p0;
wire   [10:0] c_cast_fu_388_p1;
wire   [4:0] r_cast_fu_413_p1;
wire   [4:0] tmp1_fu_429_p2;
wire   [11:0] tmp2_fu_435_p4;
wire   [4:0] p_shl_fu_450_p3;
wire   [4:0] tmp9_fu_458_p2;
wire   [10:0] tmp9_cast_fu_464_p1;
wire   [10:0] w_index_fu_468_p2;
wire   [11:0] i_index_fu_445_p2;
wire  signed [31:0] w_index_cast_fu_473_p1;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'b1;
end

dut_conv1_1_conv1_weight #(
    .DataWidth( 32 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
conv1_weight_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_weight_address0),
    .ce0(conv1_weight_ce0),
    .q0(conv1_weight_q0)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_212_p0),
    .din1(grp_fu_212_p1),
    .ce(1'b1),
    .dout(grp_fu_212_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_r_q0),
    .din1(conv1_weight_q0),
    .ce(1'b1),
    .dout(grp_fu_219_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond_fu_417_p2))) begin
        c_reg_178 <= c_3_reg_552;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond8_fu_357_p2))) begin
        c_reg_178 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        filter_sum_1_reg_189 <= grp_fu_212_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond1_fu_396_p2))) begin
        filter_sum_1_reg_189 <= filter_sum_reg_166;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond_fu_417_p2))) begin
        filter_sum_reg_166 <= filter_sum_1_reg_189;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond8_fu_357_p2))) begin
        filter_sum_reg_166 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        m_reg_154 <= m_3_reg_534;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_332_p2))) begin
        m_reg_154 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond9_fu_285_p2))) begin
        n_reg_106 <= n_2_reg_490;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n_reg_106 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        r_reg_201 <= r_2_reg_565;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond1_fu_396_p2))) begin
        r_reg_201 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        sum_reg_141 <= grp_fu_212_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_332_p2))) begin
        sum_reg_141 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_332_p2))) begin
        x_reg_117 <= x_3_reg_508;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_229_p2 == 1'b0))) begin
        x_reg_117 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond8_fu_357_p2))) begin
        y_reg_129 <= y_3_reg_521;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_285_p2))) begin
        y_reg_129 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        c_3_reg_552 <= c_3_fu_402_p2;
        c_cast1_reg_544[2 : 0] <= c_cast1_fu_392_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        m_3_reg_534 <= m_3_fu_363_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        n_2_reg_490 <= n_2_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_332_p2))) begin
        o_index_cast_reg_526 <= o_index_cast_fu_349_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        r_2_reg_565 <= r_2_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_285_p2))) begin
        tmp3_reg_513[13 : 2] <= tmp3_fu_322_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond1_fu_396_p2))) begin
        tmp8_reg_557 <= tmp8_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond7_fu_229_p2 == 1'b0))) begin
        tmp_12_reg_495[8 : 2] <= tmp_12_fu_269_p2[8 : 2];
        tmp_13_reg_500 <= tmp_13_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond8_fu_357_p2))) begin
        tmp_19_reg_539 <= tmp_19_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_23_reg_590 <= grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        x_3_reg_508 <= x_3_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        y_3_reg_521 <= y_3_fu_338_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond7_fu_229_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond7_fu_229_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_169) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_232) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_178) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_37) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_186) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_69) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_86) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_100) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_114) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_144) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        conv1_weight_ce0 = 1'b1;
    end else begin
        conv1_weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_212_p0 = filter_sum_1_reg_189;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_212_p0 = sum_reg_141;
    end else begin
        grp_fu_212_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_212_p1 = tmp_23_reg_590;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_212_p1 = filter_sum_reg_166;
    end else begin
        grp_fu_212_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond8_fu_357_p2))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond7_fu_229_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond9_fu_285_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond2_fu_332_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond8_fu_357_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if ((1'b0 == exitcond1_fu_396_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == exitcond_fu_417_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_100 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_114 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_144 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_169 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_178 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_186 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_232 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_37 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_69 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_86 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign c_3_fu_402_p2 = (c_reg_178 + ap_const_lv3_1);

assign c_cast1_fu_392_p1 = c_reg_178;

assign c_cast_fu_388_p1 = c_reg_178;

assign conv1_weight_address0 = tmp_22_fu_482_p1;

assign exitcond1_fu_396_p2 = ((c_reg_178 == ap_const_lv3_5) ? 1'b1 : 1'b0);

assign exitcond2_fu_332_p2 = ((y_reg_129 == ap_const_lv5_1C) ? 1'b1 : 1'b0);

assign exitcond7_fu_229_p2 = ((n_reg_106 == ap_const_lv3_6) ? 1'b1 : 1'b0);

assign exitcond8_fu_357_p2 = ((m_reg_154 == ap_const_lv2_3) ? 1'b1 : 1'b0);

assign exitcond9_fu_285_p2 = ((x_reg_117 == ap_const_lv5_1C) ? 1'b1 : 1'b0);

assign exitcond_fu_417_p2 = ((r_reg_201 == ap_const_lv3_5) ? 1'b1 : 1'b0);

assign i_index_fu_445_p2 = (tmp2_fu_435_p4 + c_cast1_reg_544);

assign input_r_address0 = tmp_21_fu_477_p1;

assign m_3_fu_363_p2 = (m_reg_154 + ap_const_lv2_1);

assign m_cast_fu_353_p1 = m_reg_154;

assign n_2_fu_235_p2 = (n_reg_106 + ap_const_lv3_1);

assign n_cast_fu_225_p1 = n_reg_106;

assign o_index_cast_fu_349_p1 = $signed(o_index_fu_344_p2);

assign o_index_fu_344_p2 = (y_cast_fu_328_p1 + tmp3_reg_513);

assign output_r_address0 = tmp_16_fu_384_p1;

assign output_r_d0 = sum_reg_141;

assign p_shl2_cast_fu_249_p1 = p_shl2_fu_241_p3;

assign p_shl2_fu_241_p3 = {{n_reg_106}, {ap_const_lv5_0}};

assign p_shl3_cast1_fu_261_p1 = p_shl3_fu_253_p3;

assign p_shl3_cast_fu_265_p1 = p_shl3_fu_253_p3;

assign p_shl3_fu_253_p3 = {{n_reg_106}, {ap_const_lv2_0}};

assign p_shl4_fu_302_p3 = {{tmp_fu_297_p2}, {ap_const_lv5_0}};

assign p_shl5_cast_fu_318_p1 = $signed(p_shl5_fu_310_p3);

assign p_shl5_fu_310_p3 = {{tmp_fu_297_p2}, {ap_const_lv2_0}};

assign p_shl_fu_450_p3 = {{r_reg_201}, {ap_const_lv2_0}};

assign r_2_fu_423_p2 = (r_reg_201 + ap_const_lv3_1);

assign r_cast_fu_413_p1 = r_reg_201;

assign tmp1_fu_429_p2 = (x_reg_117 + r_cast_fu_413_p1);

assign tmp2_fu_435_p4 = {{{m_reg_154}, {tmp1_fu_429_p2}}, {y_reg_129}};

assign tmp3_fu_322_p2 = ($signed(p_shl4_fu_302_p3) - $signed(p_shl5_cast_fu_318_p1));

assign tmp8_fu_408_p2 = (tmp_19_reg_539 + c_cast_fu_388_p1);

assign tmp9_cast_fu_464_p1 = tmp9_fu_458_p2;

assign tmp9_fu_458_p2 = (p_shl_fu_450_p3 + r_cast_fu_413_p1);

assign tmp_12_fu_269_p2 = (p_shl2_cast_fu_249_p1 - p_shl3_cast_fu_265_p1);

assign tmp_13_fu_275_p2 = (p_shl3_cast1_fu_261_p1 - n_cast_fu_225_p1);

assign tmp_16_fu_384_p1 = $unsigned(o_index_cast_reg_526);

assign tmp_18_fu_369_p2 = (m_cast_fu_353_p1 + tmp_13_reg_500);

assign tmp_19_fu_378_p0 = tmp_18_fu_369_p2;

assign tmp_19_fu_378_p2 = ($signed(tmp_19_fu_378_p0) * $signed('h19));

assign tmp_21_fu_477_p1 = i_index_fu_445_p2;

assign tmp_22_fu_482_p1 = $unsigned(w_index_cast_fu_473_p1);

assign tmp_fu_297_p2 = (x_cast_fu_281_p1 + tmp_12_reg_495);

assign w_index_cast_fu_473_p1 = $signed(w_index_fu_468_p2);

assign w_index_fu_468_p2 = (tmp9_cast_fu_464_p1 + tmp8_reg_557);

assign x_3_fu_291_p2 = (x_reg_117 + ap_const_lv5_1);

assign x_cast_fu_281_p1 = x_reg_117;

assign y_3_fu_338_p2 = (y_reg_129 + ap_const_lv5_1);

assign y_cast_fu_328_p1 = y_reg_129;

always @ (posedge ap_clk) begin
    tmp_12_reg_495[1:0] <= 2'b00;
    tmp3_reg_513[1:0] <= 2'b00;
    c_cast1_reg_544[11:3] <= 9'b000000000;
end

endmodule //dut_conv1_1
