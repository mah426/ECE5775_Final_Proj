// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_max_pool_HH_
#define _dut_max_pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_fcmp_32ns_32ns_1_1.h"

namespace ap_rtl {

struct dut_max_pool : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_in< sc_lv<6> > I;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    dut_max_pool(sc_module_name name);
    SC_HAS_PROCESS(dut_max_pool);

    ~dut_max_pool();

    sc_trace_file* mVcdFile;

    dut_fcmp_32ns_32ns_1_1<1,1,32,32,1>* dut_fcmp_32ns_32ns_1_1_U6;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_30;
    sc_signal< sc_lv<4> > O_fu_236_p4;
    sc_signal< sc_lv<4> > O_reg_539;
    sc_signal< sc_lv<11> > O_cast10_cast1_fu_246_p1;
    sc_signal< sc_lv<11> > O_cast10_cast1_reg_545;
    sc_signal< sc_lv<7> > O_cast10_cast_fu_250_p1;
    sc_signal< sc_lv<7> > O_cast10_cast_reg_550;
    sc_signal< sc_lv<12> > i_2_fu_260_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_67;
    sc_signal< sc_lv<8> > I_cast2_fu_271_p1;
    sc_signal< sc_lv<8> > I_cast2_reg_563;
    sc_signal< sc_lv<1> > exitcond3_fu_254_p2;
    sc_signal< sc_lv<13> > I_cast_fu_274_p1;
    sc_signal< sc_lv<13> > I_cast_reg_568;
    sc_signal< sc_lv<8> > next_mul_fu_277_p2;
    sc_signal< sc_lv<8> > next_mul_reg_573;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_85;
    sc_signal< sc_lv<3> > m_1_fu_292_p2;
    sc_signal< sc_lv<3> > m_1_reg_581;
    sc_signal< sc_lv<7> > tmp_2_fu_298_p2;
    sc_signal< sc_lv<7> > tmp_2_reg_586;
    sc_signal< sc_lv<1> > exitcond7_fu_286_p2;
    sc_signal< sc_lv<11> > x_cast6_fu_303_p1;
    sc_signal< sc_lv<11> > x_cast6_reg_591;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_101;
    sc_signal< sc_lv<4> > x_2_fu_312_p2;
    sc_signal< sc_lv<4> > x_2_reg_599;
    sc_signal< sc_lv<13> > tmp_5_cast_fu_326_p1;
    sc_signal< sc_lv<13> > tmp_5_cast_reg_604;
    sc_signal< sc_lv<1> > exitcond4_fu_307_p2;
    sc_signal< sc_lv<4> > y_2_fu_339_p2;
    sc_signal< sc_lv<4> > y_2_reg_612;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_117;
    sc_signal< sc_lv<11> > tmp4_fu_354_p2;
    sc_signal< sc_lv<11> > tmp4_reg_617;
    sc_signal< sc_lv<1> > exitcond2_fu_334_p2;
    sc_signal< sc_lv<11> > o_index_fu_359_p2;
    sc_signal< sc_lv<11> > o_index_reg_622;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_131;
    sc_signal< sc_lv<8> > tmp_6_cast_fu_371_p1;
    sc_signal< sc_lv<8> > tmp_6_cast_reg_627;
    sc_signal< sc_lv<13> > c_cast4_fu_375_p1;
    sc_signal< sc_lv<13> > c_cast4_reg_632;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_142;
    sc_signal< sc_lv<2> > c_2_fu_385_p2;
    sc_signal< sc_lv<2> > c_2_reg_640;
    sc_signal< sc_lv<2> > r_1_fu_405_p2;
    sc_signal< sc_lv<2> > r_1_reg_648;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_153;
    sc_signal< sc_lv<8> > tmp5_fu_417_p2;
    sc_signal< sc_lv<8> > tmp5_reg_653;
    sc_signal< sc_lv<1> > exitcond_fu_399_p2;
    sc_signal< sc_lv<13> > tmp6_fu_425_p2;
    sc_signal< sc_lv<13> > tmp6_reg_658;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_167;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_176;
    sc_signal< sc_lv<32> > input_load_reg_668;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_184;
    sc_signal< sc_lv<1> > tmp_26_fu_231_p2;
    sc_signal< sc_lv<1> > tmp_26_reg_675;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_193;
    sc_signal< sc_lv<32> > max_2_fu_526_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_202;
    sc_signal< sc_lv<12> > i_reg_127;
    sc_signal< sc_lv<3> > m_reg_138;
    sc_signal< sc_lv<8> > phi_mul_reg_149;
    sc_signal< sc_lv<4> > x_reg_161;
    sc_signal< sc_lv<4> > y_reg_172;
    sc_signal< sc_lv<1> > exitcond1_fu_379_p2;
    sc_signal< sc_lv<32> > max_reg_184;
    sc_signal< sc_lv<2> > c_reg_197;
    sc_signal< sc_lv<32> > max_1_reg_208;
    sc_signal< sc_lv<2> > r_reg_220;
    sc_signal< sc_lv<64> > tmp_s_fu_266_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_391_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_439_p1;
    sc_signal< sc_lv<4> > tmp_2_fu_298_p0;
    sc_signal< sc_lv<3> > tmp_2_fu_298_p1;
    sc_signal< sc_lv<5> > tmp_5_fu_318_p3;
    sc_signal< sc_lv<7> > y_cast5_fu_330_p1;
    sc_signal< sc_lv<7> > tmp_fu_345_p2;
    sc_signal< sc_lv<4> > tmp4_fu_354_p0;
    sc_signal< sc_lv<7> > tmp4_fu_354_p1;
    sc_signal< sc_lv<5> > tmp_6_fu_363_p3;
    sc_signal< sc_lv<8> > r_cast3_fu_395_p1;
    sc_signal< sc_lv<8> > tmp1_fu_411_p2;
    sc_signal< sc_lv<6> > tmp6_fu_425_p0;
    sc_signal< sc_lv<8> > tmp6_fu_425_p1;
    sc_signal< sc_lv<13> > tmp2_fu_430_p2;
    sc_signal< sc_lv<13> > i_index_fu_434_p2;
    sc_signal< sc_lv<32> > input_load_to_int_fu_444_p1;
    sc_signal< sc_lv<32> > max_1_to_int_fu_461_p1;
    sc_signal< sc_lv<8> > tmp_19_fu_447_p4;
    sc_signal< sc_lv<23> > tmp_20_fu_457_p1;
    sc_signal< sc_lv<1> > notrhs_fu_485_p2;
    sc_signal< sc_lv<1> > notlhs_fu_479_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_465_p4;
    sc_signal< sc_lv<23> > tmp_22_fu_475_p1;
    sc_signal< sc_lv<1> > notrhs4_fu_503_p2;
    sc_signal< sc_lv<1> > notlhs3_fu_497_p2;
    sc_signal< sc_lv<1> > tmp_23_fu_491_p2;
    sc_signal< sc_lv<1> > tmp_24_fu_509_p2;
    sc_signal< sc_lv<1> > tmp_25_fu_515_p2;
    sc_signal< sc_lv<1> > tmp_27_fu_521_p2;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< sc_lv<11> > tmp4_fu_354_p10;
    sc_signal< sc_lv<13> > tmp6_fu_425_p10;
    sc_signal< sc_lv<7> > tmp_2_fu_298_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_st1_fsm_0;
    static const sc_lv<13> ap_ST_st2_fsm_1;
    static const sc_lv<13> ap_ST_st3_fsm_2;
    static const sc_lv<13> ap_ST_st4_fsm_3;
    static const sc_lv<13> ap_ST_st5_fsm_4;
    static const sc_lv<13> ap_ST_st6_fsm_5;
    static const sc_lv<13> ap_ST_st7_fsm_6;
    static const sc_lv<13> ap_ST_st8_fsm_7;
    static const sc_lv<13> ap_ST_st9_fsm_8;
    static const sc_lv<13> ap_ST_st10_fsm_9;
    static const sc_lv<13> ap_ST_st11_fsm_10;
    static const sc_lv<13> ap_ST_st12_fsm_11;
    static const sc_lv<13> ap_ST_st13_fsm_12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<12> ap_const_lv12_C00;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_I_cast2_fu_271_p1();
    void thread_I_cast_fu_274_p1();
    void thread_O_cast10_cast1_fu_246_p1();
    void thread_O_cast10_cast_fu_250_p1();
    void thread_O_fu_236_p4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_101();
    void thread_ap_sig_117();
    void thread_ap_sig_131();
    void thread_ap_sig_142();
    void thread_ap_sig_153();
    void thread_ap_sig_167();
    void thread_ap_sig_176();
    void thread_ap_sig_184();
    void thread_ap_sig_193();
    void thread_ap_sig_202();
    void thread_ap_sig_30();
    void thread_ap_sig_67();
    void thread_ap_sig_85();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_c_2_fu_385_p2();
    void thread_c_cast4_fu_375_p1();
    void thread_exitcond1_fu_379_p2();
    void thread_exitcond2_fu_334_p2();
    void thread_exitcond3_fu_254_p2();
    void thread_exitcond4_fu_307_p2();
    void thread_exitcond7_fu_286_p2();
    void thread_exitcond_fu_399_p2();
    void thread_i_2_fu_260_p2();
    void thread_i_index_fu_434_p2();
    void thread_input_load_to_int_fu_444_p1();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_1_fu_292_p2();
    void thread_max_1_to_int_fu_461_p1();
    void thread_max_2_fu_526_p3();
    void thread_next_mul_fu_277_p2();
    void thread_notlhs3_fu_497_p2();
    void thread_notlhs_fu_479_p2();
    void thread_notrhs4_fu_503_p2();
    void thread_notrhs_fu_485_p2();
    void thread_o_index_fu_359_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_r_1_fu_405_p2();
    void thread_r_cast3_fu_395_p1();
    void thread_tmp1_fu_411_p2();
    void thread_tmp2_fu_430_p2();
    void thread_tmp4_fu_354_p0();
    void thread_tmp4_fu_354_p1();
    void thread_tmp4_fu_354_p10();
    void thread_tmp4_fu_354_p2();
    void thread_tmp5_fu_417_p2();
    void thread_tmp6_fu_425_p0();
    void thread_tmp6_fu_425_p1();
    void thread_tmp6_fu_425_p10();
    void thread_tmp6_fu_425_p2();
    void thread_tmp_19_fu_447_p4();
    void thread_tmp_1_fu_439_p1();
    void thread_tmp_20_fu_457_p1();
    void thread_tmp_21_fu_465_p4();
    void thread_tmp_22_fu_475_p1();
    void thread_tmp_23_fu_491_p2();
    void thread_tmp_24_fu_509_p2();
    void thread_tmp_25_fu_515_p2();
    void thread_tmp_27_fu_521_p2();
    void thread_tmp_2_fu_298_p0();
    void thread_tmp_2_fu_298_p1();
    void thread_tmp_2_fu_298_p10();
    void thread_tmp_2_fu_298_p2();
    void thread_tmp_5_cast_fu_326_p1();
    void thread_tmp_5_fu_318_p3();
    void thread_tmp_6_cast_fu_371_p1();
    void thread_tmp_6_fu_363_p3();
    void thread_tmp_7_fu_391_p1();
    void thread_tmp_fu_345_p2();
    void thread_tmp_s_fu_266_p1();
    void thread_x_2_fu_312_p2();
    void thread_x_cast6_fu_303_p1();
    void thread_y_2_fu_339_p2();
    void thread_y_cast5_fu_330_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
