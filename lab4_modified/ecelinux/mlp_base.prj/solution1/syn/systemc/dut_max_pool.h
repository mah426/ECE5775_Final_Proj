// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_max_pool_HH_
#define _dut_max_pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_fcmp_32ns_32ns_1_1.h"

namespace ap_rtl {

struct dut_max_pool : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;
    sc_in< sc_lv<6> > M;
    sc_in< sc_lv<6> > I;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    dut_max_pool(sc_module_name name);
    SC_HAS_PROCESS(dut_max_pool);

    ~dut_max_pool();

    sc_trace_file* mVcdFile;

    dut_fcmp_32ns_32ns_1_1<1,1,32,32,1>* dut_fcmp_32ns_32ns_1_1_U11;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_29;
    sc_signal< sc_lv<4> > O_fu_212_p4;
    sc_signal< sc_lv<4> > O_reg_502;
    sc_signal< sc_lv<12> > O_cast9_cast1_fu_222_p1;
    sc_signal< sc_lv<12> > O_cast9_cast1_reg_508;
    sc_signal< sc_lv<8> > O_cast9_cast_fu_226_p1;
    sc_signal< sc_lv<8> > O_cast9_cast_reg_513;
    sc_signal< sc_lv<9> > I_cast2_fu_230_p1;
    sc_signal< sc_lv<9> > I_cast2_reg_518;
    sc_signal< sc_lv<14> > I_cast_fu_234_p1;
    sc_signal< sc_lv<14> > I_cast_reg_523;
    sc_signal< sc_lv<9> > next_mul_fu_238_p2;
    sc_signal< sc_lv<9> > next_mul_reg_528;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_71;
    sc_signal< sc_lv<5> > m_1_fu_256_p2;
    sc_signal< sc_lv<5> > m_1_reg_536;
    sc_signal< sc_lv<8> > tmp_4_fu_262_p2;
    sc_signal< sc_lv<8> > tmp_4_reg_541;
    sc_signal< sc_lv<1> > tmp_3_fu_251_p2;
    sc_signal< sc_lv<12> > x_cast6_fu_267_p1;
    sc_signal< sc_lv<12> > x_cast6_reg_546;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_89;
    sc_signal< sc_lv<4> > x_1_fu_276_p2;
    sc_signal< sc_lv<4> > x_1_reg_554;
    sc_signal< sc_lv<14> > tmp_7_cast_fu_290_p1;
    sc_signal< sc_lv<14> > tmp_7_cast_reg_559;
    sc_signal< sc_lv<1> > exitcond3_fu_271_p2;
    sc_signal< sc_lv<4> > y_1_fu_303_p2;
    sc_signal< sc_lv<4> > y_1_reg_567;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_105;
    sc_signal< sc_lv<12> > tmp3_fu_318_p2;
    sc_signal< sc_lv<12> > tmp3_reg_572;
    sc_signal< sc_lv<1> > exitcond2_fu_298_p2;
    sc_signal< sc_lv<12> > o_index_fu_323_p2;
    sc_signal< sc_lv<12> > o_index_reg_577;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_119;
    sc_signal< sc_lv<9> > tmp_cast_fu_335_p1;
    sc_signal< sc_lv<9> > tmp_cast_reg_582;
    sc_signal< sc_lv<14> > c_cast4_fu_339_p1;
    sc_signal< sc_lv<14> > c_cast4_reg_587;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_130;
    sc_signal< sc_lv<2> > c_1_fu_349_p2;
    sc_signal< sc_lv<2> > c_1_reg_595;
    sc_signal< sc_lv<2> > r_1_fu_369_p2;
    sc_signal< sc_lv<2> > r_1_reg_603;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_141;
    sc_signal< sc_lv<9> > tmp4_fu_381_p2;
    sc_signal< sc_lv<9> > tmp4_reg_608;
    sc_signal< sc_lv<1> > exitcond_fu_363_p2;
    sc_signal< sc_lv<14> > tmp5_fu_389_p2;
    sc_signal< sc_lv<14> > tmp5_reg_613;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_155;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_164;
    sc_signal< sc_lv<32> > input_load_reg_623;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_172;
    sc_signal< sc_lv<1> > tmp_25_fu_207_p2;
    sc_signal< sc_lv<1> > tmp_25_reg_630;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_181;
    sc_signal< sc_lv<32> > max_2_fu_490_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_190;
    sc_signal< sc_lv<5> > m_reg_114;
    sc_signal< sc_lv<9> > phi_mul_reg_125;
    sc_signal< sc_lv<4> > x_reg_137;
    sc_signal< sc_lv<4> > y_reg_148;
    sc_signal< sc_lv<1> > exitcond1_fu_343_p2;
    sc_signal< sc_lv<32> > max_reg_160;
    sc_signal< sc_lv<2> > c_reg_173;
    sc_signal< sc_lv<32> > max_1_reg_184;
    sc_signal< sc_lv<2> > r_reg_196;
    sc_signal< sc_lv<64> > tmp_1_fu_355_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_403_p1;
    sc_signal< sc_lv<6> > m_cast_fu_247_p1;
    sc_signal< sc_lv<4> > tmp_4_fu_262_p0;
    sc_signal< sc_lv<5> > tmp_4_fu_262_p1;
    sc_signal< sc_lv<5> > tmp_7_fu_282_p3;
    sc_signal< sc_lv<8> > y_cast5_fu_294_p1;
    sc_signal< sc_lv<8> > tmp_fu_309_p2;
    sc_signal< sc_lv<4> > tmp3_fu_318_p0;
    sc_signal< sc_lv<8> > tmp3_fu_318_p1;
    sc_signal< sc_lv<5> > tmp_s_fu_327_p3;
    sc_signal< sc_lv<9> > r_cast3_fu_359_p1;
    sc_signal< sc_lv<9> > tmp1_fu_375_p2;
    sc_signal< sc_lv<6> > tmp5_fu_389_p0;
    sc_signal< sc_lv<9> > tmp5_fu_389_p1;
    sc_signal< sc_lv<14> > tmp2_fu_394_p2;
    sc_signal< sc_lv<14> > i_index_fu_398_p2;
    sc_signal< sc_lv<32> > input_load_to_int_fu_408_p1;
    sc_signal< sc_lv<32> > max_1_to_int_fu_425_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_411_p4;
    sc_signal< sc_lv<23> > tmp_19_fu_421_p1;
    sc_signal< sc_lv<1> > notrhs_fu_449_p2;
    sc_signal< sc_lv<1> > notlhs_fu_443_p2;
    sc_signal< sc_lv<8> > tmp_20_fu_429_p4;
    sc_signal< sc_lv<23> > tmp_21_fu_439_p1;
    sc_signal< sc_lv<1> > notrhs5_fu_467_p2;
    sc_signal< sc_lv<1> > notlhs4_fu_461_p2;
    sc_signal< sc_lv<1> > tmp_22_fu_455_p2;
    sc_signal< sc_lv<1> > tmp_23_fu_473_p2;
    sc_signal< sc_lv<1> > tmp_24_fu_479_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_485_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    sc_signal< sc_lv<12> > tmp3_fu_318_p10;
    sc_signal< sc_lv<14> > tmp5_fu_389_p10;
    sc_signal< sc_lv<8> > tmp_4_fu_262_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_st1_fsm_0;
    static const sc_lv<12> ap_ST_st2_fsm_1;
    static const sc_lv<12> ap_ST_st3_fsm_2;
    static const sc_lv<12> ap_ST_st4_fsm_3;
    static const sc_lv<12> ap_ST_st5_fsm_4;
    static const sc_lv<12> ap_ST_st6_fsm_5;
    static const sc_lv<12> ap_ST_st7_fsm_6;
    static const sc_lv<12> ap_ST_st8_fsm_7;
    static const sc_lv<12> ap_ST_st9_fsm_8;
    static const sc_lv<12> ap_ST_st10_fsm_9;
    static const sc_lv<12> ap_ST_st11_fsm_10;
    static const sc_lv<12> ap_ST_st12_fsm_11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_I_cast2_fu_230_p1();
    void thread_I_cast_fu_234_p1();
    void thread_O_cast9_cast1_fu_222_p1();
    void thread_O_cast9_cast_fu_226_p1();
    void thread_O_fu_212_p4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_105();
    void thread_ap_sig_119();
    void thread_ap_sig_130();
    void thread_ap_sig_141();
    void thread_ap_sig_155();
    void thread_ap_sig_164();
    void thread_ap_sig_172();
    void thread_ap_sig_181();
    void thread_ap_sig_190();
    void thread_ap_sig_29();
    void thread_ap_sig_71();
    void thread_ap_sig_89();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_c_1_fu_349_p2();
    void thread_c_cast4_fu_339_p1();
    void thread_exitcond1_fu_343_p2();
    void thread_exitcond2_fu_298_p2();
    void thread_exitcond3_fu_271_p2();
    void thread_exitcond_fu_363_p2();
    void thread_i_index_fu_398_p2();
    void thread_input_load_to_int_fu_408_p1();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_1_fu_256_p2();
    void thread_m_cast_fu_247_p1();
    void thread_max_1_to_int_fu_425_p1();
    void thread_max_2_fu_490_p3();
    void thread_next_mul_fu_238_p2();
    void thread_notlhs4_fu_461_p2();
    void thread_notlhs_fu_443_p2();
    void thread_notrhs5_fu_467_p2();
    void thread_notrhs_fu_449_p2();
    void thread_o_index_fu_323_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_r_1_fu_369_p2();
    void thread_r_cast3_fu_359_p1();
    void thread_tmp1_fu_375_p2();
    void thread_tmp2_fu_394_p2();
    void thread_tmp3_fu_318_p0();
    void thread_tmp3_fu_318_p1();
    void thread_tmp3_fu_318_p10();
    void thread_tmp3_fu_318_p2();
    void thread_tmp4_fu_381_p2();
    void thread_tmp5_fu_389_p0();
    void thread_tmp5_fu_389_p1();
    void thread_tmp5_fu_389_p10();
    void thread_tmp5_fu_389_p2();
    void thread_tmp_18_fu_411_p4();
    void thread_tmp_19_fu_421_p1();
    void thread_tmp_1_fu_355_p1();
    void thread_tmp_20_fu_429_p4();
    void thread_tmp_21_fu_439_p1();
    void thread_tmp_22_fu_455_p2();
    void thread_tmp_23_fu_473_p2();
    void thread_tmp_24_fu_479_p2();
    void thread_tmp_26_fu_485_p2();
    void thread_tmp_3_fu_251_p2();
    void thread_tmp_4_fu_262_p0();
    void thread_tmp_4_fu_262_p1();
    void thread_tmp_4_fu_262_p10();
    void thread_tmp_4_fu_262_p2();
    void thread_tmp_7_cast_fu_290_p1();
    void thread_tmp_7_fu_282_p3();
    void thread_tmp_9_fu_403_p1();
    void thread_tmp_cast_fu_335_p1();
    void thread_tmp_fu_309_p2();
    void thread_tmp_s_fu_327_p3();
    void thread_x_1_fu_276_p2();
    void thread_x_cast6_fu_267_p1();
    void thread_y_1_fu_303_p2();
    void thread_y_cast5_fu_294_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
