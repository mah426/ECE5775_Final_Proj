// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_HH_
#define _dut_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_mlp_xcel.h"
#include "dut_fcmp_32ns_32ns_1_1.h"
#include "dut_input.h"

namespace ap_rtl {

struct dut : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > strm_in_V_V_dout;
    sc_in< sc_logic > strm_in_V_V_empty_n;
    sc_out< sc_logic > strm_in_V_V_read;
    sc_out< sc_lv<32> > strm_out_V_V_din;
    sc_in< sc_logic > strm_out_V_V_full_n;
    sc_out< sc_logic > strm_out_V_V_write;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    dut(sc_module_name name);
    SC_HAS_PROCESS(dut);

    ~dut();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dut_input* input_U;
    dut_mlp_xcel* grp_dut_mlp_xcel_fu_121;
    dut_fcmp_32ns_32ns_1_1<1,1,32,32,1>* dut_fcmp_32ns_32ns_1_1_U28;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_20;
    sc_signal< sc_logic > strm_in_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_41;
    sc_signal< sc_lv<1> > exitcond_fu_145_p2;
    sc_signal< sc_logic > strm_out_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_53;
    sc_signal< sc_lv<12> > i_3_fu_151_p2;
    sc_signal< bool > ap_sig_59;
    sc_signal< sc_lv<32> > grp_dut_mlp_xcel_fu_121_ap_return;
    sc_signal< sc_lv<32> > mlp_result_reg_220;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_69;
    sc_signal< sc_logic > grp_dut_mlp_xcel_fu_121_ap_done;
    sc_signal< sc_lv<1> > tmp_30_fu_202_p2;
    sc_signal< sc_lv<1> > tmp_30_reg_226;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_82;
    sc_signal< sc_lv<12> > input_address0;
    sc_signal< sc_logic > input_ce0;
    sc_signal< sc_logic > input_we0;
    sc_signal< sc_lv<32> > input_d0;
    sc_signal< sc_lv<32> > input_q0;
    sc_signal< sc_logic > grp_dut_mlp_xcel_fu_121_ap_start;
    sc_signal< sc_logic > grp_dut_mlp_xcel_fu_121_ap_idle;
    sc_signal< sc_logic > grp_dut_mlp_xcel_fu_121_ap_ready;
    sc_signal< sc_lv<12> > grp_dut_mlp_xcel_fu_121_input_r_address0;
    sc_signal< sc_logic > grp_dut_mlp_xcel_fu_121_input_r_ce0;
    sc_signal< sc_lv<12> > i_reg_110;
    sc_signal< sc_logic > ap_reg_grp_dut_mlp_xcel_fu_121_ap_start;
    sc_signal< sc_lv<64> > tmp_s_fu_162_p1;
    sc_signal< sc_lv<32> > mlp_result_to_int_fu_167_p1;
    sc_signal< sc_lv<8> > tmp_fu_170_p4;
    sc_signal< sc_lv<23> > tmp_23_fu_180_p1;
    sc_signal< sc_lv<1> > notrhs_fu_190_p2;
    sc_signal< sc_lv<1> > notlhs_fu_184_p2;
    sc_signal< sc_lv<1> > tmp_28_fu_196_p2;
    sc_signal< sc_lv<1> > tmp_29_fu_140_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<12> ap_const_lv12_C00;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_20();
    void thread_ap_sig_41();
    void thread_ap_sig_53();
    void thread_ap_sig_59();
    void thread_ap_sig_69();
    void thread_ap_sig_82();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_exitcond_fu_145_p2();
    void thread_grp_dut_mlp_xcel_fu_121_ap_start();
    void thread_i_3_fu_151_p2();
    void thread_input_address0();
    void thread_input_ce0();
    void thread_input_d0();
    void thread_input_we0();
    void thread_mlp_result_to_int_fu_167_p1();
    void thread_notlhs_fu_184_p2();
    void thread_notrhs_fu_190_p2();
    void thread_strm_in_V_V_blk_n();
    void thread_strm_in_V_V_read();
    void thread_strm_out_V_V_blk_n();
    void thread_strm_out_V_V_din();
    void thread_strm_out_V_V_write();
    void thread_tmp_23_fu_180_p1();
    void thread_tmp_28_fu_196_p2();
    void thread_tmp_30_fu_202_p2();
    void thread_tmp_fu_170_p4();
    void thread_tmp_s_fu_162_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
