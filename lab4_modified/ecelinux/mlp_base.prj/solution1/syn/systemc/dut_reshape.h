// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_reshape_HH_
#define _dut_reshape_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dut_reshape : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    dut_reshape(sc_module_name name);
    SC_HAS_PROCESS(dut_reshape);

    ~dut_reshape();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_23;
    sc_signal< sc_lv<14> > c_cast7_fu_107_p1;
    sc_signal< sc_lv<14> > c_cast7_reg_211;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_48;
    sc_signal< sc_lv<9> > c_1_fu_117_p2;
    sc_signal< sc_lv<9> > c_1_reg_219;
    sc_signal< sc_lv<3> > y_1_fu_129_p2;
    sc_signal< sc_lv<3> > y_1_reg_227;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_59;
    sc_signal< sc_lv<5> > tmp_2_fu_135_p3;
    sc_signal< sc_lv<5> > tmp_2_reg_232;
    sc_signal< sc_lv<1> > exitcond1_fu_123_p2;
    sc_signal< sc_lv<13> > tmp_2_cast_fu_143_p1;
    sc_signal< sc_lv<13> > tmp_2_cast_reg_237;
    sc_signal< sc_lv<3> > x_1_fu_157_p2;
    sc_signal< sc_lv<3> > x_1_reg_245;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_76;
    sc_signal< sc_lv<14> > tmp_5_fu_172_p2;
    sc_signal< sc_lv<14> > tmp_5_reg_250;
    sc_signal< sc_lv<1> > exitcond_fu_151_p2;
    sc_signal< sc_lv<13> > i_index_fu_188_p2;
    sc_signal< sc_lv<13> > i_index_reg_255;
    sc_signal< sc_lv<14> > o_index_fu_193_p2;
    sc_signal< sc_lv<14> > o_index_reg_260;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_92;
    sc_signal< sc_lv<1> > tmp_7_fu_197_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_265;
    sc_signal< sc_lv<9> > c_reg_73;
    sc_signal< sc_lv<3> > y_reg_85;
    sc_signal< sc_lv<1> > exitcond2_fu_111_p2;
    sc_signal< sc_lv<3> > x_reg_96;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_124;
    sc_signal< sc_lv<64> > tmp_8_fu_203_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_207_p1;
    sc_signal< sc_lv<5> > x_cast3_fu_147_p1;
    sc_signal< sc_lv<5> > tmp_4_fu_163_p2;
    sc_signal< sc_lv<5> > tmp_5_fu_172_p0;
    sc_signal< sc_lv<13> > tmp1_fu_178_p4;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<14> > tmp_5_fu_172_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<14> ap_const_lv14_190;
    static const sc_lv<14> ap_const_lv14_1260;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_124();
    void thread_ap_sig_23();
    void thread_ap_sig_48();
    void thread_ap_sig_59();
    void thread_ap_sig_76();
    void thread_ap_sig_92();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_c_1_fu_117_p2();
    void thread_c_cast7_fu_107_p1();
    void thread_exitcond1_fu_123_p2();
    void thread_exitcond2_fu_111_p2();
    void thread_exitcond_fu_151_p2();
    void thread_i_index_fu_188_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_o_index_fu_193_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_tmp1_fu_178_p4();
    void thread_tmp_2_cast_fu_143_p1();
    void thread_tmp_2_fu_135_p3();
    void thread_tmp_4_fu_163_p2();
    void thread_tmp_5_fu_172_p0();
    void thread_tmp_5_fu_172_p00();
    void thread_tmp_5_fu_172_p2();
    void thread_tmp_7_fu_197_p2();
    void thread_tmp_8_fu_203_p1();
    void thread_tmp_9_fu_207_p1();
    void thread_x_1_fu_157_p2();
    void thread_x_cast3_fu_147_p1();
    void thread_y_1_fu_129_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
