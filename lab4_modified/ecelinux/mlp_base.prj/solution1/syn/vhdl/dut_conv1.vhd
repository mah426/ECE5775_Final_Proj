-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_conv1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    M : IN STD_LOGIC_VECTOR (3 downto 0);
    N : IN STD_LOGIC_VECTOR (5 downto 0);
    I : IN STD_LOGIC_VECTOR (6 downto 0);
    L : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dut_conv1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv12_19 : STD_LOGIC_VECTOR (11 downto 0) := "000000011001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_35 : BOOLEAN;
    signal conv1_weight_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv1_weight_ce0 : STD_LOGIC;
    signal conv1_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_weight_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv2_weight_ce0 : STD_LOGIC;
    signal conv2_weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal O_fu_295_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal O_reg_587 : STD_LOGIC_VECTOR (5 downto 0);
    signal O_cast20_cast_fu_301_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal O_cast20_cast_reg_593 : STD_LOGIC_VECTOR (13 downto 0);
    signal O_cast_cast_fu_305_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal O_cast_cast_reg_598 : STD_LOGIC_VECTOR (8 downto 0);
    signal M_cast_fu_309_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal M_cast_reg_603 : STD_LOGIC_VECTOR (6 downto 0);
    signal I_cast4_fu_313_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal I_cast4_reg_608 : STD_LOGIC_VECTOR (7 downto 0);
    signal I_cast_fu_317_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal I_cast_reg_613 : STD_LOGIC_VECTOR (12 downto 0);
    signal next_mul3_fu_321_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_mul3_reg_618 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_99 : BOOLEAN;
    signal n_2_fu_339_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_2_reg_626 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13_fu_345_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_reg_631 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_cast1_fu_350_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_cast1_reg_636 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_117 : BOOLEAN;
    signal x_2_fu_367_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_2_reg_644 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp3_fu_382_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_reg_649 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_15_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_cast1_fu_387_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_cast1_reg_654 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_134 : BOOLEAN;
    signal y_2_fu_404_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_2_reg_662 : STD_LOGIC_VECTOR (4 downto 0);
    signal o_index_fu_410_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal o_index_reg_667 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond2_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul_fu_415_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal next_mul_reg_672 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_150 : BOOLEAN;
    signal m_3_fu_433_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal m_3_reg_680 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_fu_449_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_reg_685 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_cast1_fu_463_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_cast1_reg_690 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_167 : BOOLEAN;
    signal c_2_fu_473_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_2_reg_698 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp7_fu_479_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp7_reg_703 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond1_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_fu_498_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_2_reg_711 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_183 : BOOLEAN;
    signal tmp4_fu_510_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_reg_716 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index_fu_533_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal w_index_reg_721 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp5_fu_541_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp5_reg_726 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_199 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_216 : BOOLEAN;
    signal p_pn_v_fu_565_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_pn_v_reg_746 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_226 : BOOLEAN;
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_pn_reg_756 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_235 : BOOLEAN;
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_244 : BOOLEAN;
    signal n_reg_154 : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul2_reg_165 : STD_LOGIC_VECTOR (6 downto 0);
    signal x_reg_177 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_reg_188 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_reg_199 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_reg_212 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul_reg_223 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_1_reg_235 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_reg_247 : STD_LOGIC_VECTOR (2 downto 0);
    signal sum_2_reg_258 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_reg_270 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_23_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_293 : BOOLEAN;
    signal tmp_27_fu_291_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal n_cast_fu_330_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_345_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_345_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_cast_fu_358_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_cast2_fu_354_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_373_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp3_fu_382_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp3_fu_382_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal y_cast_fu_395_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal y_cast2_fu_391_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal m_cast_fu_424_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal m_cast1_fu_420_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_21_fu_439_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_22_fu_449_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_cast_fu_459_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_cast9_fu_484_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_504_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_515_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_cast8_fu_488_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp6_fu_523_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp6_cast_fu_529_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp5_fu_541_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp5_fu_541_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_fu_551_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_index_fu_555_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp3_fu_382_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp5_fu_541_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_13_fu_345_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_449_p00 : STD_LOGIC_VECTOR (11 downto 0);

    component dut_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_conv1_conv1_weight IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_conv1_conv2_weight IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1_weight_U : component dut_conv1_conv1_weight
    generic map (
        DataWidth => 32,
        AddressRange => 450,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_weight_address0,
        ce0 => conv1_weight_ce0,
        q0 => conv1_weight_q0);

    conv2_weight_U : component dut_conv1_conv2_weight
    generic map (
        DataWidth => 32,
        AddressRange => 2400,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2_weight_address0,
        ce0 => conv2_weight_ce0,
        q0 => conv2_weight_q0);

    dut_fadd_32ns_32ns_32_5_full_dsp_U1 : component dut_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sum_2_reg_258,
        din1 => p_pn_reg_756,
        ce => ap_const_logic_1,
        dout => grp_fu_281_p2);

    dut_fmul_32ns_32ns_32_4_max_dsp_U2 : component dut_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => input_r_q0,
        din1 => p_pn_v_reg_746,
        ce => ap_const_logic_1,
        dout => grp_fu_286_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond_fu_492_p2)))) then 
                c_reg_247 <= c_2_reg_698;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_18_fu_428_p2)))) then 
                c_reg_247 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    m_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond1_fu_467_p2)))) then 
                m_reg_212 <= m_3_reg_680;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond2_fu_399_p2))) then 
                m_reg_212 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    n_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_15_fu_362_p2))) then 
                n_reg_154 <= n_2_reg_626;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                n_reg_154 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    phi_mul2_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_15_fu_362_p2))) then 
                phi_mul2_reg_165 <= next_mul3_reg_618;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_mul2_reg_165 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond1_fu_467_p2)))) then 
                phi_mul_reg_223 <= next_mul_reg_672;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond2_fu_399_p2))) then 
                phi_mul_reg_223 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    r_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                r_reg_270 <= r_2_reg_711;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond1_fu_467_p2))) then 
                r_reg_270 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    sum_1_reg_235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond_fu_492_p2)))) then 
                sum_1_reg_235 <= sum_2_reg_258;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_18_fu_428_p2)))) then 
                sum_1_reg_235 <= sum_reg_199;
            end if; 
        end if;
    end process;

    sum_2_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                sum_2_reg_258 <= grp_fu_281_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond1_fu_467_p2))) then 
                sum_2_reg_258 <= sum_1_reg_235;
            end if; 
        end if;
    end process;

    sum_reg_199_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = exitcond1_fu_467_p2)))) then 
                sum_reg_199 <= sum_1_reg_235;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond2_fu_399_p2))) then 
                sum_reg_199 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond2_fu_399_p2)))) then 
                x_reg_177 <= x_2_reg_644;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_s_fu_334_p2 = ap_const_lv1_0)))) then 
                x_reg_177 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    y_reg_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_18_fu_428_p2))) then 
                y_reg_188 <= y_2_reg_662;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_15_fu_362_p2)))) then 
                y_reg_188 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                    I_cast4_reg_608(6 downto 0) <= I_cast4_fu_313_p1(6 downto 0);
                    I_cast_reg_613(6 downto 0) <= I_cast_fu_317_p1(6 downto 0);
                    M_cast_reg_603(3 downto 0) <= M_cast_fu_309_p1(3 downto 0);
                    O_cast20_cast_reg_593(5 downto 0) <= O_cast20_cast_fu_301_p1(5 downto 0);
                    O_cast_cast_reg_598(5 downto 0) <= O_cast_cast_fu_305_p1(5 downto 0);
                O_reg_587 <= O_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                c_2_reg_698 <= c_2_fu_473_p2;
                    c_cast1_reg_690(2 downto 0) <= c_cast1_fu_463_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                m_3_reg_680 <= m_3_fu_433_p2;
                next_mul_reg_672 <= next_mul_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                n_2_reg_626 <= n_2_fu_339_p2;
                next_mul3_reg_618 <= next_mul3_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond2_fu_399_p2))) then
                o_index_reg_667 <= o_index_fu_410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                p_pn_reg_756 <= grp_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                p_pn_v_reg_746 <= p_pn_v_fu_565_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                r_2_reg_711 <= r_2_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_15_fu_362_p2)))) then
                tmp3_reg_649 <= tmp3_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond_fu_492_p2))) then
                tmp4_reg_716 <= tmp4_fu_510_p2;
                w_index_reg_721 <= w_index_fu_533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                tmp5_reg_726 <= tmp5_fu_541_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = exitcond1_fu_467_p2))) then
                tmp7_reg_703 <= tmp7_fu_479_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_s_fu_334_p2 = ap_const_lv1_0)))) then
                tmp_13_reg_631 <= tmp_13_fu_345_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_18_fu_428_p2)))) then
                tmp_22_reg_685 <= tmp_22_fu_449_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                x_2_reg_644 <= x_2_fu_367_p2;
                    x_cast1_reg_636(4 downto 0) <= x_cast1_fu_350_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                y_2_reg_662 <= y_2_fu_404_p2;
                    y_cast1_reg_654(4 downto 0) <= y_cast1_fu_387_p1(4 downto 0);
            end if;
        end if;
    end process;
    O_cast20_cast_reg_593(13 downto 6) <= "00000000";
    O_cast_cast_reg_598(8 downto 6) <= "000";
    M_cast_reg_603(6 downto 4) <= "000";
    I_cast4_reg_608(7) <= '0';
    I_cast_reg_613(12 downto 7) <= "000000";
    x_cast1_reg_636(7 downto 5) <= "000";
    y_cast1_reg_654(12 downto 5) <= "00000000";
    c_cast1_reg_690(12 downto 3) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_s_fu_334_p2, tmp_15_fu_362_p2, exitcond2_fu_399_p2, tmp_18_fu_428_p2, exitcond1_fu_467_p2, exitcond_fu_492_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_s_fu_334_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = tmp_15_fu_362_p2)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_399_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                if ((ap_const_lv1_0 = tmp_18_fu_428_p2)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_467_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = exitcond_fu_492_p2))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    I_cast4_fu_313_p1 <= std_logic_vector(resize(unsigned(I),8));
    I_cast_fu_317_p1 <= std_logic_vector(resize(unsigned(I),13));
    M_cast_fu_309_p1 <= std_logic_vector(resize(unsigned(M),7));
    O_cast20_cast_fu_301_p1 <= std_logic_vector(resize(unsigned(O_fu_295_p2),14));
    O_cast_cast_fu_305_p1 <= std_logic_vector(resize(unsigned(O_fu_295_p2),9));
    O_fu_295_p2 <= std_logic_vector(signed(ap_const_lv6_3C) + signed(tmp_27_fu_291_p1));

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st2_fsm_1, tmp_s_fu_334_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_fu_334_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_s_fu_334_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_fu_334_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_117_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_117 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_134_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_134 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_150_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_150 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_167_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_167 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_183_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_183 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_199_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_199 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_216_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_216 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_226_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_226 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_235_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_235 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_244_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_244 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_293_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_293 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_35_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_35 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_99_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_99 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_226)
    begin
        if (ap_sig_226) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_235)
    begin
        if (ap_sig_235) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_293)
    begin
        if (ap_sig_293) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_244)
    begin
        if (ap_sig_244) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_35)
    begin
        if (ap_sig_35) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_99)
    begin
        if (ap_sig_99) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_117)
    begin
        if (ap_sig_117) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_134)
    begin
        if (ap_sig_134) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_150)
    begin
        if (ap_sig_150) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_167)
    begin
        if (ap_sig_167) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_183)
    begin
        if (ap_sig_183) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_199)
    begin
        if (ap_sig_199) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_216)
    begin
        if (ap_sig_216) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    c_2_fu_473_p2 <= std_logic_vector(unsigned(c_reg_247) + unsigned(ap_const_lv3_1));
    c_cast1_fu_463_p1 <= std_logic_vector(resize(unsigned(c_reg_247),13));
    c_cast_fu_459_p1 <= std_logic_vector(resize(unsigned(c_reg_247),12));
    conv1_weight_address0 <= tmp_26_fu_546_p1(9 - 1 downto 0);

    conv1_weight_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            conv1_weight_ce0 <= ap_const_logic_1;
        else 
            conv1_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_weight_address0 <= tmp_26_fu_546_p1(12 - 1 downto 0);

    conv2_weight_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            conv2_weight_ce0 <= ap_const_logic_1;
        else 
            conv2_weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_467_p2 <= "1" when (c_reg_247 = ap_const_lv3_5) else "0";
    exitcond2_fu_399_p2 <= "1" when (y_cast_fu_395_p1 = O_reg_587) else "0";
    exitcond_fu_492_p2 <= "1" when (r_reg_270 = ap_const_lv3_5) else "0";
    i_index_fu_555_p2 <= std_logic_vector(unsigned(tmp2_fu_551_p2) + unsigned(y_cast1_reg_654));
    input_r_address0 <= tmp_25_fu_560_p1(13 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    m_3_fu_433_p2 <= std_logic_vector(unsigned(m_reg_212) + unsigned(ap_const_lv3_1));
    m_cast1_fu_420_p1 <= std_logic_vector(resize(unsigned(m_reg_212),7));
    m_cast_fu_424_p1 <= std_logic_vector(resize(unsigned(m_reg_212),4));
    n_2_fu_339_p2 <= std_logic_vector(unsigned(n_reg_154) + unsigned(ap_const_lv5_1));
    n_cast_fu_330_p1 <= std_logic_vector(resize(unsigned(n_reg_154),6));
    next_mul3_fu_321_p2 <= std_logic_vector(unsigned(phi_mul2_reg_165) + unsigned(M_cast_reg_603));
    next_mul_fu_415_p2 <= std_logic_vector(unsigned(phi_mul_reg_223) + unsigned(I_cast4_reg_608));
    o_index_fu_410_p2 <= std_logic_vector(unsigned(y_cast2_fu_391_p1) + unsigned(tmp3_reg_649));
    output_r_address0 <= tmp_23_fu_455_p1(13 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= sum_reg_199;

    output_r_we0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, tmp_18_fu_428_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = tmp_18_fu_428_p2)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_pn_v_fu_565_p3 <= 
        conv2_weight_q0 when (L(0) = '1') else 
        conv1_weight_q0;
    p_shl_fu_515_p3 <= (r_reg_270 & ap_const_lv2_0);
    r_2_fu_498_p2 <= std_logic_vector(unsigned(r_reg_270) + unsigned(ap_const_lv3_1));
    r_cast8_fu_488_p1 <= std_logic_vector(resize(unsigned(r_reg_270),5));
    r_cast9_fu_484_p1 <= std_logic_vector(resize(unsigned(r_reg_270),8));
    tmp1_fu_504_p2 <= std_logic_vector(unsigned(phi_mul_reg_223) + unsigned(r_cast9_fu_484_p1));
    tmp2_fu_551_p2 <= std_logic_vector(unsigned(c_cast1_reg_690) + unsigned(tmp5_reg_726));
    tmp3_fu_382_p0 <= tmp3_fu_382_p00(9 - 1 downto 0);
    tmp3_fu_382_p00 <= std_logic_vector(resize(unsigned(tmp_fu_373_p2),14));
    tmp3_fu_382_p1 <= O_cast20_cast_reg_593(6 - 1 downto 0);
    tmp3_fu_382_p2 <= std_logic_vector(resize(unsigned(tmp3_fu_382_p0) * unsigned(tmp3_fu_382_p1), 14));
    tmp4_fu_510_p2 <= std_logic_vector(unsigned(tmp1_fu_504_p2) + unsigned(x_cast1_reg_636));
    tmp5_fu_541_p0 <= tmp5_fu_541_p00(8 - 1 downto 0);
    tmp5_fu_541_p00 <= std_logic_vector(resize(unsigned(tmp4_reg_716),13));
    tmp5_fu_541_p1 <= I_cast_reg_613(7 - 1 downto 0);
    tmp5_fu_541_p2 <= std_logic_vector(resize(unsigned(tmp5_fu_541_p0) * unsigned(tmp5_fu_541_p1), 13));
    tmp6_cast_fu_529_p1 <= std_logic_vector(resize(unsigned(tmp6_fu_523_p2),12));
    tmp6_fu_523_p2 <= std_logic_vector(unsigned(p_shl_fu_515_p3) + unsigned(r_cast8_fu_488_p1));
    tmp7_fu_479_p2 <= std_logic_vector(unsigned(tmp_22_reg_685) + unsigned(c_cast_fu_459_p1));
    tmp_13_fu_345_p0 <= O_cast_cast_reg_598(6 - 1 downto 0);
    tmp_13_fu_345_p1 <= tmp_13_fu_345_p10(5 - 1 downto 0);
    tmp_13_fu_345_p10 <= std_logic_vector(resize(unsigned(n_reg_154),9));
    tmp_13_fu_345_p2 <= std_logic_vector(resize(unsigned(tmp_13_fu_345_p0) * unsigned(tmp_13_fu_345_p1), 9));
    tmp_15_fu_362_p2 <= "1" when (signed(x_cast_fu_358_p1) < signed(O_reg_587)) else "0";
    tmp_18_fu_428_p2 <= "1" when (signed(m_cast_fu_424_p1) < signed(M)) else "0";
    tmp_21_fu_439_p2 <= std_logic_vector(unsigned(phi_mul2_reg_165) + unsigned(m_cast1_fu_420_p1));
    tmp_22_fu_449_p0 <= tmp_22_fu_449_p00(7 - 1 downto 0);
    tmp_22_fu_449_p00 <= std_logic_vector(resize(unsigned(tmp_21_fu_439_p2),12));
    tmp_22_fu_449_p2 <= std_logic_vector(resize(unsigned(tmp_22_fu_449_p0) * unsigned(ap_const_lv12_19), 12));
    tmp_23_fu_455_p1 <= std_logic_vector(resize(unsigned(o_index_reg_667),64));
    tmp_25_fu_560_p1 <= std_logic_vector(resize(unsigned(i_index_fu_555_p2),64));
    tmp_26_fu_546_p1 <= std_logic_vector(resize(unsigned(w_index_reg_721),64));
    tmp_27_fu_291_p1 <= I(6 - 1 downto 0);
    tmp_fu_373_p2 <= std_logic_vector(unsigned(x_cast2_fu_354_p1) + unsigned(tmp_13_reg_631));
    tmp_s_fu_334_p2 <= "1" when (signed(n_cast_fu_330_p1) < signed(N)) else "0";
    w_index_fu_533_p2 <= std_logic_vector(unsigned(tmp7_reg_703) + unsigned(tmp6_cast_fu_529_p1));
    x_2_fu_367_p2 <= std_logic_vector(unsigned(x_reg_177) + unsigned(ap_const_lv5_1));
    x_cast1_fu_350_p1 <= std_logic_vector(resize(unsigned(x_reg_177),8));
    x_cast2_fu_354_p1 <= std_logic_vector(resize(unsigned(x_reg_177),9));
    x_cast_fu_358_p1 <= std_logic_vector(resize(unsigned(x_reg_177),6));
    y_2_fu_404_p2 <= std_logic_vector(unsigned(y_reg_188) + unsigned(ap_const_lv5_1));
    y_cast1_fu_387_p1 <= std_logic_vector(resize(unsigned(y_reg_188),13));
    y_cast2_fu_391_p1 <= std_logic_vector(resize(unsigned(y_reg_188),14));
    y_cast_fu_395_p1 <= std_logic_vector(resize(unsigned(y_reg_188),6));
end behav;
